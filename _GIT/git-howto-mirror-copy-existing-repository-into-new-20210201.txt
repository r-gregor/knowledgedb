filename: git_howto-mirror-copy-existing-repository-into-new_20210201.txt
https://medium.com/cloud-native-the-gathering/how-to-mirror-copy-an-entire-existing-git-repository-into-a-new-one-3bb8faefad9e
How to Mirror (Copy) an Entire Existing Git Repository Into a New One
Oct 31, 2019
   
   Unless you're a Git god, then you're probably familiar with the process of having to do a slightly
   unusual operation flow with Git but not really knowing how (or not really wanting to mess things up),
   so to Google you go!

   There's absolutely nothing wrong with that - in fact, I honestly think it's better off sometimes to
   focus your memory on other things and leave long, convoluted solutions unmemorized.

   In this article, we're going to go over the operation of mirroring (in other words, completely and
   exactly copying) a Git (whether that is GitHub, GitLab, BitBucket, or some other similar service)
   repository into another one. This means all code, all branches, all commits - everything! I recently
   came across this use case because I had an existing Git repository with a commit history I really
   wanted to keep when moving the code to a new repo.

How to mirror if you already have the original Git repo on your machine
   If you already have the original (or existing or old or before repository- whatever helps drive the
   concept home) repository cloned onto your machine, then simply switch over to that repository in your
   Terminal.

   $> cd original-repository

   Then, it's super simple; Git has a --mirror flag that you can take advantage of! Throw that flag
   after $ git push and then specify the Git web URL of your new repository.

   $> git push --mirror https://gitsite.com/yourusername/new-repository.git

   Be careful - this will push all of your local Git code into the new repository. In other words, it
   will completely overwrite the new repository. Hopefully, that is exactly what you want, but I would
   be remiss if I didn't warn you!

How to mirror if you don't already have the original Git repo on your machine
   OK, slightly different process in that you basically just have to add a step. You first have to get
   the original Git repository on your machine.

   $> git clone --bare https://gitsite.com/yourusername/original-repository.git

   Then, go into the repository.

   $> cd original-repository

   Finally, use the --mirror flag to copy everything in your local Git repository into the new repo.

   $> git push --mirror https://gitsite.com/yourusername/new-repository.git

   I hope this simple Git command helps you - gone are the days where you have to manually copy your
   code over into a new repository and then also have to lose your valuable commit history.

---

