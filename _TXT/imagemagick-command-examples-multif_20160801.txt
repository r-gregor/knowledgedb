filename: /c/Users/gregor.redelonghi/Dropbox/ODPRTO/_TXT/imagemagick-command-examples-multif_20160801.txt
http://www.ubuntubuzz.com/2016/07/bulk-reducing-image-files-size-with-imagemagick-command-lines.html

Bulk Reducing Image Files Size with ImageMagick Command Lines

   If the previous article talked about [13]bulk resizing, this article talks about reducing multiple
   image files size. This can be achieved by many ways. We give some examples in the way of reducing the
   colors (PNG) and using -quality option (JPEG). We separate PNG and JPEG because they have these
   different commands.

1) PNG
   Color 128
   for i in *.png; do convert -verbose -colors 128 "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   Note: this command will reduce the image colors into 128. In our example, every image size reduced
   approximately in half.
   Color 32
   for i in *.png; do convert -verbose -colors 32 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done
   Note: this command will reduce every image colors into 32. In our example, every image size reduced
   approximately 1/5 of the original file.
   [14][Screenshot%2Bfrom%2B2016-07-31%2B13-44-12.png]

2) JPEG
   value=50
   for i in *.jpeg; do convert -verbose -quality 50 "$i" "`echo $i | sed 's/.jpeg/-converted.jpeg/g'`";
   done
   value=20
   for i in *.jpeg; do convert -verbose -quality 20 "$i" "`echo $i | sed 's/.jpeg/-converted.jpeg/g'`";
   done

Sample Results
   value=50 resulting in about 1/4 of the original.
   value=20 resulting in 1/8 of the original.



---
http://www.ubuntubuzz.com/2016/07/bulk-resizing-images-by-resolutions.html

Bulk Resizing Images (By Resolutions) with ImageMagick Command Lines

   [13][template-bulk-resizing-resolution-imagemagick.png]
   If the previous article talked about [14]bulk resizing by percentage, then this article talks about
   the same resizing but by using resolution values.
   Resize to 600x800
   for i in *.png; do convert -verbose -resize 600x400 "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   Resize to 800x600
   for i in *.png; do convert -verbose -resize 800x600 "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   Resize to 1024x768
   for i in *.png; do convert -verbose -resize 1024x768 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done
   
   Resize to 1366x768
   for i in *.png; do convert -verbose -resize 1366x768 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done
   
   Resize to 1600x1200
   for i in *.png; do convert -verbose -resize 1600x1200 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

   

---
http://www.ubuntubuzz.com/2016/07/bulk-resizing-images-with-imagemagick-command-lines.html

Bulk Resizing Images with ImageMagick Command Lines

    [13] [template-bulk-resizing-imagemagick.png]
   If the [14]previous post talked about converting, this post gives examples about resizing.
   ImageMagick has a -resize option to help you resizing images by percentage value. Combining
   ImageMagick's convert -resize command with bash looping resulting in bulk resizing.
   Note: if you want to be precise, just change for example -converted string below with
   -converted-25%.png or -converted-50%.png or -converted-90%.png respectively.
   
   Resize 25%
   for i in *.png; do convert -verbose -resize 25% "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   Resize 50%
   for i in *.png; do convert -verbose -resize 50% "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   Resize 90%
   for i in *.png; do convert -verbose -resize 90% "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   Resize 120%
   for i in *.png; do convert -verbose -resize 120% "$i" "`echo $i | sed 's/.png/-converted.png/g'`";
   done
   
   About GNU sed: if you are wondering about sed commands in here, we recommend you to refer to Episode
   5 of out GNU sed examples.

Sample Result



---
http://www.ubuntubuzz.com/2016/07/bulk-flipping-image-files-with.html

Bulk Flipping Image Files with ImageMagick Command Lines

   If the previous article talked about bulk rotating, then this article talks about bulk flipping. You
   can do it both vertically and horizontally. This can be achieved by using the options -flip and
   -flop. This is also ery usable for you working in e.g. graphic design field.

Vertical (Up to Down)
   for i in *.png; do convert -verbose -flip "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;
   [13][Screenshot%2Bfrom%2B2016-07-31%2B14-21-19.png]

Horizontal (Left to Right)
   for i in *.png; do convert -verbose -flop "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;
   [14][Screenshot%2Bfrom%2B2016-07-31%2B14-23-44.png]

   
   
---
http://www.ubuntubuzz.com/2016/08/6-easy-imagemagick-bulk-processing-command-line-examples.html

6 EASY IMAGEMAGICK BULK PROCESSING COMMAND LINE EXAMPLES

This is a short compilation of 6 bulk processing command line examples from 6 of our previous articles about
bulk images converting, resizing, reducing (file size), rotating, and flipping. Here we mention only the title
and the command lines, without the explanations (but we give a link to the corresponding article), for every
action of processing below. For those don't know, the command lines here are basically just bash looping
commands combined with ImageMagick's convert command lines. 


1. Bulk Converting Images Format

PNG to JPEG:
for i in *.png; do convert -verbose "$i" "`echo $i | sed 's/.png/.jpeg/g'`"; done

JPEG to PNG:
for i in *.jpeg; do convert -verbose "$i" "`echo $i | sed 's/.jpeg/.png/g'`"; done

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-converting-png-or-jpeg-with-imagemagick-command-lines.html.


2. Bulk Resizing (By Percentages)
25%:
for i in *.png; do convert -verbose -resize 25% "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

50%:
for i in *.png; do convert -verbose -resize 50% "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

75%:
for i in *.png; do convert -verbose -resize 75% "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-resizing-images-with-imagemagick-command-lines.html. 

	
3. Bulk Resizing (By Resolutions)

600x400:
for i in *.png; do convert -verbose -resize 600x400 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

800x600:
for i in *.png; do convert -verbose -resize 800x600 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

1024x768:
for i in *.png; do convert -verbose -resize 1024x768 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-resizing-images-by-resolutions.html. 

	
4. Bulk Reducing Files Size

PNG:
for i in *.png; do convert -verbose -colors 128 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done

JPEG:
for i in *.jpeg; do convert -verbose -quality 50 "$i" "`echo $i | sed 's/.jpeg/-converted.jpeg/g'`"; done

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-reducing-image-files-size-with-imagemagick-command-lines.html.

	
5. Bulk Rotating 

120 degrees
for i in *.png; do convert -verbose -rotate 120 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;

45 degrees
for i in *.png; do convert -verbose -rotate 45 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;

75 degrees
for i in *.png; do convert -verbose -rotate 75 "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-rotating-image-files-with-imagemagick-command-lines.html. 

	
6. Bulk Flipping 

Vertical: 
for i in *.png; do convert -verbose -flip "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;

Horizontal: 
for i in *.png; do convert -verbose -flop "$i" "`echo $i | sed 's/.png/-converted.png/g'`"; done;

Corresponding article:
	http://www.ubuntubuzz.com/2016/07/bulk-flipping-image-files-with.html.
	
	
---
