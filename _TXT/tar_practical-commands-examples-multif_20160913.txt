filename: /c/Users/gregor.redelonghi/Dropbox/ODPRTO/_TXT/tar_practical-commands-examples-multif_20160913.txt
http://www.linuxtechi.com/17-tar-command-examples-in-linux/

17 tar command practical examples in Linux

Tar (tape archive ) is the most widely used command in Unix like operating system for creating archive of
multiple files and folders into a single archive file and that archive file can be further compressed using 
gzip and bzip2 techniques. In other words we can say that tar command is used to take backup by archiving
multiple files and directory into a single tar or archive file and later on files & directories can be
extracted from the tar compressed file.

In this article we will discuss 17 practical examples of tar command in Linux.

Syntax of tar command:
	# tar <options> <files>

Note : hyphen ( – ) in the tar command options are optional.

Example: 1 Create a tar archive file
Let’s create a tar file of /etc directory and ‘/root/ anaconda-ks.cfg’ file.
	[root@linuxtechi ~]# tar -cvf myarchive.tar /etc /root/anaconda-ks.cfg
	
Above command will create a tar file with the name “myarchive” in the current folder. Tar file contains all
the files and directories of /etc folder and anaconda-ks.cfg file.

In the tar command ‘-c‘ option specify to create a tar file, ‘-v’ is used for verbose output and ‘-f’ option
is used to specify the archive file name.
	[root@linuxtechi ~]# ls -l myarchive.tar
	-rw-r--r--. 1 root root 22947840 Sep 7 00:24 myarchive.tar
	[root@linuxtechi ~]#

Example:2 List the contents of tar archive file.
Using ‘–t‘ option in tar command we can view the contents of tar files without extracting it.
	[root@linuxtechi ~]# tar -tvf myarchive.tar
	
Listing a specific file or directory from tar file. In the below example i am trying to view whether
‘anaconda-ks.cfg’ file is there in the tar file or not.
	[root@linuxtechi ~]# tar -tvf myarchive.tar root/anaconda-ks.cfg
	-rw------- root/root 953 2016-08-24 01:33 root/anaconda-ks.cfg
	[root@linuxtechi ~]#
	
Example:3 Append or add files to end of archive or tar file.
‘-r‘ option in the tar command is used to append or add file to existing tar file. Let’s add /etc/fstab file
in ‘data.tar‘
	[root@linuxtechi ~]# tar -rvf data.tar /etc/fstab
	
Note: In the Compressed tar file we can’t append file or directory.

Example:4 Extracting files and directories from tar file.
‘-x‘ option is used to extract the files and directories from the tar file. Let’s extract the content of above
created tar file.
	[root@linuxtechi ~]# tar -xvf myarchive.tar
	
This command will extract all the files and directories of myarchive tar file in the current working directory.

Example:5 Extracting tar file to a particular folder.
In case you want to extract tar file to a particular folder or directory then use ‘-C‘ option and after that
specify the path of a folder.
	[root@linuxtechi ~]# tar -xvf myarchive.tar -C /tmp/
	
Example:6 Extracting particular file or directory from tar file.
Let’s assume you want to extract only anaconda-ks.cfg file from the tar file under /tmp folder.
Syntax :
	# tar –xvf {tar-file } {file-to-be-extracted } -C {path-where-to-extract}

	[root@linuxtechi tmp]# tar -xvf /root/myarchive.tar root/anaconda-ks.cfg -C /tmp/
	root/anaconda-ks.cfg
	[root@linuxtechi tmp]# ls -l /tmp/root/anaconda-ks.cfg
	-rw-------. 1 root root 953 Aug 24 01:33 /tmp/root/anaconda-ks.cfg
	[root@linuxtechi tmp]#
	
Example:7 Creating and compressing tar file (tar.gz or .tgz )
Let’s assume that we want to create a tar file of /etc and /opt folder and also want to compress it using gzip
tool. This can be achieved using ‘-z‘ option in tar command. Extensions of such tar files will be either tar.gz or .tgz
	[root@linuxtechi ~]# tar -zcpvf myarchive.tar.gz /etc/ /opt/
Or
	[root@linuxtechi ~]# tar -zcpvf myarchive.tgz /etc/ /opt/
	
Example:8 Creating and compressing tar file ( tar.bz2 or .tbz2 )
Let’s assume that we want to create compressed (bzip2) tar file of /etc and /opt folder. This can be achieved
by using the option ( -j) in the tar command.Extensions of such tar files will be either tar.bz2 or .tbz
	[root@linuxtechi ~]# tar -jcpvf myarchive.tar.bz2 /etc/ /opt/
Or
	[root@linuxtechi ~]# tar -jcpvf myarchive.tbz2 /etc/ /opt/
	
Example:9 Excluding particular files or type while creating tar file.
Using “–exclude” option in tar command we can exclude the particular file or file type while creating tar file.
Let’s assume we want to exclude the file type of html while creating the compressed tar file.
	[root@linuxtechi ~]# tar -zcpvf myarchive.tgz /etc/ /opt/ --exclude=*.html
	
Example:10 Listing the contents of tar.gz or .tgz file
Contents of tar file with the extensions tar.gz or .tgz is viewed by using the option ‘-t’.
Example is shown below :
	[root@linuxtechi ~]# tar -tvf myarchive.tgz  | more 
	............................................. 
	drwxr-xr-x root/root         0 2016-09-07 08:41 etc/ 
	-rw-r--r-- root/root       541 2016-08-24 01:23 etc/fstab 
	-rw------- root/root         0 2016-08-24 01:23 etc/crypttab 
	lrwxrwxrwx root/root         0 2016-08-24 01:23 etc/mtab -> /proc/self/mounts 
	-rw-r--r-- root/root       149 2016-09-07 08:41 etc/resolv.conf 
	drwxr-xr-x root/root         0 2016-09-06 03:55 etc/pki/ 
	drwxr-xr-x root/root         0 2016-09-06 03:15 etc/pki/rpm-gpg/ 
	-rw-r--r-- root/root      1690 2015-12-09 04:59 etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 
	-rw-r--r-- root/root      1004 2015-12-09 04:59 etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-Debug-7 
	-rw-r--r-- root/root      1690 2015-12-09 04:59 etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-Testing-7 
	-rw-r--r-- root/root      3140 2015-09-15 06:53 etc/pki/rpm-gpg/RPM-GPG-KEY-foreman 
	..........................................................

Example:11 Listing the contents of tar.bz2 or .tbz2 file.
Contents of tar file with the extensions tar.bz2 or .tbz2 is viewed by using the option ‘-t’.
Example is shown below :
	[root@linuxtechi ~]# tar -tvf myarchive.tbz2  | more 
	........................................................ 
	rwxr-xr-x root/root         0 2016-08-24 01:25 etc/pki/java/ 
	lrwxrwxrwx root/root         0 2016-08-24 01:25 etc/pki/java/cacerts -> /etc/pki/ca-trust/extracted/java/cacerts 
	drwxr-xr-x root/root         0 2016-09-06 02:54 etc/pki/nssdb/ 
	-rw-r--r-- root/root     65536 2010-01-12 15:09 etc/pki/nssdb/cert8.db 
	-rw-r--r-- root/root      9216 2016-09-06 02:54 etc/pki/nssdb/cert9.db 
	-rw-r--r-- root/root     16384 2010-01-12 16:21 etc/pki/nssdb/key3.db 
	-rw-r--r-- root/root     11264 2016-09-06 02:54 etc/pki/nssdb/key4.db 
	-rw-r--r-- root/root       451 2015-10-21 09:42 etc/pki/nssdb/pkcs11.txt 
	-rw-r--r-- root/root     16384 2010-01-12 15:45 etc/pki/nssdb/secmod.db 
	drwxr-xr-x root/root         0 2016-08-24 01:26 etc/pki/CA/ 
	drwxr-xr-x root/root         0 2015-06-29 08:48 etc/pki/CA/certs/ 
	drwxr-xr-x root/root         0 2015-06-29 08:48 etc/pki/CA/crl/ 
	drwxr-xr-x root/root         0 2015-06-29 08:48 etc/pki/CA/newcerts/ 
	drwx------ root/root         0 2015-06-29 08:48 etc/pki/CA/private/ 
	drwx------ root/root         0 2015-11-20 06:34 etc/pki/rsyslog/ 
	drwxr-xr-x root/root         0 2016-09-06 03:44 etc/pki/pulp/ 
	..............................................................
	
Example:12 Extracting or unzip tar.gz or .tgz files.
tar files with extension tar.gz or .tgz is extracted or unzipped with option ‘-x’ and ‘-z’.
Example is shown below :
	[root@linuxtechi ~]# tar -zxpvf myarchive.tgz -C /tmp/
	
Above command will extract tar file under /tmp folder.

Note : Now a days tar command will take care compression file types automatically while extracting, it means
it is optional for us to specify compression type in tar command. Example is shown below :
	[root@linuxtechi ~]# tar -xpvf myarchive.tgz -C /tmp/
	
Example:13 Extracting or unzip tar.bz2 or .tbz2 files
tar files with the extension tar.bz2 or .tbz2 is extract with option ‘-j’ and ‘-x’. Example is shown below:
	[root@linuxtechi ~]# tar -jxpvf myarchive.tbz2 -C /tmp/
Or
	[root@linuxtechi ~]# tar xpvf myarchive.tbz2 -C /tmp/
	
Example:14 Scheduling backup with tar command
There are some real time scenarios where we have to create the tar files of particular files and directories
for backup purpose on daily basis. Let’s suppose we have to take backup of whole /opt folder on daily basis,
this can be achieved by creating a cron job of tar command. Example is shown below :
	[root@linuxtechi ~]# tar -zcvf optbackup-$(date +%Y-%m-%d).tgz /opt/
	
Create a cron job for above command.

Example:15 Creating compressed archive or tar file with -T and -X option.
There are some real time scenarios where we want tar command to take input from a file and that file will
consists of path of files & directory that are to be archived and compressed, there might some files that we
would like to exclude in the archive which are mentioned in input file.

In the tar command input file is specified after ‘-T’ option and file which consists of exclude list is
specified after ‘-X’ option.

Let’s suppose we want to archive and compress the directories like /etc , /opt and /home and want to exclude
the file ‘/etc/sysconfig/kdump’ and ‘/etc/sysconfig/foreman‘, Create a text file ‘/root/tar-include’
and ‘/root/tar-exclude’ and put the following contents in respective file.
	[root@linuxtechi ~]# cat /root/tar-include
	/etc
	/opt
	/home
	[root@linuxtechi ~]#
	[root@linuxtechi ~]# cat /root/tar-exclude
	/etc/sysconfig/kdump
	/etc/sysconfig/foreman
	[root@linuxtechi ~]#
	
Now run the below command to create and compress archive file.
	[root@linuxtechi ~]# tar zcpvf mybackup-$(date +%Y-%m-%d).tgz -T /root/tar-include -X /root/tar-exclude
	
Example:16 View the size of .tar , .tgz and .tbz2 file.
Use the below commands to view the size of tar and compressed tar files.
	[root@linuxtechi ~]# tar -czf - data.tar | wc -c
	427
	[root@linuxtechi ~]# tar -czf - mybackup-2016-09-09.tgz | wc -c
	37956009
	[root@linuxtechi ~]# tar -czf - myarchive.tbz2 | wc -c
	30835317
	[root@linuxtechi ~]#
	
Example:17 Splitting big tar file into smaller files.
In Unix like operating big file is divided or split into smaller files using split command. Big tar file can
also be divided into the smaller parts using split command.

Let’s assume we want to split ‘mybackup-2016-09-09.tgz‘ file into smaller parts of each 6 MB.

Syntax :  split -b <Size-in-MB> <tar-file-name>.<extension> “prefix-name”

[root@linuxtechi ~]# split -b 6M mybackup-2016-09-09.tgz mybackup-parts
Above command will split the mybackup compressed tar file into the smaller files each of size 6 MB in current
working directory and split file names will starts from mybackup-partsaa … mybackup-partsag. In case if you
want to append numbers in place of alphabets then use ‘-d’ option in above split command.
	[root@linuxtechi ~]# ls -l mybackup-parts*
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsaa
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsab
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsac
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsad
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsae
	-rw-r--r--. 1 root root 6291456 Sep 10 03:05 mybackup-partsaf
	-rw-r--r--. 1 root root 637219  Sep 10 03:05 mybackup-partsag
	[root@linuxtechi ~]#

Now we can move these files into another server over the network and then we can merge all the files into a
single tar compressed file using below mentioned command.
	[root@linuxtechi ~]# cat mybackup-partsa* > mybackup-2016-09-09.tgz
	[root@linuxtechi ~]#
	
That’s all, hope you like different examples of tar command. Please share your feedback and comments.




---
http://www.tutorialspoint.com/unix_commands/tar.htm

tar - Unix, Linux Command

NAME

   tar - The GNU version of the tar archiving utility

SYNOPSIS

   tar <operation> [options]

   Operations:
[-]A --catenate --concatenate
[-]c --create
[-]d --diff --compare
[-]r --append
[-]t --list
[-]u --update
[-]x --extract --get
--delete

   Common Options:
-C, --directory DIR
-f, --file F
-j, --bzip2
-p, --preserve-permissions
-v, --verbose
-z, --gzip

   All Options:
   [ --atime-preserve ] [ -b, --blocking-factor N ] [ -B, --read-full-records ] [ --backup BACKUP-TYPE ]
   [ --block-compress ] [ -C, --directory DIR ] [ --check-links ] [ --checkpoint ] [ -f, --file
   [HOSTNAME:]F ] [ -F, --info-script F --new-volume-script F ] [ --force-local ] [ --format FORMAT ] [
   -g, --listed-incremental F ] [ -G, --incremental ] [ --group GROUP ] [ -h, --dereference ] [ --help ]
   [ -i, --ignore-zeros ] [ --ignore-case ] [ --ignore-failed-read ] [ --index-file FILE ] [ -j, --bzip2
   ] [ -k, --keep-old-files ] [ -K, --starting-file F ] [ --keep-newer-files ] [ -l, --one-file-system ]
   [ -L, --tape-length N ] [ -m, --touch, --modification-time ] [ -M, --multi-volume ] [ --mode
   PERMISSIONS ] [ -N, --after-date DATE, --newer DATE ] [ --newer-mtime DATE ] [ --no-anchored ] [
   --no-ignore-case ] [ --no-recursion ] [ --no-same-permissions ] [ --no-wildcards ] [
   --no-wildcards-match-slash ] [ --null ] [ --numeric-owner ] [ -o, --old-archive, --portability,
   --no-same-owner ] [ -O, --to-stdout ] [ --occurrence[=NUMBER] ] [ --overwrite ] [ --overwrite-dir ] [
   --owner USER ] [ -p, --same-permissions, --preserve-permissions ] [ -P, --absolute-names ] [
   --pax-option KEYWORD-LIST ] [ --posix ] [ --preserve ] [ --acls ] [ --selinux ] [ --xattrs ] [
   --no-acls ] [ --no-selinux ] [ --no-xattrs ] [ -R, --block-number ] [ --record-size SIZE ] [
   --recursion ] [ --recursive-unlink ] [ --remove-files ] [ --rmt-command CMD ] [ --rsh-command CMD ] [
   -s, --same-order, --preserve-order ] [ -S, --sparse ] [ --same-owner ] [ --show-defaults ] [
   --show-omitted-dirs ] [ --strip-components NUMBER, --strip-path NUMBER (1) ] [ --suffix SUFFIX ] [
   -T, --files-from F ] [ --totals ] [ -U, --unlink-first ] [ --use-compress-program PROG ] [ --utc ] [
   -v, --verbose ] [ -V, --label NAME ] [ --version ] [ --volno-file F ] [ -w, --interactive,
   --confirmation ] [ -W, --verify ] [ --wildcards ] [ --wildcards-match-slash ] [ --exclude PATTERN ] [
   -X, --exclude-from FILE ] [ -Z, --compress, --uncompress ] [ -z, --gzip, --gunzip, --ungzip ] [
   -[0-7][lmh] ]

   (1) tar-1.14 uses --strip-path, tar-1.14.90+ uses --strip-components

DESCRIPTION

   This manual page documents the GNU version of tar, an archiving program designed to store and extract
   files from an archive file known as a tarfile. A tarfile may be made on a tape drive, however, it is
   also common to write a tarfile to a normal file. The first argument to tar must be one of the options
   Acdrtux, followed by any optional functions. The final arguments to tar are the names of the files or
   directories which should be archived. The use of a directory name always implies that the
   subdirectories below should be included in the archive.

EXAMPLES

   Tag                             Description
   tar -xvf foo.tar
       verbosely extract foo.tar
   tar -xzf foo.tar.gz
       extract gzipped foo.tar.gz
   tar -cjf foo.tar.bz2 bar/
       create bzipped tar archive of the directory bar called foo.tar.bz2
   tar -xjf foo.tar.bz2 -C bar/
       extract bzipped foo.tar.bz2 after changing directory to bar
   tar -xzf foo.tar.gz blah.txt
       extract the file blah.txt from foo.tar.gz

FUNCTION LETTERS

   Tag                          Description
   One of the following options must be used:
   -A, --catenate, --concatenate
       append tar files to an archive
   -c, --create
       create a new archive
   -d, --diff, --compare
       find differences between archive and file system
   -r, --append
       append files to the end of an archive
   -t, --list
       list the contents of an archive
   -u, --update
       only append files that are newer than the existing in archive
   -x, --extract, --get
       extract files from an archive
   --delete
       delete from the archive (not for use on mag tapes!)

COMMON OPTIONS

   Tag                            Description
   -C, --directory DIR
       change to directory DIR
   -f, --file [HOSTNAME:]F
       use archive file or device F (default "-", meaning stdin/stdout)
   -j, --bzip2
       filter archive through bzip2, use to decompress .bz2 files
   -p, --preserve-permissions
       extract all protection information
   -v, --verbose
       verbosely list files processed
   -z, --gzip, --ungzip
       filter the archive through gzip

ALL OPTIONS

   Tag Description
   --atime-preserve
     don’t change access times on dumped files
   -b, --blocking-factor N
     block size of Nx512 bytes (default N=20)
   -B, --read-full-blocks
     reblock as we read (for reading 4.2BSD pipes)
   --backup BACKUP-TYPE
     backup files instead of deleting them using BACKUP-TYPE simple or numbered
   --block-compress
     block the output of compression program for tapes
   -C, --directory DIR
     change to directory DIR
   --check-links
     warn if number of hard links to the file on the filesystem mismatch the number of links recorded in
   the archive
   --checkpoint
     print directory names while reading the archive
   -f, --file [HOSTNAME:]F
     use archive file or device F (default "-", meaning stdin/stdout)
   -F, --info-script F --new-volume-script F
     run script at end of each tape (implies --multi-volume)
   --force-local
     archive file is local even if has a colon
   --format FORMAT
     selects output archive format
v7 - Unix V7
oldgnu - GNU tar <=1.12
gnu - GNU tar 1.13
ustar - POSIX.1-1988
posix - POSIX.1-2001

   -g, --listed-incremental F
     create/list/extract new GNU-format incremental backup
   -G, --incremental
     create/list/extract old GNU-format incremental backup
   -h, --dereference
     don’t dump symlinks; dump the files they point to
   --help like this manpage, but not as cool
   -i, --ignore-zeros
     ignore blocks of zeros in archive (normally mean EOF)
   --ignore-case
     ignore case when excluding files
   --ignore-failed-read
     don’t exit with non-zero status on unreadable files
   --index-file FILE
     send verbose output to FILE instead of stdout
   -j, --bzip2
     filter archive through bzip2, use to decompress .bz2 files
   -k, --keep-old-files
     keep existing files; don’t overwrite them from archive
   -K, --starting-file F
     begin at file F in the archive
   --keep-newer-files
     do not overwrite files which are newer than the archive
   -l, --one-file-system
     stay in local file system when creating an archive
   -L, --tape-length N
     change tapes after writing N*1024 bytes
   -m, --touch, --modification-time
     don’t extract file modified time
   -M, --multi-volume
     create/list/extract multi-volume archive
   --mode PERMISSIONS
     apply PERMISSIONS while adding files (see chmod(1))
   -N, --after-date DATE, --newer DATE
     only store files newer than DATE
   --newer-mtime DATE
     like --newer, but with a DATE
   --no-anchored
     match any subsequenceof the name’s components with --exclude
   --no-ignore-case
     use case-sensitive matching with --exclude
   --no-recursion
     don’t recurse into directories
   --no-same-permissions
     apply user’s umask when extracting files instead of recorded permissions
   --no-wildcards
     don’t use wildcards with --exclude
   --no-wildcards-match-slash
     wildcards do not match slashes (/) with --exclude
   --null --files-from reads null-terminated names, disable --directory
   --numeric-owner
     always use numbers for user/group names
   -o, --old-archive, --portability
     like --format=v7; -o exhibits this behavior when creating an archive (deprecated behavior)
   -o, --no-same-owner
     do not attempt to restore ownership when extracting; -o exhibits this behavior when extracting an
   archive
   -O, --to-stdout
     extract files to standard output
   --occurrence[=NUMBER]
     process only the NUMBERth occurrence of each file in the archive; this option is valid only in
   conjunction with one of the subcommands --delete, --diff, --extract or --list and when a list of
   files is given either on the command line or via the -T option; NUMBER defaults to 1
   --overwrite
     overwrite existing files and directory metadata when extracting
   --overwrite-dir
     overwrite directory metadata when extracting
   --owner USER
     change owner of extraced files to USER
   -p, --same-permissions, --preserve-permissions
     extract all protection information
   -P, --absolute-names
     don’t strip leading ‘/’s from file names
   --pax-option KEYWORD-LIST
     used only with POSIX.1-2001 archives to modify the way tar handles extended header keywords
   --posix
     like --format=posix
   --preserve
     like --preserve-permissions --same-order
   --acls this option causes tar to store each file’s ACLs in the archive.
   --selinux
     this option causes tar to store each file’s SELinux security context information in the archive.
   --xattrs
     this option causes tar to store each file’s extended attributes in the archive. This option also
   enables --acls and--selinux if they haven’t been set already, due to the fact that the data for those
   are stored in special xattrs.
   --no-acls
     This option causes tar not to store each file’s ACLs in the archive and not to extract any ACL
   information in an archive.
   --no-selinux
     this option causes tar not to store each file’s SELinux security context information in the archive
   and not to extract any SELinux information in an archive.
   --no-xattrs
     this option causes tar not to store each file’s extended attributes in the archive and not to
   extract any extended attributes in an archive. This option also enables --no-acls and --no-selinux if
   they haven’t been set already.
   -R, --record-number
     show record number within archive with each message
   --record-size SIZE
     use SIZE bytes per record when accessing archives
   --recursion
     recurse into directories
   --recursive-unlink
     remove existing directories before extracting directories of the same name
   --remove-files
     remove files after adding them to the archive
   --rmt-command CMD
     use CMD instead of the default /usr/sbin/rmt
   --rsh-command CMD
     use remote CMD instead of rsh(1)
   -s, --same-order, --preserve-order
     list of names to extract is sorted to match archive
   -S, --sparse
     handle sparse files efficiently
   --same-owner
     create extracted files with the same ownership
   --show-defaults
     display the default options used by tar
   --show-omitted-dirs
     print directories tar skips while operating on an archive
   --strip-components NUMBER, --strip-path NUMBER
     strip NUMBER of leading components from file names before extraction

   (1) tar-1.14 uses --strip-path, tar-1.14.90+ uses --strip-components
   --suffix SUFFIX
     use SUFFIX instead of default ’~’ when backing up files
   -T, --files-from F
     get names to extract or create from file F
   --totals
     print total bytes written with --create
   -U, --unlink-first
     remove existing files before extracting files of the same name
   --use-compress-program PROG
     access the archive through PROG which is generally a compression program
   --utc display file modification dates in UTC
   -v, --verbose
     verbosely list files processed
   -V, --label NAME
     create archive with volume name NAME
   --version
     print tar program version number
   --volno-file F
     keep track of which volume of a multi-volume archive its working in FILE; used with --multi-volume
   -w, --interactive, --confirmation
     ask for confirmation for every action
   -W, --verify
     attempt to verify the archive after writing it
   --wildcards
     use wildcards with --exclude
   --wildcards-match-slash
     wildcards match slashes (/) with --exclude
   --exclude PATTERN
     exclude files based upon PATTERN
   -X, --exclude-from FILE
     exclude files listed in FILE
   -Z, --compress, --uncompress
     filter the archive through compress
   -z, --gzip, --gunzip, --ungzip
     filter the archive through gzip
   --use-compress-program PROG
     filter the archive through PROG (which must accept -d)
   -[0-7][lmh]
     specify drive and density

BUGS

   The GNU folks, in general, abhor man pages, and create info documents instead. The maintainer of tar
   falls into this category. Thus this man page may not be complete, nor current, and was included in
   the Red Hat CVS tree because man is a great tool :). This man page was first taken from Debian Linux
   and has since been loving updated here.

REPORTING BUGS

   Please report bugs via https://bugzilla.redhat.com

SEE ALSO

   tar is maintained as a Texinfo manual. If the info and tar programs are properly installed at your
   site, the command
   Tag Description
       info tar
   should give you access to the complete manual.

AUTHORS

Debian Linux [48]http://www.debian.org/
Mike Frysinger <[49]vapier@gentoo.org>
