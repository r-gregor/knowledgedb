filename: sysctl-conf_tutorial_multif_20160620.txt
https://easyengine.io/tutorials/linux/sysctl-conf/

sysctl.conf
Ubuntu server out of box is not optimized to make full use of available hardware. This means “out-of-box”
setup might fail under high load.

So we need to tweak system configuration for maximum concurrancy.

Sysctl Tweaks
Open
vim /etc/sysctl.conf

Add following towards bottom
<code>
	### IMPROVE SYSTEM MEMORY MANAGEMENT ###

	# Increase size of file handles and inode cache
	fs.file-max = 2097152

	# Do less swapping
	vm.swappiness = 10
	vm.dirty_ratio = 60
	vm.dirty_background_ratio = 2

	### GENERAL NETWORK SECURITY OPTIONS ###

	# Number of times SYNACKs for passive TCP connection.
	net.ipv4.tcp_synack_retries = 2

	# Allowed local port range
	net.ipv4.ip_local_port_range = 2000 65535

	# Protect Against TCP Time-Wait
	net.ipv4.tcp_rfc1337 = 1

	# Decrease the time default value for tcp_fin_timeout connection
	net.ipv4.tcp_fin_timeout = 15

	# Decrease the time default value for connections to keep alive
	net.ipv4.tcp_keepalive_time = 300
	net.ipv4.tcp_keepalive_probes = 5
	net.ipv4.tcp_keepalive_intvl = 15

	### TUNING NETWORK PERFORMANCE ###

	# Default Socket Receive Buffer
	net.core.rmem_default = 31457280

	# Maximum Socket Receive Buffer
	net.core.rmem_max = 12582912

	# Default Socket Send Buffer
	net.core.wmem_default = 31457280

	# Maximum Socket Send Buffer
	net.core.wmem_max = 12582912

	# Increase number of incoming connections
	net.core.somaxconn = 4096

	# Increase number of incoming connections backlog
	net.core.netdev_max_backlog = 65536

	# Increase the maximum amount of option memory buffers
	net.core.optmem_max = 25165824

	# Increase the maximum total buffer-space allocatable
	# This is measured in units of pages (4096 bytes)
	net.ipv4.tcp_mem = 65536 131072 262144
	net.ipv4.udp_mem = 65536 131072 262144

	# Increase the read-buffer space allocatable
	net.ipv4.tcp_rmem = 8192 87380 16777216
	net.ipv4.udp_rmem_min = 16384

	# Increase the write-buffer-space allocatable
	net.ipv4.tcp_wmem = 8192 65536 16777216
	net.ipv4.udp_wmem_min = 16384

	# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
	net.ipv4.tcp_max_tw_buckets = 1440000
	net.ipv4.tcp_tw_recycle = 1
	net.ipv4.tcp_tw_reuse = 1
</code>
	
Load Changes
Run following command to load changes to sysctl.
sysctl -p

Useful Systcl Commands
This section is added to main post after Ovidiu’s comment.
Show all system parameters with their values (default or changed)
sysctl -A

Show values of parameters modified by you
sysctl -p

Show value for a single parameter  parameter-name
sysctl parameter-name

Change value for  a single parameter parameter-name without editing sysctl.conf manually.
sysctl -w parameter-name=parameter-value

Above command will overwrite any previous modifications to parameter-name. Also, you may need to surround
parameter-value with quotes.

Related
I do not have in-depth explanation for all parameters. Comments will guide you somewhat.

You can check https://easyengine.io/tutorials/linux/increase-open-files-limit/ for more details about
fs.file-max

Credits
We do not have expertise to tweak linux at such level. So following links helped. They differ from most
configs as they offered some explanation about parameters which helped us understand what we are picking
and why!

http://klaver.it/linux/sysctl.conf
https://github.com/GoTux/Configs/blob/master/99-sysctl.conf


---
http://www.tutorialspoint.com/unix_commands/sysctl.htm

sysctl - Unix, Linux Command

NAME
sysctl - configure kernel parameters at runtime

SYNOPSIS
sysctl [-n] [-e] variable ...
sysctl [-n] [-e] [-q] -w variable=value ...
sysctl [-n] [-e] [-q] -p <filename>
sysctl [-n] [-e] -a
sysctl [-n] [-e] -A

DESCRIPTION
sysctl is used to modify kernel parameters at runtime. The parameters available are those listed under
/proc/sys/. Procfs is required for sysctl(8) support in Linux. You can use sysctl(8) to both read and
write sysctl data.
PARAMETERS
Tag	Description
variable
	The name of a key to read from. An example is kernel.ostype. The ’/’ separator is also accepted
	in place of a ’.’.
variable=value
	To set a key, use the form variable=value, where variable is the key and value is the value to
	set it to. If the value contains quotes or characters which are parsed by the shell, you may
	need to enclose the value in double quotes. This requires the -w parameter to use.
-n	Use this option to disable printing of the key name when printing values.
-e	Use this option to ignore errors about unknown keys.
-N	Use this option to only print the names. It may be useful with shells that have programmable
	completion.
-q	Use this option to not display the values set to stdout.
-w	Use this option when you want to change a sysctl setting.
-p	Load in sysctl settings from the file specified or /etc/sysctl.conf if none given. Specifying -
	as filename means reading data from standard input.
-a	Display all values currently available. Please see the NOTES.
-A	Same as -a

EXAMPLES
Tag		Description
/sbin/sysctl -a
/sbin/sysctl -n kernel.hostname
/sbin/sysctl -w kernel.domainname="example.com"
/sbin/sysctl -p /etc/sysctl.conf

NOTES
Avoid using the -a and -A options if possible. Using these options may result in kernel warnings about
using a deprecated sysctl.
Also please note that modules loaded after sysctl is run may override the settings (example: sunrpc.*
settings are overridden when the sunrpc module is loaded). This may cause some confusion during boot
when the settings in sysctl.conf may be overriden. To prevent such a situation, sysctl must be run
after the particular module is loaded (e.g., from /etc/rc.d/rc.local or by using the install directive
in modprobe.conf)

FILES
/proc/sys /etc/sysctl.conf

---
http://askubuntu.com/questions/103915/how-do-i-configure-swappiness

How do I configure swappiness?
I need a step-by-step, simple and easy way to configure swappiness.

***
One liner sudo bash -c "echo 'vm.swappiness = 15' >> /etc/sysctl.conf" – redanimalwar May 7 '14 at 20:45

***
@redanimalwar you also need to run sudo sysctl -p to load the new swappiness value from the sysctl.conf
file, otherwise the change just applies on the next reboot. – waldyrious Jun 29 '15 at 14:16

***
The Linux kernel provides a tweakable setting that controls how often the swap file is used, called
swappiness

A swappiness setting of zero means that the disk will be avoided unless absolutely necessary (you run out
of memory), while a swappiness setting of 100 means that programs will be swapped to disk almost instantly.

Ubuntu system comes with a default of 60, meaning that the swap file will be used fairly often if the
memory usage is around half of my RAM. You can check your own system's swappiness value by running:

one@onezero:~$ cat /proc/sys/vm/swappiness
60
As I have 4 GB of RAM, so I'd like to turn that down to 10 or 15. The swap file will then only be used
when my RAM usage is around 80 or 90 percent. To change the system swappiness value, open /etc/sysctl.conf
as root. Then, change or add this line to the file:

vm.swappiness = 10
Reboot for the change to take effect

You can also change the value while your system is still running

sysctl vm.swappiness=10
you can also clear your swap by running swapoff -a and then swapon -a as root instead of rebooting to
achieve the same effect.

To calculate your swap Formula

free -m (total) / 100 = A

A * 10

root@onezero:/home/one# free -m
	     total	 used	    free     shared    buffers	   cached
Mem:	      3950	 2262	    1687	  0	   407	      952
-/+ buffers/cache:	  903	    3047
Swap:	      1953	    0	    1953
so total is 3950 / 100 = 39.5 * 10 = 395
so what it mean is that when 10 % 395 MB of ram left then it start using swapiness

What is swappiness
The swappiness parameter controls the tendency of the kernel to move processes out of physical memory
and onto the swap disk. Because disks are much slower than RAM, this can lead to slower response times
for system and applications if processes are too aggressively moved out of memory.

- swappiness can have a value of between 0 and 100
- swappiness=0 : Version 3.5 and over: disables swapiness. Prior to 3.5: tells the kernel to avoid swapping
	processes out of physical memory for as long as possible.
- swappiness=1 : Version 3.5 and over: Minimum swappiness without disabling it entirely
- swappiness=100 tells the kernel to aggressively swap processes out of physical memory and move them to swap
	cache

See http://en.wikipedia.org/wiki/Swappiness

The default setting in Ubuntu is swappiness=60. Reducing the default value of swappiness will probably
improve overall performance for a typical Ubuntu desktop installation. A value of swappiness=10 is
recommended, but feel free to experiment.

Started Using swap at 91%

enter image description here As I have configured my system & vm to make use of ram at 90 % . At 90 %
there was no swapping

after that I opened some application like Firefox & Shutter , its start swapping because of ram usage
is above 90 %

***
Swappiness of 100 does not make programs get swapped out immediately, nor does a value of 60 or 90 mean
swap gets used when ram is 60 or 90% full. It is a ratio of preference for stealing pages from cache
vs. swapping things out to free up some memory when there isn't enough. A low value will strongly prefer
stealing pages from the cache, and a high value strongly prefers to try and swap pages out. The setting
only has any effect once memory is ( nearly ) all used, and the kernel has to choose how to free some
up. 

***
You need to point out that the RAM which is NOT occupied by running programs is used as disk cache... so,
by decreasing swappiness, you increase the chance of a program not to be swapped out, but at the same
time decrease the size of disk cache, which can make disk access slower. So the effects of this setting
on the actual performance are not that straightforward... you're welcome to experiment of course but I
suspect the defaults are set by people who understand enough in the subject :) – Sergey Feb 14 '12 at 0:42

***
@Sergey and the irony of it is that those with small RAM are most likely to try every trick they can
come across to boost performance and are more likely to be the people for whom 60 or even higher would
be the best figure. Those of us setting it to 10 because we've tonnes of RAM aren't gaining as much as
they'll lose if they do so. – Jon Hanna Aug 7 '12 at 1:35

***
Yeah, I did this on an older computer with only 1/2Gb of ram and couldn't figure out what was constantly
grinding my hard drive to a halt. Using iotop I figured out the computer was searching for needed swap that
did not exist. There's way less hard drive activity now that I set it back to 60 and it runs gnome-shell
just fine without getting bogged down. – mchid Mar 12 '14 at 23:18

***
@Sergey do you have a source/reference about unused RAM being used as disk cache for further reading on
the subject? – Freedom_Ben May 14 '14 at 3:55

***
@Freedom_Ben: See linuxatemyram.com :) – Sergey May 14 '14 at 7:16

***
You can read the actual value with just sysctl vm.swappiness – rubo77 Jun 4 '14 at 8:31

***
What if your filesystem cache is managed by ZFS which has their own processes? – CMCDragonkai Jul 25
'14 at 6:35

***
That's a good explanation for the most part, but the recommendation to change the default swappiness
is counter-productive. Making the computer swap less usually causes more I/O because it keeps reloading
useful data that it couldn't keep in the cache. – Gilles Nov 27 '14 at 23:13

***
How does one tell what version of swapiness they have? >= 3.5 – Elijah Lynn Jul 1 '15 at 13:12

***
Ahh, it is kernel version 3.5+, originaly source here percona.com/blog/2014/04/28/… – Elijah Lynn Jul 1
'15 at 13:32

***
My experience with swappiness 10, compared to swappiness 60 on ubuntu 14.04 with 8GB is: I got better
response times. Eclipse is not freezing as often as it used to. Unity freezes and complete lockups do not
occure anymore (they did on a daily basis before). My Disk is working much less, with swappiness 60 I had
fulltime diskoperations as soon as more than 4GB of Ram were used. BUT: I think as a JAVA developer I am
not the intended targetgroup for default setting. No setting is default in my ubuntu setup. Be careful
when changing yours. – mondjunge Jul 3 '15 at 14:15

***
Just leaving a similar discussion here - unix.stackexchange.com/questions/88693/… – Elijah Lynn Nov 4
'15 at 13:59

***
It is also worthy of note that what kind of media on which the swap is stored and how much other traffic
the swap device sees can have HUGE affects on performance. If your swap is stored on rotational media
(HDD) with the running OS, you probably want to swap as little as possible. If on the other hand, swap
is stored on SSD (with or without the running OS), the combination of huge numbers of IOPS and zero seek
time means that swap is vastly more responsive, so using more is fairly harmless. Not as fast as ram,
but not nearly as bad as rotational media. – killermist Dec 2 '15 at 21:51

***
@killermist But at least the conventional wisdom is that swapping is bad for the lifetime of an SSD;
it's typical for tutorials to suggest setting swappiness at 1 for any SSD. Do you know if that's
true? (Conventional wisdom says a lot of things …) – Luke Maurer Dec 6 '15 at 6:44

***
@LukeMaurer Here's another answer about whether to minimize swappiness on SSDs
askubuntu.com/questions/652337/… #TLDR Applies mostly to early SSD, shouldn't be necessary with modern
SSD. – jeremyclarke Mar 10 at 17:48


---
