filename: lftp_sophisticated-ftp-client_20160824.txt
http://www.librebyte.net/en/gnulinux/lftp-a-sophisticated-ftp-client-exploring-the-site/

lftp a sophisticated ftp client – exploring the site

   lftp is a sophisticated ftp client that implements the following features:
     * Handles different protocols: ftp, ftps, sftp, http, hftp, fish and bittorrent (https and ftps
       protocols will be available only if lftp was compiled with GNU TLS or OpenSSL libraries).
     * Every operation is reliable, that is any non-fatal error is handled properly and the operation is
       repeated, for example if a downloading breaks, it will be restarted from where it was, even if
       the ftp server does not support REST command, lftp will try to retrieve the file from the
       beginning until the download is completed.
     * It allows you to run tasks in the background (&).
     * It allows grouping commands using parentheses and launches them in background.
     * You can put a command in background using Ctrl-z an get it back with the wait or fg command (fg
       an alias for wait).
     * Listing running jobs, through command jobs.
     * Commands can be executed conditionally based on termination status of previous command (&&, ||).
     * Autocomplete using Tab key, similar to bash.
     * Listing running jobs, through command jobs.
     * If you exit lftp when some jobs are not finished yet, lftp will move itself to nohup mode in
       background.
     * It allows you to update, upload or download a full directory through the mirror option.
     * With the command at you can schedule tasks.
     * The command queue allows you to queue commands for sequential execution.

   lftp reads configuration directives from /etc/lftp.conf, ~/.lftprc and ~/.lftp/rc where you can put
   aliases and set commands.

Connect to a public ftp site
	$ lftp ftp://openbsd.cs.toronto.edu
	$ lftp
	> open openbsd.cs.toronto.edu

Connect to a restricted ftp site
   There are several ways to connect to a restricted ftp site, here are 4 of them. If you not specify
   the password, lftp will request it (recommended method)
	$ lftp user[:password]@ftp.mysite.com
	$ lftp ftp.mysiteftp.com
	> user username [password]
	$ lftp
	> open ftp.mysite.com
	> user username [password]
	$ lftp
	> open username[:password]@ftp.mysite.com

List the remote content
	> ls

List local content
	> !ls

Show current remote URL
	> pwd

Show current local working directory
	> lpwd

Change remote directory
	> cd remote-dirname

Change local directory
	> lcd local-dirname


---
http://www.librebyte.net/en/ftp/lftp-a-sophisticated-ftp-client-file-handling/

lftp a sophisticated ftp client – file handling

   This entry is part 2 of 2 in the series: [30]lftp a sophisticated ftp client

   In the first part of this series we learned what lftp is and how to execute some basic ftp operations
   as connecting/login/exploring an ftp site; in this part we will learn how to deal with file
   operations: download, upload and change permissions.

Download a file
	> get file-name

Download several files
	> get file1 file2 file3

Specify where you want to save locally
	> get -O my-local-files/ file1 file2

Save with a different local name
	> get file1 -o file1-diff-name
	> get file1 -o file1-diff-name  file2 -o file2-diff-name

Upload a file
	> put local-file-name

Upload multiple files
	> put local-file1 local-file2 local-file3

Specify the remote location where you want to put
	> put -O remote-dir/ login.class.php user.class.php

Save with a different remote name
	> put user.class.php -o admin.class.php
	> put file1 -o file1-different-name file2 -o file2-different-name

Download files using wildcards

   Download all jpeg files from the current remote directory
	> mget *.jpeg

   Download all the txt files from the current remote directory whose name begins with file followed by
   any character
	> mget file?.txt

   Download all txt files from the directory DIR, keeping the directory structure
	> mget -d dir/*.txt

   Download all files from all directories whose name starts with mydir, keeping the directory structure
   (subdirectories are excluded)
	> mget -d mydir*/*

Upload files using wildcards

   Upload all jpeg files from the current local directory
	> mput *.jpeg

   Upload all txt files from the current local directory whose name begins with file followed by any
   character
	> mput file?.txt

Move or rename a file
	> mv source dest

   Rename the file file1.txt to file2.txt
	> mv file1.txt file2.txt

   Move the file file.txt from the current remote directory to doc remote directory (if you do not add a
   trailing /, lftp fails)
	> mv file.txt doc/

Remove a file
	> rm file-name

   Delete all files from the current remote directory (directories are not included)
	> mrm *

Change file permissions, the permissions must be specified in octal mode
	> chmod perms file-name

   Set read and write perms for the owner and group, read perms for the world.
	> chmod 664 README.txt

Viewing the remote file content
	> cat file-name
	> less file-name



---

