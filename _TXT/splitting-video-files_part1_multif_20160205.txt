filename: splitting-video-files_part1_20160205.txt

http://askubuntu.com/questions/35605/splitting-an-mp4-file

Splitting an MP4 file

What is the fastest and least resource consuming method for splitting an MP4 file?

I tried ffmpeg but got an error:
$ ffmpeg -vcodec copy -ss 0 -t 00:10:00 -i /home/asafche/Videos/myVideos/MAH00124.MP4
/home/asafche/Videos/myVideos/eh.mp4
FFmpeg version SVN-r0.5.1-4:0.5.1-1ubuntu1.1, Copyright (c) 2000-2009 Fabrice Bellard, et al.
configuration: --extra-version=4:0.5.1-1ubuntu1.1 --prefix=/usr --enable-avfilter --enable-avfilter-lavf
--enable-vdpau --enable-bzlib --enable-libgsm --enable-libschroedinger --enable-libspeex
--enable-libtheora --enable-libvorbis --enable-pthreads --enable-zlib --disable-stripping --disable-vhook
--enable-runtime-cpudetect --enable-gpl --enable-postproc --enable-swscale --enable-x11grab
--enable-libdc1394 --enable-shared --disable-static
  libavutil     49.15. 0 / 49.15. 0
  libavcodec    52.20. 1 / 52.20. 1
  libavformat   52.31. 0 / 52.31. 0
  libavdevice   52. 1. 0 / 52. 1. 0
  libavfilter    0. 4. 0 /  0. 4. 0
  libswscale     0. 7. 1 /  0. 7. 1
  libpostproc   51. 2. 0 / 51. 2. 0
  built on Mar 31 2011 18:53:20, gcc: 4.4.3

Seems stream 0 codec frame rate differs from container frame rate: 119.88 (120000/1001) -> 59.94 (60000/1001)
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/home/asafche/Videos/myVideos/MAH00124.MP4':
  Duration: 00:15:35.96, start: 0.000000, bitrate: 5664 kb/s
    Stream #0.0(und): Video: h264, yuv420p, 1280x720, 59.94 tbr, 59.94 tbn, 119.88 tbc
    Stream #0.1(und): Audio: aac, 48000 Hz, stereo, s16
Output #0, mp4, to '/home/asafche/Videos/myVideos/eh.mp4':
    Stream #0.0(und): Video: libx264, yuv420p, 1280x720, q=2-31, 90k tbn, 59.94 tbc
    Stream #0.1(und): Audio: 0x0000, 48000 Hz, stereo, s16, 64 kb/s
Stream mapping:
  Stream #0.0 -> #0.0
  Stream #0.1 -> #0.1
Unsupported codec for output stream #0.1
What am I doing wrong and how do I properly split an mp4 file?

***
could you please tell us the reason you need to split the file? Is it to share, or play parts of the
file? Or any other reason? – theTuxRacer Apr 17 '11 at 15:12

***
It is for uploading to youtube, therefore your second suggestion - play parts of the file... – Asaf

***
With ffmpeg you can split file using the following command:
ffmpeg -i ORIGINALFILE.mp4 -acodec copy -vcodec copy -ss START -t LENGTH OUTFILE.mp4

where START is starting positing in seconds or in format hh:mm:ss LENGTH is the chunk length in seconds
or in format hh:mm:ss

So you will need to run this command few times depending on how long your video. If let's say your video
is 31 minutes long and you want so split into 15 min chunks here is how you run it:
ffmpeg -i ORIGINALFILE.mp4 -acodec copy -vcodec copy -ss 0 -t 00:15:00 OUTFILE-1.mp4
ffmpeg -i ORIGINALFILE.mp4 -acodec copy -vcodec copy -ss 00:15:00 -t 00:15:00 OUTFILE-2.mp4
ffmpeg -i ORIGINALFILE.mp4 -acodec copy -vcodec copy -ss 00:30:00 -t 00:15:00 OUTFILE-3.mp4

There is a python script that you can use that does this automatically(i.e. takes
video file, chunk size in seconds and generates individual playable video files):
http://icephoenix.us/notes-for-myself/auto-splitting-video-file-in-equal-chunks-with-ffmpeg-and-python/

***
This worked for me: ffmpeg -ss 00:05:00 -t 00:16:00 -i largfile.MP4 -acodec copy -vcodec copy smallfile.MP4
can someone explain why? – Asaf Chertkoff Apr 18 '11 at 4:22

***
I am going to speculate here a bit, but it looks like your source file is encoded with framerate that
libx264 does not support, so it skips frames. I think this should work fine, but there might be some
mishaps with audio because of this. – Alex Apr 18 '11 at 18:14

maybe. will see... – Asaf Chertkoff Apr 18 '11 at 21:27

***
Asaf's command worked for me too. It would seem that the codec options should come after the inputfile. –

***
If you prefer using a gui there is avidemux available in the repositories. Defining the cut points is
much easier this way !

The selection markers define the part of the video that will be exported, using "copy" in audio and
video avoids reencoding. You can also choose the container or change it (avi, mp4, mkv, etc).

I've done a bunch of cuts on some videos from a camera and it was instantaneous!

***
Not sure what your need is, but you can type this in a terminal: To open a terminal, press Ctrl + Alt + T
split -b 4M file.mp4 part_file

This will split the files into chunks of 4 megabytes. TO recreate the file again, type
cat part_file[a-c] > file.mp4

Notice that i have typed a-cin the bracket, because the split created 3 files. in your case you might
have to see more. I will explain with an example.
$ ls -lh
-rwxr-xr-x 1 root	 root	     9.3M 2011-04-17 20:09 file.mp4

This shows that I have a single file, of 9.3 MB. To split, I type:
$ split -b 2M file.mp4 part_file

After splitting, I get the files as:
$ ls -lh
-rwxr-xr-x 1 root	 root	     9.3M 2011-04-17 20:09 file.mp4
-rw-r--r-- 1 thetuxracer thetuxracer 2.0M 2011-04-17 20:12 part_fileaa
-rw-r--r-- 1 thetuxracer thetuxracer 2.0M 2011-04-17 20:12 part_fileab
-rw-r--r-- 1 thetuxracer thetuxracer 2.0M 2011-04-17 20:12 part_fileac
-rw-r--r-- 1 thetuxracer thetuxracer 2.0M 2011-04-17 20:12 part_filead
-rw-r--r-- 1 thetuxracer thetuxracer 1.3M 2011-04-17 20:12 part_fileae

Notice the two characters appended to the filename.

To get the file back:
$ cat part_filename[start-end][start-end] > file.mp4

***
This method will be very quick but won't allow you to play the individual chunks. You can use ffmpeg
to extract parts of a video file but to split it automatically into many small chunks which are all
individually playable without reassembling them into a whole you'll probably need to write a script with
an mp4 file. I can give you an example if you like, but if its just to move the file around then this
answer is good. – Slipstream Apr 17 '11 at 15:11

***
You got it right - i need to split it for youtube. my camera is producing MP4 but i need
to split those cause they are longer then the 15 min allowed. – Asaf Chertkoff Apr 17 '11 at 17:24

***
then you want alex's answer below... – Slipstream Apr 17 '11 at 22:28

***
If this is an MP4 part 2, then with a very meticulous approach, you can proceed the file without
encoder/decoder. This answer is intended for people with a programming background and an hex editor that
want to keep the file ""intact"".

The first part of the file is a mdat, the second is a moov, containing metadata used by the decoder to
locate chunks, which contain samples (encoded images and sound, not important to know). Then there are
STCO, STTS, STSC, etc. This is called "atoms". They indicate what are the offset, length, etc, of each of
the chunks. If you do a clean job, you can make several instances of your video, and different version
with different chunks. The file will then be playable in players, and digested on video websites. If
you're a coder, then build an MP4 parser or use an existing one to keep track of the parts and their
offsets. That will help you to know more about the format, and to rebuild files automatically.


***
Use mkvmerge from the mkvtoolnix package. Use something like

mkvmerge -o outputprefix --split 1G origfile.mp4

This would split your file in 1 GB blocks. You can use time-indications as well.



---
http://ubuntuforums.org/showthread.php?t=2171742

Thread: Split video files (.mp4, .avi, .wmv, .mkv)

***
Hi,

I try to split videos on Ubuntu 12.10 and I found MKVmerge for splitting matroska (.mkv) and Avidemux
for splitting avi files.

Could you tell me what software (or commands) I can use to split .mp4 and .wmv files please ?

Thanks for your help.

***
Re: Split video files (.mp4, .avi, .wmv, .mkv)
Hello,

you can try ffmpeg for the mp4 files
ffmpeg -acodec copy -vcodec copy -ss START -t LENGTH -i ORIGINALFILE.mp4 OUTFILE.mp4

found it in less then a minute google search http://askubuntu.com/questions/35605...ng-an-mp4-file
Avidemux can handle wmv since version 2.3.0 if you have all codecs installed.
sudo apt-get install non-free-codecs

***
Re: Split video files (.mp4, .avi, .wmv, .mkv)
Thanks for your help.

For FFMpeg, that I use, I consider that it's not a really split, but a conversion that allows multiple
small files in output. The problem is that conversion is much longer than a split.

I didn't know for wmv and avidemux, thanks!

***
Re: Split video files (.mp4, .avi, .wmv, .mkv)
I don't know about wmv. I suppose you could just use VirtualDub in Wine/Windows. Avidemux should work
with mp4, surely?

***
Re: Split video files (.mp4, .avi, .wmv, .mkv)
you can use ffmpeg or mencoder to split video file in multiple sections

use same input file add "&&" between cuts and do as many sections as you need to
First time entry is where you start from. Second time entry the duration you require
ffmpeg -i INPUT.mp4 -ss 00:35:54 -t 00:04:12 -vcodec copy -acodec copy OUTPUT1.mp4 && ffmpeg -i INPUT
-ss 01:14:14 -t 00:14:10 -vcodec copy -acodec copy OUTPUT2.mp4 && etc...

or
mencoder -ss 01:00:00 -endpos 00:05:56 -oac copy -ovc copy INPUT.mp4 -o OUTPUT1.mp4 && mencoder -ss
01:20:00 -endpos 00:05:56 -oac copy -ovc copy INPUT.mp4 -o OUTPUT2.mp4 && etc...

IN MY PERSONAL experience mencoder is more stable for this task

***
Re: Split video files (.mp4, .avi, .wmv, .mkv)
Thanks a lot everyone.
And mea culpa for my for my wrong remark on FFmpeg : if we use "-vcodec copy -acodec copy" and we have
the same format in the input and output, FFmpeg split correctly the file (and don't convert as I thought).
rai_shu2> I can't use VirtualDub beacause I need use tools with command lines, but thanks for the idea.
Last edited by marfin2; September 8th, 2013 at 09:44 PM.


---
http://www.dynacont.net/documentation/linux/Cutting_video_files/

How to Cut/Split Video using Avidemux
Avidemux [http://www.avidemux.org/] is a graphical tool to edit videos. It can open AVI, openDML,
MPEG, Nuppelvideo, and BMPs. Most common codecs are supported (M-JPEG, MPEG, DivX, Xvid, huffyuv, WMA,
etc.) thanks to libavcodec and libmpeg2. Video can be edited, cut, appended, filtered (resize/crop/denoise),
and re-encoded to either AVI (MPEG4/MJPEG) or MPEG 1/2. The Spidermonkey Javascript engine is used to
give powerful scripting capabilities.

To split a file or a section of a file do the following:
Open and select the file you want to split (File / Open). Then, with the bar below, select the point where we
want to start our video and clicking on the letter A using icon  ( or press [ ) and mark point B 
( or press ] ) where you want to end (cut) your video. Finally from the menu select File / Save / Save Video.



---
http://stackoverflow.com/questions/5651654/ffmpeg-how-to-split-video-efficiently

FFmpeg: How to split video efficiently?

I wish to split a large avi video into two smaller consecutive videos. I am using ffmpeg.

One way is to run ffmpeg two times:
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 output1.avi
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:30:00 -t 00:30:00 output2.avi

But according to manpage of ffmpeg, I can make more than one ouput file from one input file using just
one line:
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 output1.avi \
   -vcodec copy -acodec copy -ss 00:30:00 -t 00:30:00 output2.avi
   
My question is, does the later approach save computation time and memory?

***
when using the "-vcodec copy -acodec copy" it is very fast:)) – Savas Adar May 2 '12 at 20:39

***
@Antony, Why don't you time both versions (and look at the memory monitor such as htop), and tell us
what the answer is? – AlcubierreDrive Jul 3 '13 at 19:01

***
The first example does it sequentially, while the second example uses threads. Both will do the same thing,
no noticeable speedups should occur. But to simplify things, you might use ffmpeg stream segmenter muxer:

***
The ffmpeg wiki links back to this page in reference to "How to split video efficiently". I'm not
convinced this page answers that question, so I did as @AlcubierreDrive suggested…

echo "Two commands"
time ffmpeg -v quiet -y -i input.ts -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 -sn test1.mkv
time ffmpeg -v quiet -y -i input.ts -vcodec copy -acodec copy -ss 00:30:00 -t 01:00:00 -sn test2.mkv
echo "One command"
time ffmpeg -v quiet -y -i input.ts -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 \
  -sn test3.mkv -vcodec copy -acodec copy -ss 00:30:00 -t 01:00:00 -sn test4.mkv
Which outputs...

Two commands
real	0m16.201s
user	0m1.830s
sys 0m1.301s

real	0m43.621s
user	0m4.943s
sys 0m2.908s

One command
real	0m59.410s
user	0m5.577s
sys 0m3.939s

I tested a SD & HD file, after a few runs & a little maths.

Two commands SD 0m53.94 #2 wins
One command  SD 0m49.63

Two commands SD 0m55.00
One command  SD 0m52.26 #1 wins

Two commands SD 0m58.60 #2 wins
One command  SD 0m58.61

Two commands SD 0m54.60
One command  SD 0m50.51 #1 wins

Two commands SD 0m53.94
One command  SD 0m49.63 #1 wins

Two commands SD 0m55.00
One command  SD 0m52.26 #1 wins

Two commands SD 0m58.71
One command  SD 0m58.61 #1 wins

Two commands SD 0m54.63
One command  SD 0m50.51 #1 wins

Two commands SD 1m6.67s #2 wins
One command  SD 1m20.18

Two commands SD 1m7.67
One command  SD 1m6.72 #1 wins

Two commands SD 1m4.92
One command  SD 1m2.24 #1 wins

Two commands SD 1m1.73
One command  SD 0m59.72 #1 wins

Two commands HD 4m23.20
One command  HD 3m40.02 #1 wins

Two commands SD 1m1.30
One command  SD 0m59.59 #1 wins

Two commands HD 3m47.89
One command  HD 3m29.59 #1 wins

Two commands SD 0m59.82
One command  SD 0m59.41 #1 wins

Two commands HD 3m51.18
One command  HD 3m30.79 #1 wins

SD file = 1.35GB DVB transport stream
HD file = 3.14GB DVB transport stream

Conclusion
The single command is better if you are handling HD, it agrees with the manuals comments on using -ss
after the input file to do a 'slow seek'. SD files have a negligible difference.

The two command version should be quicker by adding another -ss before the input file for the a 'fast
seek' followed by the more accurate slow seek.

***
Works perfect, kudos to your effort! – Kartos Jan 3 '14 at 3:22

***
If TS contain multiple program (TV programs that captured by DVB-T), how can split it? For example I have
a TS file that contain football + cooking + cartoon .How can i split this TS file to 3 mpg files? –

***
Here's a useful script, it helps you split automatically: A script for splitting videos using ffmpeg

<code>
#!/bin/bash

# Written by Alexis Bezverkhyy <alexis@grapsus.net> in 2011
# This is free and unencumbered software released into the public domain.
# For more information, please refer to <http://unlicense.org/>

function usage {
	echo "Usage : ffsplit.sh input.file chunk-duration [output-filename-format]"
	echo -e "\t - input file may be any kind of file reconginzed by ffmpeg"
	echo -e "\t - chunk duration must be in seconds"
	echo -e "\t - output filename format must be printf-like, for example myvideo-part-%04d.avi"
	echo -e "\t - if no output filename format is given, it will be computed\
 automatically from input filename"
}

IN_FILE="$1"
OUT_FILE_FORMAT="$3"
typeset -i CHUNK_LEN
CHUNK_LEN="$2"

DURATION_HMS=$(ffmpeg -i "$IN_FILE" 2>&1 | grep Duration | cut -f 4 -d ' ')
DURATION_H=$(echo "$DURATION_HMS" | cut -d ':' -f 1)
DURATION_M=$(echo "$DURATION_HMS" | cut -d ':' -f 2)
DURATION_S=$(echo "$DURATION_HMS" | cut -d ':' -f 3 | cut -d '.' -f 1)
let "DURATION = ( DURATION_H * 60 + DURATION_M ) * 60 + DURATION_S"

if [ "$DURATION" = '0' ] ; then
	echo "Invalid input video"
	usage
	exit 1
fi

if [ "$CHUNK_LEN" = "0" ] ; then
	echo "Invalid chunk size"
	usage
	exit 2
fi

if [ -z "$OUT_FILE_FORMAT" ] ; then
	FILE_EXT=$(echo "$IN_FILE" | sed 's/^.*\.\([a-zA-Z0-9]\+\)$/\1/')
	FILE_NAME=$(echo "$IN_FILE" | sed 's/^\(.*\)\.[a-zA-Z0-9]\+$/\1/')
	OUT_FILE_FORMAT="${FILE_NAME}-%03d.${FILE_EXT}"
	echo "Using default output file format : $OUT_FILE_FORMAT"
fi

N='1'
OFFSET='0'
let 'N_FILES = DURATION / CHUNK_LEN + 1'

while [ "$OFFSET" -lt "$DURATION" ] ; do
	OUT_FILE=$(printf "$OUT_FILE_FORMAT" "$N")
	echo "writing $OUT_FILE ($N/$N_FILES)..."
	ffmpeg -i "$IN_FILE" -vcodec copy -acodec copy -ss "$OFFSET" -t "$CHUNK_LEN" "$OUT_FILE"
	let "N = N + 1"
	let "OFFSET = OFFSET + CHUNK_LEN"
done
</code>


***
Same comment goes for you as for SEARAS. Writing batch files is useful when absolutely needed and when
you have no other option available, because it is not portable. You won't be able to run the same script
on Windows, for example. When there are more generic/portable ways, batch scripts should be avoided,
to save the time needed to port them. Since ffmpeg has multiple ways to solve this issue, the proper
way would be to use ffmpeg alone, without the help of scripts. – Mladen B. Aug 24 '13 at 10:00

***
http://ffmpeg.org/trac/ffmpeg/wiki/Seeking%20with%20FFmpeg may also be useful to you. Also ffmpeg has
a segment muxer that might work.

Anyway my guess is that combining them into one command would save time.

***
does the later approach save computation time and memory?
There is no big difference between those two examples that you provided. The first example cuts the
video sequentially, in 2 steps, while the second example does it at the same time (using threads). No
particular speed-up will be noticeable. You can read more about creating multiple outputs with FFmpeg

Further more, what you can use (in recent FFmpeg) is the stream segmenter muxer which can:

output streams to a number of separate files of nearly fixed duration. Output filename pattern can be
set in a fashion similar to image2.

***
Didn't test ist, but this looks promising:

Basic stream segmenter
It is obviously splitting AVI into segments of same size, which implies these chunks don't loose quality
or increase memory or must be recalculated.

It also uses the codec copy - does that mean it can handle very large streams ? Because this is my problem,
i want to break down my avi so i could use a filter to get rid of the distorsion. But a whole avi runs
for hours.

***
It turns out that the file size(s) in later case would be proportionally equivalent of the time slice.



---
http://softwarerecs.stackexchange.com/questions/3382/tool-to-split-mp4-videos

Tool to split MP4 videos

I'm looking for a tool which can split MP4 video files. I have tried Any Video Converter but find that it is
unreliable and forces choices on frame size but does not always allow me to choose the existing frame size.

What I want is something very simple:

- Runs on Windows 7
- Takes an MP4 file as input
- Takes a desired file size as input
- Outputs multiple videos (video_1.mp4, video_2.mp4, etc.) which have the same frame size, same codec
  (h264, etc.) with a maximum file size as specified
- Can be command-line or graphical (but prefer graphical)
- Is free

This seems so simple but I see a lot people talking about a lot of problems with a lot of programs.

***
You can use FFmpeg:

Free, open-source and widely used
Supports most video formats
Runs on Windows, Linux and Mac.
Allows to cut:

Running ffmpeg two times:
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 output1.avi
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:30:00 -t 00:30:00 output2.avi

Or in one command:
ffmpeg -i input.avi -vcodec copy -acodec copy -ss 00:00:00 -t 00:30:00 output1.avi \
   -vcodec copy -acodec copy -ss 00:30:00 -t 00:30:00 output2.avi
   
Allows to specify the output's max size: ‘-fs limit_size (output)’
Is CLI so you can batch.

***
Could you please expand about what are those lines for? – Sopalajo de Arrierez Nov 21 '14 at 11:52

***
What a question in a comment... -i <inputfile> should be obvious. -vcodec copyand -acodec copy tell
ffmpeg to use stream copying instead of transcoding. -ss <time> tells ffmpeg at which time to start and
-ttells it how long a video to create. Reading the documentation would have explained that in much more
detail. – St0fF Nov 9 '15 at 22:27

***
A good freeware application for splitting and cutting video files (including mp4) is Avidemux. It supports
a lot of formats and it is multiplatform. You can modify frame size, framerate, codec as you desire. You
can also calculate output file size before you begin encoding it. If you only cut/split video without
changing codecs it is very fast!



---
http://unix.stackexchange.com/questions/148602/ffmpeg-split-video-multiple-parts

FFmpeg - Split video multiple parts

I read the following thread, and the solution works if I want to split a video into pieces every two
minutes: Split video file into pieces with ffmpeg

The problem is that I want to split a video into pieces every 15 seconds.

When I use the following command:
for i in {00..49}
 do ffmpeg -i fff.avi -sameq -ss 00:$[ i*2 ]:00 -t 00:00:15 output_$i.avi
done

it will output 15-second video sequences, but not in order. It will skip parts of the video, so I end
up with a few 15 second clips, but not all the clips. I want to be able to use ffmpeg to split any video
I throw at it into many pieces based on the time I give it.

***
I found the answer. It turns out I was having problems because I didn't have the proper FFmpeg installed,
but a fork of ffmpeg.

This code works for me:
ffmpeg -i fff.avi -acodec copy -f segment -segment_time 10 -vcodec copy -reset_timestamps 1 -map 0 \
	-an fff%d.avi

fff.avi is the name of the source clip. Change -segment_time 10 to the general duration you want for
each segment. If you want each clip to be about 40 seconds, then use -segment_time 40. Use -an if you
don't want the resulting clips to have sound.
