filename: howto_find-sudo-users-linux-system_20230803.txt
https://ostechnix.com/find-sudo-users-linux-system/

How To Find All Sudo Users In Linux

Sudo Users: Who They Are and How to Find Them in Linux and Unix.
August 2, 2023

   As a Linux administrator, you must know how to add, delete and grant sudo privileges to users.
   Sometimes, you may give temporary sudo access to regular users for specific tasks like software
   installation or administrative work. Over the time, you might forget to revoke the sudo privileges.
   To ensure security, it's a good practice to periodically check for super users with sudo access on
   your Linux system. If you find any forgotten or unnecessary sudo access, you can simply revoke them.
   This brief guide explains how to find all sudo users in Linux and Unix-like operating systems.

Display All Users
   Let us first list all users in the system. To do so, run:

$> awk -F':' '{ print $1}' /etc/passwd

   Sample output from my Ubuntu system:
root
daemon
bin
sys
sync
games
man
lp
mail
news
uucp
proxy
www-data
backup
list
irc
gnats
nobody
systemd-timesync
systemd-network
systemd-resolve
systemd-bus-proxy
syslog
_apt
lxd
messagebus
uuidd
dnsmasq
sshd
sk
senthil
kumar
ostechnix

   Another way to list all users in a Linux system is:
$> compgen -u

List Sudo Users in Linux
   In most Linux distributions, members of the "sudo" or "wheel" group are granted sudo privileges. To
   see the members of the "sudo" group, you can use the getent command or simply list the contents of
   the /etc/group file:

   To find all sudo or super users in Linux, use getent command like below:
$> getent group sudo

   Sample output:
sudo:x:27:sk,ostechnix

   Explanation of the output:
     * sudo: This is the name of the group. In this case, it is the sudo group, which typically grants
       members sudo (superuser) privileges.
     * x: This field represents the group password, which is usually not used in modern Linux systems.
       Hence, it is typically set to "x" or a placeholder.
     * 27: This is the group ID (GID) assigned to the sudo group.
     * sk,ostechnix: These are the members of the sudo group.

   In summary, the output shows information about the sudo group, its group ID, and users called "sk"
   and "ostechnix" who has sudo privileges on the system. This user can perform administrative tasks
   using the sudo command.

   Alternatively, you can identify all sudo users by listing the contents of the /etc/group file:
$> cat /etc/group | grep '^sudo:'
sudo:x:27:sk,ostechnix

   As you see in the above output, "sk" and "ostechnix" are the sudo users in my system.

   You can get the simplified output by excluding other parameters and listing only the names of the
   sudo users like below.
$> getent group sudo | cut -d: -f4
sk,ostechnix

   Let us break down the command and see what each parameter does.

   The above command is a combination of two Linux commands:
    1. getent group sudo: This command retrieves information about the "sudo" group from the system's
       database. The getent utility is used to query the Name Service Switch (NSS) databases, and in
       this case, it fetches the details of the "sudo" group.
    2. cut -d: -f4: The output of the previous command is then piped (represented by the | symbol) to
       the cut command, which is used to extract specific fields from the input data. In this case, it
       splits each line of input using the ":" character as the delimiter (-d:), and it selects the
       fourth field (-f4).

   So, the purpose of this command is to retrieve and display the list of user IDs (UIDs) that are
   members of the "sudo" group.

   Each line in the output represents a user ID that belongs to the "sudo" group. The user IDs listed in
   the output are typically used to map the users to their respective names in the /etc/passwd file.

   You can also use "grep" command to filter the names of the sudo users from the file /etc/group
   and get the same result as the previous command.
$> grep '^sudo:.*$' /etc/group | cut -d: -f4
sk,ostechnix

   As mentioned earlier, being a member of the sudo group allows the user to execute commands with
   elevated privileges using the sudo command.

Find if an User has Sudo Privileges
   We know now how to find all sudo users in our Linux system. How to find whether a certain user has
   sudo privilege or not? It's easy to check individual user sudo access!

   If you want to check sudo access for a specific user, you can use the sudo -l command:
$> sudo -l -U sk

   This command will help you to find if an user is sudo user or not.

   Sample output:
Matching Defaults entries for sk on ubuntuserver:
 env_reset, mail_badpass,
 secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User sk may run the following commands on ubuntuserver:
 (ALL : ALL) ALL

   As you see, the user named "sk" can perform all commands. So, he is in the sudo group.

   Let us check another user.
$> sudo -l -U senthil

   Sample output:
User senthil is not allowed to run sudo on ubuntuserver.

   Well, the user "senthil" is not allowed to run sudo. He is just a regular user!

   We can also find if an user has sudo access by running the following command:
$> sudo -nv

   If the output shows nothing, the user has sudo access.

   If you see an output like below, then the user doesn't has sudo access.
$> sudo -nv
Sorry, user senthil may not run sudo on ubuntuserver.

Frequently Asked Questions
   Q: What are sudo users in Linux?
   A: In Linux, sudo users are regular users who have been granted special privileges to perform
   administrative tasks. They can use the "sudo" command to temporarily elevate their privileges and
   execute commands as a superuser (root) without logging in as the root user.

   Q: How can I find all sudo users on my Linux system?
   A: You can find all sudo users in Linux using different methods. One way is by checking the "sudo"
   group in the /etc/group file using the following command:
   cat /etc/group | grep '^sudo:'
   This will display a list of users who are members of the "sudo" group, typically having sudo access.

   Q: Can I use the "sudo -l" command to find sudo users?
   A: While the sudo -l command is useful to check the sudo privileges of a specific user, it does not
   directly provide a comprehensive list of all sudo users on the system. It's more suitable for
   verifying an individual user's sudo permissions.

   Q: Why is it important to find sudo users on a Linux system?
   A: It is essential to periodically check for sudo users on a Linux system to ensure security and
   proper privilege management. Over time, temporary sudo access might be forgotten or not revoked,
   potentially leading to security risks. By identifying all sudo users, administrators can review and
   control who has elevated privileges on the system.

   Q: Is it possible to check sudo users in Unix-like systems other than Linux?
   A: Yes, the same approach can be used to check for sudo users on Unix-like systems, such as macOS,
   FreeBSD, or other UNIX-based operating systems. The sudoers file and group configuration may differ
   slightly, but the general method remains similar.

Conclusion
   By knowing how to find all sudo users in Linux, you can better manage sudo access on your system.
   This can help to ensure that only authorized users have access to sudo privileges, and that sudo
   access is not being abused.


---

