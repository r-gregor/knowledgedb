filename: ip-command-examples-usage-sintax-multif_20141201.txt
http://www.cyberciti.biz/faq/linux-ip-command-examples-usage-syntax/

Linux ip Command Examples

   by [35]nixCraft on January 13, 2012 · [36]4 comments· LAST UPDATED January 24, 2014

   ip-command

   I am a new Linux system admin user. How do I use ip command line utility to display or
   configure networking, routing, and tunnels on Linux operating systems? How do I configures
   or displays network interface parameters for a network using TCP/IP on Linux operating
   systems?
   The ip command is used to assign an address to a network interface and/or configure network
   interface parameters on Linux operating systems. This command replaces old good and now
   deprecated ifconfig command on modern Linux distributions.

      ip command details

   It is used for the following purposes:
    1. Find out which interfaces are configured on the system.
    2. Query the status of a IP interface.
    3. Configure the local loop-back, Ethernet and other IP interfaces.
    4. Mark the interface as up or down.
    5. Configure and modify default and static routing.
    6. Configure tunnel over IP.
    7. Configure ARP or NDISC cache entry.
    8. Assign IP address, routes, subnet and other IP information to IP interfaces.

Purpose

     Use this command to display and configure the network parameters for host interfaces.

Syntax

   ip OBJECT COMMAND
   ip [options] OBJECT COMMAND
   ip OBJECT help

Understanding ip command OBJECTS syntax

   OBJECTS can be any one of the following and may be written in full or abbreviated form:
   Object Abbreviated form Purpose
   link
   l Network device.
   address
   a
   addr Protocol (IP or IPv6) address on a device.
   addrlabel
   addrl Label configuration for protocol address selection.
   neighbour
   n
   neigh ARP or NDISC cache entry.
   route
   r Routing table entry.
   rule
   ru Rule in routing policy database.
   maddress
   m
   maddr Multicast address.
   mroute
   mr Multicast routing cache entry.
   tunnel
   t Tunnel over IP.
   xfrm
   x Framework for IPsec protocol.

   To get information about each object use help command as follows:

   ip OBJECT help
   ip OBJECT h
   ip a help
   ip r help

   Warning: The commands described below must be executed with care. If you make a mistake,
   you will loos connectivity to the server. You must take special care while working over the
   ssh based remote session.

ip command examples

   Don't be intimidated by ip command syntax. Let us get started quickly with examples.

Displays info about all network interfaces

   Type the following command to list and show all ip address associated on on all network
   interfaces:
   ip a
   OR
   ip addr
   Sample outputs:
   [59]Fig.01 Showing IP address assigned to eth0, eth1, lo using ip command

   Fig.01 Showing IP address assigned to eth0, eth1, lo using ip command
   You can select between IPv4 and IPv6 using the following syntax:
### Only show TCP/IP IPv4  ##
ip -4 a

### Only show TCP/IP IPv6  ###
ip -6 a

   It is also possible to specify and list particular interface TCP/IP details:
### Only show eth0 interface ###
ip a show eth0
ip a list eth0
ip a show dev eth0

### Only show running interfaces ###
ip link ls up

Assigns the IP address to the interface

   The syntax is as follows to add an IPv4/IPv6 address:
   ip a add {ip_addr/mask} dev {interface}
   To assign 192.168.1.200/255.255.255.0 to eth0, enter:
   ip a add 192.168.1.200/255.255.255.0 dev eth0
   OR
   ip a add 192.168.1.200/24 dev eth0

Adding the broadcast address on the interface

   By default, the ip command does not set any broadcast address unless explicitly requested.
   So syntax is as follows to set broadcast ADDRESS:
   ip addr add brd {ADDDRESS-HERE} dev {interface}
   ip addr add broadcast {ADDDRESS-HERE} dev {interface}
   ip addr add broadcast 172.20.10.255 dev dummy0
   It is possible to use the special symbols such as + and - instead of the broadcast address
   by setting/resetting the host bits of the interface prex. In this example, add the address
   192.168.1.50 with netmask 255.255.255.0 (/24) with standard broadcast and label "eth0Home"
   to the interface eth0:
   ip addr add 192.168.1.50/24 brd + dev eth0 label eth0Home
   You can set loopback address to the loopback device lo as follows:
   ip addr add 127.0.0.1/8 dev lo brd + scope host

Remove / Delete the IP address from the interface

   The syntax is as follows to remove an IPv4/IPv6 address:
   ip a del {ipv6_addr_OR_ipv4_addr} dev {interface}

   To delete 192.168.1.200/24 from eth0, enter:
   ip a del 192.168.1.200/24 dev eth0

Flush the IP address from the interface

   You can delete or remote an IPv4/IPv6 address one-by-one as [60]described above. However,
   the flush command can remove as flush the IP address as per given condition. For example,
   you can delete all the IP addresses from the private network 192.168.2.0/24 using the
   following command:
   ip -s -s a f to 192.168.2.0/24
   Sample outputs:
2: eth0    inet 192.168.2.201/24 scope global secondary eth0
2: eth0    inet 192.168.2.200/24 scope global eth0
*** Round 1, deleting 2 addresses ***
*** Flush is complete after 1 round ***

   You can disable IP address on all the ppp (Point-to-Point) interfaces:
   ip -4 addr flush label "ppp*"

   Here is another example for all the Ethernet interfaces:
   ip -4 addr flush label "eth*"

How do I change the state of the device to UP or DOWN?

   The syntax is as follows:
   ip link set dev {DEVICE} {up|down}
   To make the state of the device eth1 down, enter:
   ip link set dev eth1 down
   To make the state of the device eth1 up, enter:
   ip link set dev eth1 up

How do I change the txqueuelen of the device?

   You can [61]set the length of the transmit queue of the device using ifconfig command or ip
   command as follows:
   ip link set txqueuelen {NUMBER} dev {DEVICE}
   In this example, change the default txqueuelen from 1000 to 10000 for the eth0:
   ip link set txqueuelen 10000 dev eth0
   ip a list eth0

How do I change the MTU of the device?

   For [62]gigabit networks you can set maximum transmission units (MTU) sizes (JumboFrames)
   for better network performance. The syntax is:
   ip link set mtu {NUMBER} dev {DEVICE}
   To change the MTU of the device eth0 to 9000, enter:
   ip link set mtu 9000 dev eth0
   ip a list eth0
   Sample outputs:
2: eth0:  mtu 9000 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:08:9b:c4:30:30 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.10/24 brd 192.168.1.255 scope global eth1
    inet6 fe80::208:9bff:fec4:3030/64 scope link
       valid_lft forever preferred_lft forever

Display neighbour/arp cache

   The syntax is:
   ip n show
   ip neigh show
   Sample outputs (note: I masked out some data with alphabets):
74.xx.yy.zz dev eth1 lladdr 00:30:48:yy:zz:ww REACHABLE
10.10.29.66 dev eth0 lladdr 00:30:48:c6:0a:d8 REACHABLE
74.ww.yyy.xxx dev eth1 lladdr 00:1a:30:yy:zz:ww REACHABLE
10.10.29.68 dev eth0 lladdr 00:30:48:33:bc:32 REACHABLE
74.fff.uu.cc dev eth1 lladdr 00:30:48:yy:zz:ww STALE
74.rr.ww.fff dev eth1 lladdr 00:30:48:yy:zz:ww DELAY
10.10.29.65 dev eth0 lladdr 00:1a:30:38:a8:00 REACHABLE
10.10.29.74 dev eth0 lladdr 00:30:48:8e:31:ac REACHABLE

   The last field show the the state of the "neighbour unreachability detection" machine for
   this entry:
    1. STALE - The neighbour is valid, but is probably already unreachable, so the kernel will
       try to check it at the first transmission.
    2. DELAY - A packet has been sent to the stale neighbour and the kernel is waiting for
       confirmation.
    3. REACHABLE - The neighbour is valid and apparently reachable.

Add a new ARP entry

   The syntax is:
   ip neigh add {IP-HERE} lladdr {MAC/LLADDRESS} dev {DEVICE} nud {STATE}
   In this example, add a permanent ARP entry for the neighbour 192.168.1.5 on the device
   eth0:
   ip neigh add 192.168.1.5 lladdr 00:1a:30:38:a8:00 dev eth0 nud perm
   Where,

--------------------------------------------------------------------------------------------------------------
neighbour state (nud)    meaning
--------------------------------------------------------------------------------------------------------------
permanent                The neighbour entry is valid forever and can be only be removed administratively
--------------------------------------------------------------------------------------------------------------
noarp                    The neighbour entry is valid. No attempts to validate this entry will be made but 
                         it can be removed when its lifetime expires.
--------------------------------------------------------------------------------------------------------------
stale                    The neighbour entry is valid but suspicious. This option to ip neigh does not
                         change the neighbour state if it was valid and the address is not changed by this
                         command.
--------------------------------------------------------------------------------------------------------------
reachable                The neighbour entry is valid until the reachability timeout expires.
--------------------------------------------------------------------------------------------------------------


Delete a ARP entry

   The syntax to invalidate or delete an ARP entry for the neighbour 192.168.1.5 on the device
   eth1 is as follows.
   ip neigh del {IPAddress} dev {DEVICE}
   ip neigh del 192.168.1.5 dev eth1

Change are state to reachable for the neighbour 192.168.1.100 on the device eth1

   ip neigh chg 192.168.1.100 dev eth1 nud reachable

Flush ARP entry

   This flush or f command flushes neighbour/arp tables, by specifying some condition. The
   syntax is:
   ip -s -s n f {IPAddress}
   In this example, flush neighbour/arp table
   ip -s -s n f 192.168.1.5
   OR
   ip -s -s n flush 192.168.1.5

ip route: Routing table management commands

   Use the following command to manage or manipulate the kernel routing table.

Show routing table

   To display the contents of the routing tables:
   ip r
   ip r list
   ip r list [options]
   ip route
   Sample outputs:
default via 192.168.1.254 dev eth1
192.168.1.0/24 dev eth1  proto kernel  scope link  src 192.168.1.10

   Display routing for 192.168.1.0/24:
   ip r list 192.168.1.0/24
   Sample outputs:
192.168.1.0/24 dev eth1  proto kernel  scope link  src 192.168.1.10

Add a new route

   The syntax is:
   ip route add {NETWORK/MASK} via {GATEWAYIP}
   ip route add {NETWORK/MASK} dev {DEVICE}
   ip route add default {NETWORK/MASK} dev {DEVICE}
   ip route add default {NETWORK/MASK} via {GATEWAYIP}
   Add [63]a plain route to network 192.168.1.0/24 via gateway 192.168.1.254:
   ip route add 192.168.1.0/24 via 192.168.1.254
   To [64]route all traffic via 192.168.1.254 gateway connected via eth0 network interface:
   ip route add 192.168.1.0/24 dev eth0

Delete a route

   The syntax is as follows to delete default gateway:
   ip route del default
   In this example, delete the route created in [65]previous subsection:
   ip route del 192.168.1.0/24 dev eth0



---
http://www.cyberciti.biz/faq/linux-route-add/

Linux route Add Command Examples

   by [35]nixCraft on February 7, 2008 · [36]20 comments· LAST UPDATED November 9, 2013

   I am a new Linux user. How do I add a new or default gateway using route command on Linux
   operating systems? How can I use route command to show or set a new route on Linux based
   server or desktop system?
   You can use any one of the following tool to add, display, delete Linux kernel routing
   table:

   (a) route command : show / manipulate the IP routing table on Linux.

   (b) ip command : show / manipulate routing, devices, policy routing and tunnels on Linux.

Display your current routing table

   Open the Terminal or login to server using ssh/console. Type the following command to
   display routing table:
   # route
   OR
   # route -n
   Sample outputs:
   [43]Fig.01: Display routing table using route command

   Fig.01: Display routing table using route command
   # ip route show
   OR
   # ip route list
   Sample outputs:
   [44]Fig.02: ip command in action

   Fig.02: ip command in action

Linux add a default route using route command

   Route all traffic via 192.168.1.254 gateway connected via eth0 network interface:
   # route add default gw 192.168.1.254 eth0

Linux add a default gateway (route) using ip command

   Route all traffic via 192.168.1.254 gateway connected via eth0 network interface:
   # ip route add 192.168.1.0/24 dev eth0

Verify newly added route ip in the Linux kernel routing table

   To verify new routing table, enter:
   # ip route list
   OR
   # route -n

Verify new route

   Use the ping command to verify connectivity to your router or external network:
   # ping your-router-ip-here
   # ping your-ISPs-Gateway-ip-here
   # ping 192.168.1.254
   # ping www.cyberciti.biz

How do I make routing changes persistent across reboots?

   To make route entry persistent in the Linux kernel routing table, you need to modify config
   file as per your Linux distributions.

RHEL/CentOS/Fedora/Scientific Linux persistent routing configuration

   Edit /etc/sysconfig/network and set default gateway IP address:
   # vi /etc/sysconfig/network
   Sample outputs:

GATEWAY=192.168.1.254

   You can add additional static route for eth0 by editing
   /etc/sysconfig/network-scripts/route-eth0 file as follows:
10.0.0.0/8 via 10.10.29.65

   The above config sets static routing for network 10.0.0.0/8 via 10.9.38.65 router.

Debian / Ubuntu Linux persistence static routing configuration

   Edit /etc/network/interfaces file, enter:
   # vi /etc/network/interfaces
   Append the following in eth0 section:
up route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.254
down route del -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.254

   Save and close the file.

Generic method to add persistent static routing on Linux

   The following method works with almost all Linux distributions.

   Edit /etc/rc.d/rc.local or /etc/rc.local, enter
   # vi /etc/rc.local
   Append the following line:
/sbin/ip route add 192.168.1.0/24 dev eth0

   Save and close the file.



---
http://www.cyberciti.biz/faq/linux-setup-default-gateway-with-route-command/

Linux setup default gateway with route command

   by [35]nixCraft on August 2, 2006 · [36]31 comments· LAST UPDATED August 16, 2007

   in [37]Debian / Ubuntu, [38]Linux, [39]Networking
   [40][linux-logo.png]

   Q. How do I setup default gateway with a route command?

   A. route command show and/or manipulate the IP routing table under Linux and UNIX oses.

   Route manipulates the kernel's IP routing tables. Its primary use is to set up static
   routes to specific hosts or networks via an interface after it has been configured with the
   ifconfig program. When the add or del options are used, route modifies the routing tables.
   Without these options, route displays the current contents of the routing tables.

Display default route

   Following three-command display the current routing table:
   # route
   Output:
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
192.168.1.0     *               255.255.255.0   U     0      0        0 ra0
default         dsl-router      0.0.0.0         UG    0      0        0 ra0

   $ /sbin/route
   Output:
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
191.255.255.0   *               255.255.255.0   U     0      0        0 eth0
169.254.0.0     *               255.255.0.0     U     0      0        0 eth0
default         191.255.255.1   0.0.0.0         UG    0      0        0 eth0

   You can use -n option, to display numerical addresses instead of trying to determine
   symbolic host names (via dns or /etc/hosts file). This is useful if you are trying to
   determine why the route to your nameserver has vanished.$ /sbin/route -nOutput:
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
191.255.255.0   0.0.0.0         255.255.255.0   U     0      0        0 venet0
169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 venet0
0.0.0.0         191.255.255.1   0.0.0.0         UG    0      0        0 venet0

   Please note that a destionation entry 0.0.0.0 (or default) is the default gatway. In above
   example 191.255.255.1 is a default gatway.

Add / setup a new route

   The syntax is as follows:
   route add default gw {IP-ADDRESS} {INTERFACE-NAME}

   Where,
     * IP-ADDRESS: Specify router IP address
     * INTERFACE-NAME: Specify interface name such as eth0

   For example if your router IP address is 192.168.1.254 type the following command as the
   root user:
   # route add default gw 192.168.1.254 eth0OR use hostname such as dsl-router:# route add
   default gw dsl-router eth0

Setting route using GUI tools/command under Linux

   If you find above command hard to use, consider using GUI tools. If your are using Red
   Hat/CentOS/Fedora core Linux type following command:# redhat-config-networkOR If you are
   using other Linux distribution use command:# network-admin
