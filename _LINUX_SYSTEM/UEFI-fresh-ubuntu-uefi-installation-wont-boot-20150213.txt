filename: uefi_fresh-ubuntu-uefi-installation-wont-boot_20150213.txt
http://askubuntu.com/questions/568725/fresh-ubuntu-uefi-installation-wont-boot

[42]Fresh Ubuntu UEFI installation won't boot

   up vote 0 down vote [43]favorite

   On my Toshiba, Satellite E45T Ultrabook I have made a backup of my Windows 8 recovery partition; then
   I booted a Live USB with Ubuntu, cleaned everything on my HDD (750GB) and SSD (32GB) and installed a
   fresh Ubuntu 14.04 with an UEFI partition. For now, the SSD is empty and I chose the HDD as bootable
   device during the installation.

   When the installation was finished, I rebooted my laptop. Unfortunately, there was only a message
   Reboot and select proper Boot device or Insert Boot Media in selected Boot device and press key

   I tried to run the Boot Repair from the live USB but it didn't fix the problem. The generated outcome
   is available under the Pastebin [44]Boot Repair Summary

   Anyone know how I should proceed?

   parted --list result:
Model: ATA HGST HTS541075A9 (scsi)
Disk /dev/sda: 750GB
Sector size (logical/physical): 512B/4096B
Partition Table: gpt

Number  Start   End    Size    File system     Name  Flags
 1      1049kB  538MB  537MB   fat32                 boot
 2      538MB   744GB  743GB   ext4
 3      744GB   750GB  6350MB  linux-swap(v1)


Model: ATA TOSHIBA THNSNX03 (scsi)
Disk /dev/sdb: 32.0GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt

Number  Start  End  Size  File system  Name  Flags


Model: Kingston DataTraveler 2.0 (scsi)
Disk /dev/sdc: 7747MB
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start   End     Size    Type     File system  Flags
 1      32.3kB  7747MB  7747MB  primary  fat32        boot, lba

   df --human result:
Filesystem      Size  Used Avail Use% Mounted on
/cow            2.9G   57M  2.9G   2% /
udev            2.9G   12K  2.9G   1% /dev
tmpfs           589M  1.2M  588M   1% /run
/dev/sdc1       7.2G  980M  6.3G  14% /cdrom
/dev/loop0      939M  939M     0 100% /rofs
none            4.0K     0  4.0K   0% /sys/fs/cgroup
tmpfs           2.9G  1.1M  2.9G   1% /tmp
none            5.0M     0  5.0M   0% /run/lock
none            2.9G   80K  2.9G   1% /run/shm
none            100M   68K  100M   1% /run/user

   [45]14.04 [46]boot [47]grub2 [48]uefi
   [49]share|[50]improve this question
             [51]edited Jan 4 at 13:32
   asked Jan 4 at 12:56
   [52]Arkadiusz Cieśliński
   1012

   Did you delete everything using the Live USB? Can you post a parted --list and df --human when booted
   from USB and after mounting all mountable partitions? –  [53]Fabby Jan 4 at 13:09
   add a comment |

1 Answer 1

   [54]active [55]oldest [56]votes
   up vote 1 down vote

   If you are going to boot using EFI you must have a FAT formatted EFI System Partition (type EF00 ) as
   the first partition.

   The EFI System partition will also be mounted as /boot/efi as long as you leave the "mount other
   partitions" option selected, you do not need to tell the installer to mount this partition.

   GUI tools like 'gparted' and 'partitionmanager' do provide a GUI interface supporting GPT disks.

   Having stated that, gdisk should be your preferred tool to help prevent unintentional GUI anomalies.

   However 'Gparted - gparted' along with 'KDE Partition Manager - partitionmanager', (amongst others),
   are great tools to give you a visual depiction of what you actioned in gdisk.

   For example, assume that it is /dev/sda and start gdisk with the path to disk:
sudo -i
gdisk /dev/sda

   The initial output is a warning if the disk is not a new disk or a disk already using GPT:
GPT fdisk (gdisk) version 0.8.8
Partition table scan:
  MBR: MBR only
  BSD: not present
  APM: not present
  GPT: not present
***************************************************************
Found invalid GPT and valid MBR; converting MBR to GPT format.
THIS OPERATION IS POTENTIALLY DESTRUCTIVE! Exit by typing 'q' if
you don't want to convert your MBR partitions to GPT format!
***************************************************************
Command (? for help):

   Type ? and you will see a list of available commands:
Command (? for help):  ?
b   back up GPT data to a file
c   change a partition's name
d   delete a partition
i   show detailed information on a partition
l   list known partition types
n   add a new partition
o   create a new empty GUID partition table (GPT)
p   print the partition table
q   quit without saving changes
r   recovery and transformation options (experts only)
s   sort partitions
t   change a partition's type code
v   verify disk
w   write table to disk and exit
x   extra functionality (experts only)
?   print this menu

   To verify that you're working on the disk you think you're working type p

   Command (? for help): p
Disk /dev/sda: 165478400000 sectors, 750 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): 0367762F-9C06-4A10-A668-A83554786870
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 1654780600000
Partitions will be aligned on 2048-sector boundaries
Total free space is 1654777300000 sectors (750 GiB)
Number  Start (sector)    End (sector)  Size       Code  Name

   You now need to delete the entire partition table on the disk to be able to set up a new GPT
   partitioning:

   command (? for help): o

   Creating the EFI bootloader partition

   Type n to add a new partition and +500M to give the bootloader a size.
Command (? for help):  n
Partition number (1-128, default 1):  1

First sector (34-1654780600000, default = 34) or {+-}size{KMGTP}:
Information: Moved requested sector from 34 to 2048 in
order to align on 2048-sector boundaries.
Use 'l' on the experts' menu to adjust alignment
Last sector (2048-1654780600000, default = 1654780600000) or {+-}size{KMGTP}:  +500M
Current type is 'Linux filesystem'

   By typing L a list of codes will be presented:
Hex code or GUID (L to show codes, Enter = 8300):  L
0700 Microsoft basic data  0c01 Microsoft reserved    2700 Windows RE
4200 Windows LDM data      4201 Windows LDM metadata  7501 IBM GPFS
7f00 ChromeOS kernel       7f01 ChromeOS root         7f02 ChromeOS reserved
8200 Linux swap            8300 Linux filesystem      8301 Linux reserved
8e00 Linux LVM             a500 FreeBSD disklabel     a501 FreeBSD boot
a502 FreeBSD swap          a503 FreeBSD UFS           a504 FreeBSD ZFS
a505 FreeBSD Vinum/RAID    a800 Apple UFS             a901 NetBSD swap
a902 NetBSD FFS            a903 NetBSD LFS            a904 NetBSD concatenated
a905 NetBSD encrypted      a906 NetBSD RAID           ab00 Apple boot
af00 Apple HFS/HFS+        af01 Apple RAID            af02 Apple RAID offline
af03 Apple label           af04 AppleTV recovery      be00 Solaris boot
bf00 Solaris root          bf01 Solaris /usr & Mac Z  bf02 Solaris swap
bf03 Solaris backup        bf04 Solaris /var          bf05 Solaris /home
bf06 Solaris alternate se  bf07 Solaris Reserved 1    bf08 Solaris Reserved 2
bf09 Solaris Reserved 3    bf0a Solaris Reserved 4    bf0b Solaris Reserved 5
c001 HP-UX data            c002 HP-UX service         ef00 EFI System
ef01 MBR partition scheme  ef02 BIOS boot partition   fd00 Linux RAID

   Enter ef00 to make it a UEFI partition:
Hex code or GUID (L to show codes, Enter = 8300): ef00
Changed system type of partition to 'EFI System'

   For create the /, /home, and swap partitions

   Type n to add a new partition and +XXXG, to give the partition a size.

   Type codes are 8300 Linux filesystem and 8200 Linux swap.

   As gdisk creates partitions not filesystems, you will need to format each of your partions via the
   terminal:

   For the UEFI partition:
sudo -i
mkfs -t vfat /dev/sda1

   For the Linux partition:
sudo -i
mkfs -t ext4 /dev/sdax

   For the swap partition:
sudo -i
mkswap /dev/sdax
swapon /dev/sdax

   And continue installing with manual partitioning, each partition selected as your destination, do not
   select the UEFI partition
