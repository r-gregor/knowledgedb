filename: cups_managing-printers-from-cli-5p-multif_20150611.txt
http://docs.oracle.com/cd/E23824_01/html/821-1451/gllgm.html

Setting Up and Administering Printers by Using CUPS Command-Line Utilities

   This section provides a brief description of the CUPS commands and describes how to set up
   and administer your printers.

CUPS Command-Line Utilities

   CUPS provides various commands to set up printers and make those printers accessible to
   systems on the network. In addition, CUPS supports several printer-specific options that
   enable you to control printer configuration. The following table lists frequently used CUPS
   commands.
     ______________________________________________________________________________________

   Note - Some CUPS command names are the same as legacy LP print commands, but the behavior
   of commands under CUPS management might be different.
     ______________________________________________________________________________________

   Table 15-1 CUPS Command-Line Utilities
   Command
   Task
   cancel(1)
   Cancels a print request
   cuspaccept(8)
   Enables queueing of print requests to the named destinations
   cuspdisable(8)
   Disables the named printers or classes
   cupsenable(8)
   Enables the named printers or classes
   cupsreject(8)
   Rejects queueing of print requests to the named destinations
   lp(1)
   Submits a print request
   lpadmin(8)
   Sets up or changes a printer or class configuration
   lpc(8)
   Provides limited control over CUPS print and class queues
   lpinfo(8)
   Shows available devices or drivers known to the CUPS server
   lpmove(8)
   Moves a specified job or all jobs to a new destination
   lpoptions(1)
   Displays or sets printer options and defaults
   lpq(1)
   Shows the current print queue status
   lpr(1)
   Submits a print request
   lprm(1)
   Cancels print jobs that have been queued for printing
   lpstat(1)
   Displays the status information for queues and requests

How to Set Up a Printer by Using the lpadmin Command

    1. Connect the printer to the system, then turn on the power to the printer.
       Consult the printer vendor's installation documentation for information about hardware
       switches and cabling requirements.
    2. Become an administrator.
       For more information, see [79]How to Obtain Administrative Rights in Oracle Solaris
       Administration: Security Services
    3. Use the lpadmin command with the -p option to add a printer to CUPS.
       Only the most commonly used options of the CUPS lpadmin command are shown here. For
       information about other options, see the lpadmin(8) man page.
$ /usr/sbin/lpadmin -p printer-name -E -v device -m ppd

        -p
                Specifies the name of the printer to add.

        -E
                Enables the destination and accepts jobs.

        -v
                Sets the device-uri attribute of the print queue.

        -m
                Sets the PPD file for the printer from the model directory or by using one of
                the driver interfaces.

       See the examples at the end of this procedure.
    4. Enable the printer to accept print requests and to print those requests.
$ cupsaccept printer-name
$ cupsenable printer-name
    5. Verify that the printer is correctly configured.
$ lpstat -p printer-name -l

   Example 15-1 Adding a Printer That Is Connected to the Parallel Port

   To add an HP DeskJet printer DeskJet that is connected to the parallel port, you would type
   the following command:
$ /usr/sbin/lpadmin -p DeskJet -E -v parallel:/dev/lp1 -m deskjet.ppd

   deskjet.ppd
          PPD file for the HP DeskJet drivers included with CUPS

   Example 15-2 Adding a Printer That Uses a PPD File

   To add an HP LaserJet printer LaserJet by using a JetDirect network interface with the IP
   address 10.1.1.1, you would type the following command:
$ /usr/sbin/lpadmin -p LaserJet -E -v socket://10.1.1.1 -m laserjet.ppd

   laserjet.ppd
          PPD file for the HP LaserJet drivers included with CUPS

   Example 15-3 Adding a Printer That Is Connected to the Serial Port

   To add a dot matrix printer that is connected to the serial port, you would type the
   following command:
$/usr/sbin/lpadmin -p DotMatrix -E -m epson9.ppd \ -v serial:/dev/ttyS0?baud=9600+size=8+parity=none
+flow=soft

   Specify the serial port, baud rate, number of bits, parity, and flow control. If you do not
   need flow control, delete the +flow=soft attribute.

Setting a Default Printer

   You can specify the default printer in one of the following ways:
     * By setting the LPDEST or PRINTER environment variable.
       The LPDEST environment variable determines the destination of the printer. If the
       LPDEST variable is not set, the PRINTER variable is used. The PRINTER variable
       determines the output device or destination. If both the LPDEST and PRINTER variables
       are not set, an unspecified device is used. For instructions on setting up a default
       printer by specifying the environment variables, see [80]How to Set a Default Printer
       at the Command Line.
     * By using the new lpoptions command.
       Use this command to display or set printer options and defaults. For instructions on
       setting up a default printer by using the CUPS commands, see [81]How to Set a Default
       Printer at the Command Line. For more information, see the lpoptions(1) man page.

   The print command searches for the default printer in the following order:
    1. The printer name as set by the lp command with the -d option
    2. The value of the LPDEST environment variable
    3. The value of the PRINTER environment variable

   For instructions on setting up printers by using the CUPS web browser interface, see
   [82]Setting Up and Administering Printers by Using the CUPS Web Browser Interface .

How to Set a Default Printer at the Command Line

   The default printer can be a local printer or a remote printer.
    1. Become an administrator on the system where you want to set a default printer.
    2. Set the system's default printer by using one of the following methods:
          + By specifying the PRINTER variable:
$ export PRINTER=printer-name
            where printer-name specifies the name of the printer to be assigned as the
            system's default printer. If you do not specify printer-name, the system is set up
            with no default printer.
              _____________________________________________________________________________

            Note - When using the lp command with the -d option, the destination printer,
            which might not be the default printer, is specified. If the -d option is not
            specified, the print command searches for information about the printer in the
            PRINTER environment variable.
              _____________________________________________________________________________

          + By specifying the LPDEST variable:
$ export LPDEST=printer-name
            where printer-name specifies the name of the printer to be assigned as the
            system's default printer. If you do not specify printer-name, the system is set up
            with no default printer.
              _____________________________________________________________________________

            Note - If both the LPDEST and the PRINTER environment variables are set, LPDEST
            takes precedence.
              _____________________________________________________________________________

          + By using the lpoptions command:
$ lpoptions -d printer-name

              -d
                      Specifies the destination printer.

              printer-name
                      Specifies the name of the printer that is assigned as the system's
                      default printer. If you do not specify printer-name, the system is set
                      up with no default printer.

            For more information, see the lpoptions(1) man page.
    3. Verify the system's default printer.
$ lpstat -d
    4. To print to the default printer, type the following command:
$ lp filename

   Example 15-4 Setting a Default Printer by Specifying the PRINTER Variable

   The following example shows how to set the printer luna as the system's default printer by
   using the PRINTER variable.
$ export PRINTER=luna
$ lpstat -d
system default destination: luna

   Example 15-5 Setting a Default Printer by Specifying the LPDEST Variable

   The following example shows how to set the printer luna as the system's default printer by
   specifying the LPDEST variable.
$ export LPDEST=luna
$ lpstat -d
system default destination: luna

   Example 15-6 Setting a Default Printer by Using the lpoptions Command

   The following example shows how to set the printer luna as the system's default printer.
   The printer luna is used as the system's default printer if the LPDEST or the PRINTER
   environment variable is not set.
$ lpoptions -d luna
$ lpstat -d
system default destination: luna

   The lpoptions command creates a ~/.lpoptions file that includes and entry for the default
   printer luna in the file. By default, all print jobs are now directed to the luna printer.

How to Print to a Specified Printer

    1. (Optional) Verify the status of the printer.
$ lpstat -p printer-name
    2. Provide the destination printer name when issuing the lp command.
$ lp -d destination-printer filename

        -d
                Specifies the destination printer.

        destination-printer
                Specifies the name of the printer that you are assigning as the destination
                printer.

        filename
                Specifies the file name to print.
         __________________________________________________________________________________

       Note - You can also use the lpr command with the -p option to submit a print request to
       a specific printer. For more information, see the lpr(1) man page.
         __________________________________________________________________________________

   Example 15-7 Printing to a Specified Printer by Using the lp Command

   The following example shows how to set the printer luna as the destination printer.
$ lp -d luna abc.ps
request id is luna-1 (1 file(s))

$ lpstat -d
system default destination: saturn

   The -d option of the lp command takes precedence over the LPDEST and PRINTER environment
   variables.

   Note that in this example, the default printer is saturn.

How to Verify the Status of Printers

   The lpstat command displays information about accessible printers and jobs.
    1. Log in to any system on the network.
    2. (Optional) Verify the status of all printers or a specific printer.
       Only the most commonly used options are shown here. For information about other
       options, see the lpstat(1) man page.
$ lpstat [-d] [-p] printer-name [-l] [-t]

        -d
                Shows the system's default printer.

        -p printer-name
                Shows that a printer is active or idle, and when the printer was enabled or
                disabled.

                You can specify multiple printer names with this command. Use a space or a
                comma to separate printer names. If you use spaces, enclose the list of
                printer names in quotation marks. If you do not specify printer-name, the
                status of all printers is displayed.

        -l
                Shows the characteristics of printers and jobs.

        -t
                Shows status information about CUPS, including the status of all printers, for
                example whether printers are active and accepting print requests.

   Example 15-8 Displaying the Status of Printers

   To display the status of the printer luna:
$ lpstat -p luna
printer luna is idle. enabled since Jul 12 11:17 2011. available.

   To display the system's default printer:
$ lpstat -d
system default destination: luna

   To display the description of the printers asteroid and luna:
$ lpstat -p "asteroid, luna" -D
printer asteroid faulted. enabled since Jan 5 11:35 2011. available.
unable to print: paper misfeed jam

Description: Printer by break room
printer luna is idle. enabled since Jan 5 11:36 2011. available.
Description: Printer by server room.

   To display the characteristics of the printer luna:
$ lpstat -p luna -l
printer luna is idle.  enabled since September 29, 2011 05:20:57 PM BST

How to Print a File to the Default Printer

    1. Log in to any system on the network.
    2. (Optional) Verify the status of the printer.
$ lpstat -p printer-name
    3. Issue a print request in one of the following ways:
          + By using the lp command:
$ lp filename
          + By using the lpr command:
$ lpr filename
         __________________________________________________________________________________

       Note - Only the basic commands are shown in this procedure. For information about the
       other options, see the lp(1) and the lpr(1) man pages.
         __________________________________________________________________________________

How to Delete a Printer and Remove Printer Access

    1. Become an administrator on a print client with access to the printer to delete.
    2. On the system that is the print client, delete information about the printer.
$ lpoptions -x printer-name

        printer-name
                Specifies the name of the printer to delete.

        -x
                Deletes the specified printer.
         __________________________________________________________________________________

       Note - The -x option only removes the default options for a specific printer and
       instance. The original print queue still remains until it is deleted by using the
       lpadmin command.
         __________________________________________________________________________________

    3. Become an administrator.
    4. On the system that is the printer server, stop accepting print requests for the
       printer.
$ cupsreject printer-name
       This step prevents any new requests from entering the printer's queue while you are in
       the process of removing the printer.
    5. Stop the printer.
$ cupsdisable printer-name
    6. Delete the printer.
$ lpadmin -x printer-name
    7. Verify that the printer has been deleted, as follows:
         1. Confirm that the printer has been deleted on the print client.
$ lpstat -p printer-name -l
            The command output displays a message indicating the printer does not exist.
         2. Confirm that the printer has been deleted on the print server.
$ lpstat -p printer-name -l
            The command output displays a message indicating that the printer does not exist.

   Example 15-9 Deleting a Printer

   The following example shows how to delete the printer luna from the print client terra and
   from the print server jupiter.
terra# lpoptions -x luna
terra# lpstat -p luna -l
jupiter# lpadmin -x luna
jupiter# lpstat -p luna -l
lpstat: Invalid destination name in list "luna"!



---
https://www-uxsup.csx.cam.ac.uk/pub/doc/suse/suse9.1/adminguide9.1/ch05s07.html

5.7. Command-Line Tools for the CUPS Printing System

   The command-line tools of the CUPS printing system and their manual pages are included in
   cups-client. Further documentation is provided by cups and installed in
   /usr/share/doc/packages/cups, in particular the CUPS Software Users Manual, found at
   /usr/share/doc/packages/cups/sum.html and the CUPS Software Administrators Manual at
   /usr/share/doc/packages/cups/sam.html. If a CUPS daemon runs locally on your host, you
   should also be able to access the documentation at http://localhost:631/documentation.html.

   As a general rule, it is useful to remember that CUPS command-line tools sometimes require
   options be supplied in a certain order. Consult the corresponding manual pages if you are
   unsure about specific options.

5.7.1. Managing Local Queues

5.7.1.1. Printing Files

   To print a file, enter the System V style print command lp -d queuename file or a Berkeley
   style command like lpr -Pqueuename file.

   Additional information can be obtained with man lpr and man lp as well as in the section
   Using the Printing System of the CUPS Software Users Manual
   (/usr/share/doc/packages/cups/sum.html#USING_SYSTEM).

   The -o parameter allows specification of a number of important options, some of which
   directly influence the type of printout. More information is available in the manual page
   of lpr and lp as well as in the section Standard Printer Options of the CUPS Software Users
   Manual (/usr/share/doc/packages/cups/sum.html#STANDARD_OPTIONS).

5.7.1.2. Checking the Status

   To check the status of a queue, enter the System V style command lpstat -o queuename -p
   queuename or the Berkeley style command lpq -Pqueuename. If you do not specify a queue
   name, the commands display information about all queues.

   With lpstat -o, the output shows all active print jobs in the form of a queuename-jobnumber
   listing. With lpstat -l -o queuename -p queuename, the output is more verbose. lpstat -t or
   lpstat -l -t displays the maximum amount of available information.

   For additional information, consult the manual page of lpq, lpstat, and the section Using
   the Printing System of the CUPS Software Users Manual
   (/usr/share/doc/packages/cups/sum.html#USING_SYSTEM).

5.7.1.3. Removing Jobs from the Queue

   Enter the System V style command cancel queuename-job number or the Berkeley style command
   lprm -Pqueuename job number to remove the job with the specified number from the specified
   queue. For additional information, consult the manual page of lprm, cancel, and the section
   Using the Printing System of the CUPS Software Users Manual
   (/usr/share/doc/packages/cups/sum.html#USING_SYSTEM).

5.7.1.4. Specifying Options for Queues

   To see how to specify hardware-independent options that affect the type of printout, read
   the section Standard Printer Options in the CUPS Software Users Manual
   (/usr/share/doc/packages/cups/sum.html#STANDARD_OPTIONS). The section Saving Printer
   Options and Defaults, which is found at
   /usr/share/doc/packages/cups/sum.html#SAVING_OPTION, explains how to save option settings.

   Printer-specific options affecting the type of printout are stored in the PPD file for the
   queue in question. List them with the command lpoptions -p queuename -l. The output has the
   following form:
option/text: value value value ...

   The currently active setting is marked with an asterisk (*) to the left, for example:
PageSize/Page Size: A3 *A4 A5 Legal Letter
Resolution/Resolution: 150 *300 600

   According to the above output, the PageSize is set to A4 and the Resolution to 300 dpi.

   The command lpoptions -p queuename -o option=value changes the value for the given option.
   With the above sample settings in mind, use the following command to set the paper size for
   the specified queue to Letter:
lpoptions -p <queuename> -o PageSize=Letter

   If the above lpoptions command is entered by a normal user, the new settings are stored for
   that user only in the file ~/.lpoptions. In contrast, if the lpoptions command is entered
   by root, the settings specified are stored in /etc/cups/lpoptions and become the default
   for all local users of the queue. The PPD file is not touched by this, however.

   If (and only if) you change the contents of a PPD file for a given queue, the new settings
   apply to all users in the local network who print through this queue. The system
   administrator can change the defaults of a PPD file with a command like:
lpadmin -p <queuename> -o PageSize=Letter

   For more information, refer to the Support Database article Print Settings with CUPS.

5.7.2. Managing Remote Queues

   For each of the commands explained below, replace printserver with the name or IP address
   of your print server. queuename must be a queue on the print server. This section merely
   covers the basic commands. Additional options and information sources are referred to in
   Section [9]5.7.1. “Managing Local Queues”.

5.7.2.1. Printing Files

   You can use the System V style command lp -d queuename -h printserver file to generate a
   print job for the specified queue on the specified print server. This is only possible if
   the print server was configured to accept remote print jobs on its queues. This is not
   enabled by default in CUPS, but can easily be configured in the CUPS server settings in the
   YaST printer configuration module.

5.7.2.2. Checking the Status

   Check the status of a queue on the print server with the System V style command lpstat -h
   printserver -o queuename -p queuename.

5.7.2.3. Removing Jobs from the Queue

   The System V style command cancel -h printserver queuename-jobnumber removes the print job
   with the specified job number from the specified queue on the print server.

5.7.3. Using Command-Line Tools for CUPS Troubleshooting

   Print jobs will be kept in the printer queue if you shut down the system while a job is
   being processed. This means a broken print job will still be there even after rebooting and
   you need to remove it from the queue manually with the commands mentioned above.

   Other problems occur if there is some fault in the physical data link between the computer
   and the printer. The printer may then be unable to make sense of the data it receives and
   start spitting out lots of pages with garbage on them.
    1. To make sure the printer stops working, first remove all paper from it (in the case of
       inkjet printers) or open the paper trays (laser printers).
    2. At this point, the print job will often still be in the queue, because jobs are only
       removed from the queue when all data has been sent to the device. Check which queue is
       currently printing by entering lpstat -o (or lpstat -h printserver -o) then remove the
       problematic print job with cancel queuename-jobnumber (or with cancel -h printserver
       queuename-jobnumber).
    3. Some data might still find their way to the printer in spite of the job having been
       deleted. To stop this, enter the command fuser -k /dev/lp0 (for a printer at the
       parallel port) or fuser -k /dev/usb/lp0 (for a USB printer). This kills any processes
       still using the printer device.
    4. Do a complete reset of the printer by disconnecting it from power for some time. Then
       put in the paper and switch the printer back on.

   You should also be aware that if data cannot get through to the printer or if there is some
   other major trouble with the data transfer (such as a longer interruption of the data
   link), the CUPS back-end responsible for the data transfer may abort with an error code.
   The exact circumstances of this depend on the back-end used (whether it is the back-end for
   the parallel or the USB port, for the LPD or the IPP server, or the one for direct data
   transfer via TCP sockets). If a back-end aborts, the CUPS server ceases to print via the
   queue affected and mark it as disabled or stopped. The system administrator, after having
   removed the cause of the trouble, must reenable these queues with the command
   /usr/bin/enable queuename (or with /usr/bin/enable -h printserver queuename).



---
http://www.softlexicon.com/2013/01/network-printer-configuration-on-linux-command-line.html

Network Printer Configuration on Linux via Command Line

   CUPS (formerly Common Unix Printing System) provides print server capabilities to Unix like
   Operating Systems. There are basically two components of CPUS: print spooler (or
   simultaneous peripheral output on line) and scheduler. CUPS is based on standard network
   protocol Internet Printing Protocol (IPP) for managing print jobs and queues. Most of the
   Linux distributions use CUPS as their default printing system including Red Hat starting
   with Red Hat Linux 9. Today we will complete network printer configuration on Red Hat
   Enterprise Linux 5 via command line using CUPS.
   Let's check if CUPS daemon is running,
   # /etc/init.d/cups status
   If not then go ahead and start the CUPS daemon and also set to start at boot time,
   # /etc/init.d/cups start
   # chkconfig cups on
   lpadmin is a very powerful tool to configure printers provided by CUPS. Let's use it,
   # lpadmin -p <printer name> -E -v socket://<printer ip address>
   In the above command,
       -E option enables the printer and accepts jobs
       -p option set the printer DNS name
       -v option set the printer URI but I prefer printer IP address
   We can also set default printer using lpadmin command,
   # lpadmin -d <printer name>
   lpadmin program can also be used to delete the printer destination but that will also
   remove all pending jobs for the destination and abort the running jobs.
   # lpadmin -x <printer name>
   Network printer configuration on Red Hat Enterprise Linux 5 has been successfully completed
   now. But there are few validation steps that you we can do to make sure things are working
   as expected.
   Check CUPS status information and see if your printer shows enabled there,
   # lpstat -p
   Check printer queue status and see if your printer is in ready mode,
   # lpq
   If the printer is not set to default printer then use,
   # lpq -P <printer name>
   Print a test page,
   # lpr /usr/share/cups/data/testprint.ps
   If the printer is not set to default printer then use,
   # lpr -P <printer name> /usr/share/cups/data/testprint.ps
   We have successfully completed the validation steps for network printer configuration here
   but if you want to use your own or vendor provided PPD file for printer configuration then
   below steps are for you.
   CUPS provide most of the major drivers and you can list the available drivers by command,
   # lpinfo -m
   Under RHEL5, all the PPDs (PostScript Printer Description) are stored at following
   location,
   # /usr/share/cups/model
   But if you have your own PPD file then you can gzip the file and put it under,
   # /usr/share/cups/model
   Make sure to restart the CUPS daemon,
   # service cups restart
   Now use below command,
   # lpadmin -p {printer name} -E -v socket://{printer ip address} -P {filename}.ppd.gz



---
http://www.debianhelp.co.uk/printcommands.htm

   Printing Commands in Linux or Debain Linux
   Linux includes a number of command line tools for administering printing. These commands
   are useful on networks, or for troubleshooting and managing printing on any system.
   Each printer on a Linux system has its own spool or queue in the /var /spool/lpd directory.
   This spool uses the short name of the printer, which is created when the printer is first
   configured. When a file is printed, it becomes a job in the spool. Each job is stored in a
   spool until it is printed.
   Printing tools generally start with lp (short for "line printer"). If you are familiar with
   other Linux commands, you can usually make a good guess at what the rest of the command
   should be. For example, lprm removes a print job from the spool
   You can use the following tools for managing printing
   lpq : Checks the status of print jobs.
   lprm : Removes a print job from a spool.
   lpstat : Reads the status of a spool.

   Checking the Status of Print Jobs
   lpq options user
   The command's name comes from the fact that a spool is sometimes called a "queue."
   The lpq Command (Print Jobs) Options

   -l - Prints information for each file in the printer queue.

   number - Checks the status of a job number.

   -P printer - Sets the printer that a job should Use.

   If you want to know more options check lpq [13]man page

   Sends requests to a line printer

   lp options files

   If you want to know more options check lp [14]man page

   Removing Jobs From a Printer Spool
   lprm options job user
   The command's name comes from the fact that it removes (rm) a job from a line printer (lp).
   Only the root user can remove a job sent by another user.
   Regular users can remove their own print jobs.
   Use lpstat to find job numbers.
   The lprm Command (Remove Print Jobs) Options

   -P printer - Sets the printer to Use.

   - user - Removes all jobs sent by the user specified.

   If you want to know more options check lprm [15]man page
   Reading the Status of a Printer Spool
   lpstat -t options

   If you want to know more options check lpstat [16]man page
   Printing From the Command Line
   lpr options files
   The lpr Command (Print) Options

   -P printer - Selects the printer to Use.

   -s - This option saves time and disk space for large files, but may cause printing to be
   slower.

   If you want to know more options check lpr [17]man page



---
http://www.g-loaded.eu/2005/11/10/using-a-cups-printer-from-command-line/

[17]Using a CUPS printer from command line

   This is a quick reference to the commands and print job options a user can use from command
   line in order to print documents. Although print dialogs have evolved, it's many times
   necessary to send a document to the printer with some extra options. For detailed
   explanation of each command's functionality please refer to the CUPS user documentation.

   This is a quick reference to the commands and print job options a user can use from command
   line in order to print documents. Although print dialogs have evolved, it’s many times
   necessary to send a document to the printer with some extra options. For detailed
   explanation of each command’s functionality please refer to the CUPS user documentation.

Prerequisites

   This document assumes that you have already set up your CUPS printer. This task is rather
   easy. Here is a list of software that can assist you in installing the printer in Fedora:
     * CUPS Web Interface – Point your web browser to http://localhost:631
     * printconf-gui or printtool – Graphical programs.
     * printconf-tui – The same programm running in text-mode.
     * lpadmin – Shell program for non-interactive printer setup.

Print a document

   As a user, in order to print to the default printer, issue the command:
# lpr filename

   Print to specific printer:
# lpr -P printer filename

   Print multiple copies. For example, in order to print 4 copies:
# lpr -P printer -#4 filename

CUPS status information

   As a user, issue the lpstat command with proper options:
# lpstat <options>

   Options can be:
     * -t : show all CUPS info
     * -d : show default printer
     * -p : show all printers
     * -a : show all printers that accept jobs
     * -o : show active print jobs

Cancel a print job

   As a user, issue the command:
# lprm <job-id>

   Only the jobs that have been submitted by the same user can be canceled.

Setting options for a specific print job

   Sometimes, the user needs specific print options. A general way to define specific options
   for a print job is:
# lpr -P printer -o option1=value -o option2=value filename

Modify the default print options

   A user can define his own options for all his print jobs for a specific printer. They are
   saved in the ~/.lpoptions file and override the default options that have been defined by
   the system administrator for this specific CUPS printer.

Add or modify print options

   A user can set his own default options for a specific CUPS printer by issuing the command:
# lpoptions -p printer -o option1=value -o option2=value

Remove print options

   Previously defined print options can be removed from ~/.lpoptions by:
# lpoptions -p printer -r option1 -r option2

List a printer’s options

   To list print queue’s current options:
# lpoptions -p printer

   To list print queue’s current options:
# lpoptions -p printer -l

Create sets of options – Printer Instances

   A very useful CUPS feature is that sets of options can be defined. These can be system-wide
   if they are set by root, or user specific if they are set by a user. Printer instances are
   extra options for a specific printer that are saved as an extra printer in the form
   printer/set. This virtual printer’s settings override the default options.

   To create a printer instance, as a user issue the command:
# lpoptions -p printer/set1 -o option1=value -o option2=value

   To delete a printer instance issue the command:
# lpoptions -x printer/set1

   The printer instance is listed as a printer in lpstat.
   The user can send a document to the printer instance:
# lpr -P printer/set1 filename

Appendix I – Common print options

   Some common print options are listed below. If an option accepts a value, then it is listed
   in the form option=value:
     * landscape – for landscape printing
     * media=A4 – check your ppd file for possible media values
     * Collate=true | false – useful when printing multiple copies
     * sides=two-sided-short-edge – used for landscape prints [the default is sides=one-sided]
     * sides=two-sided-long-edge – used for portrait prints [the default is sides=one-sided]
     * page-ranges=1-4,7,9-12 – print specific pages or page ranges
     * page-set=odd | even – print only odd or even pages
     * outputorder=normal | reverse – the pages are printed from first to last or the other
       way around
     * cpi=10 – characters per inch
     * lpi=6 – lines per inch
     * columns=2 – format the text in two or more columns
     * page-left=value – specify the left margin in points [1pt = 1/72inch]
     * page-right=value – specify the right margin in points [1pt = 1/72inch]
     * page-top=value – specify the top margin in points [1pt = 1/72inch]
     * page-bottom=value – specify the bottom margin in points [1pt = 1/72inch]
     * job-sheets=none – front and back cover pages
     * job-sheets=standard
     * job-sheets=classified,classified

Further Reading

   Read the full CUPS user manual at [21]http://www.cups.org/doc-1.1/sum.html



---
http://www.techrepublic.com/article/control-printers-in-linux-from-the-command-line/

Control printers in Linux from the command line

   Use this in-depth tutorial to master the troubleshooting and administration of Linux
   printers.
   Everyone knows that Linux makes a great Web server. Some network administrators even use it
   in conjunction with Samba to create file servers that Windows workstations can access as
   easily as Windows NT/2000 file servers. However, if you want to use your Linux server as a
   print server, you can do that too. The most effective way, although not always the easiest,
   is using Linux print utilities.
   ___________________________________________________________________________________________

   Author's Note
   This article is based on command lines available in RedHat Linux 9.0, the latest release
   available. Each flavor of UNIX has slightly different command lines, and some UNIX flavors
   are not yet using CUPS, so the commands can be very different. A good idea is to take a
   look at the main page for the various command lines to examine and choose the proper
   options. I will point out some of the differences in commands throughout the article.
   ___________________________________________________________________________________________

   Who needs a GUI?
   Keep in mind that most flavors of UNIX have a GUI printer administration tool. Several
   different environments are packaged with Redhat 9.0 Linux. This article will give you the
   basics on how printers work, how to configure them, and how to maintain them with command
   line options.
   Many people prefer GUI interfaces when working with operating systems they're not
   completely familiar with because they're easier to use. Once you have a good understanding
   of the system, you may find that command line utilities give you more granular control over
   the printing environment while also allowing you to make modifications more rapidly. Rather
   than click, wait, click, wait, click, wait, you can just type the commands in a terminal
   window, press [Enter], and be done.
   CUPS
   Many flavors of Linux have adopted the new printing standard, CUPS (Common UNIX Printer
   System). This is the first update to the UNIX printing world in many years. It allows items
   such as:
     * Native support for IPP, Internet Printing Protocol
     * Native support for Windows printers
     * The ability to browse network printers
     * Support for PPD, PostScript Printer Definitions

   Prior versions of UNIX print services were based mainly on line printers, those old huge
   impact printers that only printed text on green bar paper. CUPS allows a lot of
   functionality and gives support for many more printers. It also allows all of the graphical
   capabilities that were lacking.
   Linux print commands
   Linux has several different print commands that you can use from a terminal window. Most of
   the commands can be used by both the logged on user id as well as by root. Others work only
   from root. The following is a list of the utilities that allow you to administer and
   control the printing system that you can use when logged in as either user or root:
     * /usr/bin/lp - Used to submit print jobs
     * /usr/bin/lp.cups - Used to submit print jobs
     * /usr/bin/lpoptions - Gets and sets printer options for a single user when run by a user
       or for the system when used by root
     * /usr/bin/lppasswd - Changes printing passwords for an individual user or adds, deletes,
       and changes printer users and passwords when run by root
     * /usr/bin/lpq - Shows the status of a printer queue
     * /usr/bin/lpq.cups - Shows the status of a printer queue
     * /usr/bin/lpr - Used to submit print jobs
     * /usr/bin/lpr.cups - Used to submit print jobs, forcing use of CUPS
     * /usr/bin/lprm - Used to remove print jobs from a queue
     * /usr/bin/lprm.cups - Used to remove print jobs from a queue
     * /usr/bin/lpstat - Gives status of the CUPS system, such as queue lengths and printers
     * /usr/bin/lpstat.cups - Gives status of the CUPS system, such as queue lengths and
       printers
     * /usr/bin/cancel - Cancels a print job
     * /usr/bin/enable - Enables a print queue or class of printers, requires a management
       password
     * /usr/bin/disable - Disables a print queue or class of printers, requires a management
       password
     * /usr/sbin/lpadmin - Manages printers and classes, requires a management password
     * /usr/sbin/lpc - A compatibility program for Berkley style printers, limited to queue
       status in CUPS
     * /usr/sbin/lpc.cups - A compatibility program for Berkley style printers, limited to
       queue status in CUPS
     * /usr/sbin/lpdomatic - A filter script provided to be used in setting up printers
     * /usr/sbin/lpinfo - Shows available printer devices and drivers on the system
     * /usr/sbin/lpmove - Moves the jobs destined for a queue to another queue

   These commands only work when you're logged in as root, either when you log in or after
   switching to root using the su command:
     * /usr/bin/lprsetup.sh - A shell script provided to help set up ghostscript printers
     * /usr/sbin/accept - Causes the print queue to accept requests
     * /usr/sbin/reject - Causes the print queue to reject requests

   You may notice that some commands have the .cups extension, while others don't. If you're
   coming from the Windows world, this may be confusing. Normally, executables only end in
   .EXE or .COM. Here, the commands with .cups in their name are the actual executables. Most
   of the non-cups commands are symbolic links, which point back to the executables with the
   .cups extension. For example, if you do a long listing, ls –l, on /usr/bin/lp you would
   find:

   # ls -l /usr/bin/lp
   lrwxrwxrwx    1 root    root           26 Jun 11 12:11 /usr/bin/lp ->
   /etc/alternatives/print-lp
   The executable for /usr/bin/lp is a symbolic link to /etc/alternatives/print-lp. If you do
   a long listing, ls –l, on the symbolic link you will find it is also a symbolic link:

   # ls -l /etc/alternatives/print-lp
   lrwxrwxrwx    1 root     root           16 Jun 11 12:11 /etc/alternatives/print-lp ->
   /usr/bin/lp.cups
   So you can see /usr/bin/lp is actually using /usr/bin/lp.cups.
   This may seem somewhat confusing at first, but what these links assure is compatibility for
   those administrators who are used to BSD, or Berkley, equivalents, or to System V
   equivalents of commands. Many times they don't have the same options, but it does provide
   at least the same command structure.
   Setting up a printer
   Now that you know the basics of the commands, let's consider the following scenario. You
   have a Hewlett-Packard LaserJet V attached to your Linux box using the first parallel port.
   The first step in adding the printer is to be sure you are root, so either log in as root
   or use the su - command to become root. This ensures all the printer commands can be
   executed and will be found in your path.
   lpstat
   In order to add the printer, you must first check what printers are already available on
   the system so as not to assign the new printer to a port that is already in use. To check
   the system for printers and their status, use the lpstat command. Specifically, in order to
   see the status for all of the printers on the system, as well as the scheduler and all
   jobs, use:

   # lpstat -t
   If your system currently does not have any printers installed, the output should look
   something like:
   scheduler is running
   no system default destination
   Like most command line utilities, lpstat has several switches that allow you finer control.
   Some of these other switches for the lpstat command include:
     * -a [printer name(s)] - Report the acceptance status of the printers
     * -c [class name(s)] - Report the printers in the class(s)
     * -l - Long listing of printers, classes, and jobs
     * -r - Tells if the scheduler is running
     * -h <server name> - Connect to the CUPS <server name>
     * -s - Summary of all printers, classes, and associated devices

   lpadmin
   Once you have confirmed that the scheduler is running and the device you want to use is
   free, the next step is to add the printer using the lpadmin command. The lpadmin command
   allows you to configure all the necessary items to add the printer to the system. To add
   the laser printer specified in the example above, use the command:

   #  lpadmin -p laserjetV  -m laserjet.ppd -v parallel -D "HP LaserJet V" -L "Office 502"
   The options used here include:
     * -p laserjetV - the name of the new printer
     * -m laserjet.ppd - the specification of the Postscript Printer Description file so CUPS
       knows how to speak to the printer
     * -v parallel - specifies the device to be used for the printer
     * -D "HP LaserJet V" - a textual description of the printer
     * -L "Office 502" - a textual description of the location of the printer

   If the command is successful, the return from the command will be nothing. If there is an
   error, the type of error will be reported.
   Other options for the lpadmin command include:
     * -c <class name> - The class to put the new printer in. If it does not exist, the class
       will be created.
     * -o job-page-limit=value - Set the option to limit the number of pages submitted in any
       one job.
     * -o job-k-limit=value - Set the option to limit the kilobyte size submitted in any one
       job.
     * -E - Automatically enables the printer and causes the printer to accept requests. This
       will be explained later.

   To check the completion of the command, you can run the lpstat -t command again. You should
   see output similar to:

   scheduler is running
   system default destination: laserjetV
   device for laserjetV: parallel
   laserjetV not accepting requests since Jan 01 00:00 –

   printer laserjetV disabled since Jan 01 00:00 –
   Notice that the default destination has been set to the printer that was added. The reason?
   It is the only printer on the system. Also notice the printer is both disabled and not
   accepting requests. This is the automatic setting for the printer, so the administrator can
   do any other maintenance that is necessary before allowing users access to the printer. As
   mentioned above, the -E option can be used to enable and set the printer to accept
   requests. Only use this option if you are sure the printer is ready to be used.
   enable
   Once the configuration and set up is complete, use the enable command to enable the
   printer:

   # enable laserjetV
   When enable completes, run another lpstat command:

   # lpstat –a –p laserjetV
   -a shows the acceptance status and -p laserjetV displays the printer you're interested in.
   The output should be:

   laserjetV not accepting requests since Jan 01 00:00 -
   printer laserjetV is idle. enabled since Jan 01 00:00
   accept
   At this point, the printer is enabled, but still not accepting requests. In order to have
   the printer accept requests, run the command:

   # accept  laserjetV
   Using another lpstat -a will show the following:

   laserjetV accepting requests since Jan 01 00:00
   Note the accept command is slightly different from the other commands used so far. It does
   not use the -p option; instead, it just requires the printer name.
   The difference between enabled and accepting requests should be noted here. When a printer
   is accepting requests, a user is able to submit a print job to the printer, even if it is
   not enabled. This allows short maintenance to be completed on the printer while still
   allowing jobs to be submitted. If the printer is not accepting requests, a user submitting
   a job will receive an error. In other words, the administrator can disable a printer to
   change paper or to change toner, but the scheduler will still accept the request.
   disable
   If you would like to disable a printer, it is possible to use the command:

   # disable laserjetV
   Other options for the disable command include:
     * -c - Delete all jobs in the queue for the destination specified
     * -r - Provide text as a reason for the printer being disabled. It will show up in an
       lpstat command to notify users why the printer is down.

   lpr
   Now the printer is ready to be used by any application or by the users. An example of how
   to use the printer from the command line is:

   # lpr –P laserjetV –#2 /home/user1/file1
   where -P laserjetV prints to the laserjetV printer, -#2 prints two copies, and
   /home/user/file1 is the name of the file to be printed.
   It should be noted that many of the standard lpr options, such as -c and -d, are not
   available when using cups as the server. Remember that the actual executable is the
   lpr.cups, which will not accept the options that are not available for CUPS.
   Other options for the lpr command include:
     * -C <job name> - Specifies the name of the job to be shown in the queue
     * -l - Specifies that the file is formatted for the default configuration of the printer
       and that there is no need to use a filter

   cancel
   One of the things a user might want to do is remove a job from the print queue. There are
   two options for the user to choose. The first is the command:

   # cancel <print request id>
   The print request id can be found from an lpstat command. The second choice for deleting a
   print job is:

   # lprm –P laserjetV <print request id(s)>
   where -P laserjetV removes the request from the printer laserjetV and <print request id(s)>
   indicates which requests should be removed.
   If you want to cancel all requests for a destination, substitute a - for the print request
   id. If no destination is specified, the currently printing request will be deleted from the
   default destination.
   All that and more
   There are many other commands that you can use to configure and manipulate printers on a
   Linux system running CUPS. Some of them are in the list of commands above, even though I
   didn't use them in this example. Many administrators and users will choose to use one of
   the GUIs available to work with printers on your system. The abilities added by using CUPS
   over the older spooler systems, such as Internet Printing Protocol, make the management
   much easier and allow UNIX systems to use many more printers than were available before.
   It is important to note that one of the other features available using CUPS is greatly
   increased security for printing. Most of the commands discussed have an option to make a
   secure connection to the CUPS server so that packets cannot be intercepted. For more
   information about CUPS, see the Daily Drill Down [46]"CUPS brings a universal standard to
   Linux printing".



---
http://newbiedoc.sourceforge.net/peripherals/printer-cups.html.en

Setting up a printer on a Debian GNU/Linux PC using CUPSChris Lale

   This document describes how to install and configure a printer using CUPS (the Common UNIX
   Printing System). The setup described in this document is known to work with Debian
   GNU/Linux 3.0 (Woody) and CUPS version 1.1.14-3.

1. Introduction

1.1. About lpr and lprng

lpr/lpd is the BSD line printer spooling system. lprng is an enhanced, extended, and portable
version of lpr. lpr is the system that is installed by default on a standard Debian 3.0
installation. If you have a non-PostScript printer, you must create a filter file called
/etc/printcap (normally using apsfilter or magicfilter). Together with the ghostscript PostScript
interpreter, the filter turns your PostScript output into the output needed for a non-PostScript
printer.

This document is describes cups, not lpr. If you wish to use lpr, read the document describing
how to configure printing using lpr at
[31]http://newbiedoc.sourceforge.net/peripherals/printer-magicfilter.html.
     ______________________________________________________________________________________

1.2. About cups

cups is the Common UNIX Printing System it is a replacement for replacement for lpr and lprng.
lpr or lprng will be removed, but your existing /etc/printcap file will remain on your system
(unless you remove it using the purge option).

Each cups printer has a Postscript Printer Description (.ppd) file (see the Linux Dictionary at
[32]www.tldp.org/LDP/Linux-Dictionary/html/index.html).

You can find .ppd files for many printers using the Foomatic database (Debian packages
foomatic-bin and foomatic-db).If you cannot find your printer there, you can download many .ppd
files from [33]http://www.linuxprinting.org/. A few manufacturers, such as Samsung, provide their
own .ppd files. Visit your printer manufacturer's web site.

cups has an HTML front end. There are alternative front ends for cups available in the Debian 3.0
distribution such as gtklp (Gnome), qtcups (KDE) and xpp. This document describes the use of the
HTML front end only.
     ______________________________________________________________________________________

1.3. Outline of the installation

   Note Use of # for remarks


   The # character normally represents a command prompt. Here it indicates a comment line.


# Check for parallel port or USB support in the Linux kernel
dmesg | grep parport
dmesg | grep usb

# Install cups
apt-get install cupsys cupsys-bsd cupsys-client cupsys-driver-gimpprint cupsys-pstoraster libcupsys2

# Install foomatic
apt-get install foomatic-bin foomatic-db

# Use a browser to visit the local cups Admin web page
http://localhost:631/admin

# Log in to the cups Admin web page as root
User Name:
Password:
OK

# Install your printer in cups
Printers
Add printer

# Configure your printer in cups
Printers
Configure Printer

# Test your printer from cups
Printers
Print Test Page

# Optional: install an alternative front end for managing cups
# gtklp (Gnome)
apt-get install gtklp
# or qtcups (KDE)
apt-get install qtcups
# or xpp
apt-get install xpp
     ______________________________________________________________________________________

2. Linux kernel support for printer port

You may already have printer port support in your kernel. If not, you must install the necessary
kernel modules (see the appendix on [34]setting up kernel printer port support). If your kernel
does not allow modules, you should think about upgrading your kernel.

You can check for printer port support by looking at the boot messages using dmesg, and filtering
the output using a pipe to grep.
     ______________________________________________________________________________________

2.1. Check parallel port

If you have a standard PC with a parallel port, the output should look something like this:

$ dmesg | grep parport
parport0: PC-style at 0x378 [PCSPP,EPP]
parport0: Printer, printer-name
parport_pc: Via x86A parallel port: io=0x378
lp0: using parport0 (polling).
$

   Look for mention of parport0 and parport_pc. You would expect to see both if your kernel
   already supports a parallel printer.
     ______________________________________________________________________________________

2.2. Check USB port

   Warning This section is untested


   I do not have a USB printer, so this is my 'best guess' at how to install one. If you get a
   USB printer working please let me know (<[35]feedback.chrislale@coolscience.co.uk>) and I
   will update this document.

   You should get similar messages by grepping for USB ports using dmesg | grep usb. I have
   not been able to test this because I do not have a USB printer.
$ dmesg | grep usb
     ______________________________________________________________________________________

3. Install cups

   Important lpr or lprng will be removed.


   Any existing system will be removed, but your printcap file will be retained. If you decide
   later to re-install lpr or lprng, should not need to create a new printcap file. If you are
   concerned, make a backup copy of /etc/printcap.
     ______________________________________________________________________________________

3.1. Install cupsys and related packages

You need a number of Debian packages to install cups.

     * cupsys provides the cups scheduler/daemon
     * cupsys-bsd provides the BSD commands for interacting with cups, and replaces any
       existing lpr or lprng package.
     * cupsys-client provides the System V style print client programs.
     * cupsys-driver-gimpprint provides a cups driver based on gimpprint.
     * cupsys-pstoraster allows cups to convert PostScript data into cups raster data.
     * libcupsys2 provides the base shared libraries for cups.
     * a2ps is the 'Anything to PostScript' converter and pretty-printer. It may already be
       installed. If not, this makes sure that it is installed.

   Login as a normal user. If you are running an X Session, open a terminal window (eg gnome
   terminal). Switch user to Root and use apt to install the packages.
$ su
Password: *******
# apt-get install cupsys cupsys-bsd cupsys-client cupsys-driver-gimpprint cupsys-pstoraster libcupsy
s2
# exit
$
     ______________________________________________________________________________________

3.2. Install and configure the foomatic database (optional)

   Note The foomatic database provides many.ppd printer drivers.


   The cups package provides drivers for a few generic printers. You may find specific drivers
   for your printer from the manufacturer's web site or from [36]www.linuxprinting.org/. You
   can skip this section if you already have a .ppd file for your printer.

   Install foomatic and the PostScript filter 'Anything to Postscript' (a2ps).
$ su
Password: *******
# apt-get install foomatic-bin foomatic-db a2ps

   You must choose a filter configuration. Read the details on the ncurses screens. Choose the
   default settings if you are not sure.

   Note Ncurses navigation


   Use the arrow keys and the <Tab> key to make your selection. Selected items are highlighted
   in blue. Use the <Enter> key to confirm your selection.
Debian Configuration
Foomatic Printfilter Configuration                                                             ...
                                                                                          <Ok>
Debian Configuration
Foomatic Printfilter Configuration
...
Preserve manual changes when regenerating config files                                         parse
<Ok>

   You must select a PostScript filter. Select a2ps. Exit from user Root's account when you
   have finished.
Debian Configuration
Foomatic Printfilter Configuration
...
a2ps
<Ok>
# exit
$
     ______________________________________________________________________________________

3.3. Install a .ppd file (optional)

   Note Install a .ppd driver not provided by the foomatic package.


   You can skip this section if you are not using one of the drivers provided by the foomatic
   package or one of the generic drivers provided by the cups package itself.

   You may have a .ppd file from the manufacturer or from [37]www.linuxprinting.org/.
   Alternatively (you might be in a hurry!), use one of cups' generic drivers.

   Copy the file to /etc/share/cups/model, then stop and start the cups daemon to make cups
   use it. You must be Root to do this.
$ su
Password: *******
# cp path-to-filename.ppd /etc/share/cups/model/

# /etc/init.d/cupsys stop
Stopping CUPSys: cupsd.
# /etc/init.d/cupsys start
Starting CUPSys: cupsd.
Go back to being a normal user.
# exit
$
     ______________________________________________________________________________________

4. Install a printer using cups

4.1. Log into cups using a web browser

   Note Browser variations


   You can find login instructions for various browsers (both X and console based) in the
   appendix on [38]using various browsers. The following instructions are as generic as
   possible.

   Use a web browser to visit the cups Admin web page. Enter the name and password of the Root
   user when you are prompted.
http://localhost:631/admin
User name: root
Password:  *******
OK
     ______________________________________________________________________________________

4.2. Install the printer

Navigate to the Printers menu in the Admin main menu page. Choose to add a printer.

Admin main menu
   Printers menu
   Add printer

   Enter a name, a location and a description for your printer.

   The printer name may only contain letters, numbers, and the underline character. If this is
   your first (or only) printer, the name defaults to lp. This is a sensible choice because lp
   is recognised by cups as the default printer. The location is probably only useful if you
   have a network with printers in several places. It can be left blank. The description
   identifies the printer to people. Manufacturer and model number would be good choices here.

   This is how you would add a new printer called printer-name. The model is printer-model,
   the manufacturer is printer-make and you are using the first parallel port on your computer
   (lp0).
Add New Printer dialog
   Name: printer-name
   Location:
   Description: printer-make printer-model
   Continue

   The Device is the name of the printer port on your computer. This is often the parallel
   port but may be a USB port. Further detail on configuring your computer's ports is in the
   appendix about [39]kernell printer support. Specify the make of your printer. If your
   printer is not listed, either install the foomatic package or supply a .ppd file from the
   manufacturer's web site or from [40]www.linuxprinting.org/. (See the section on
   [41]installing a .ppd file.)
Device for printer-name dialog
   Device: Parallel Port #1
   Continue
Model/Driver for printer-name dialog
   Make: printer-make
   Continue
   Model: printer-model
   Continue

Printer printer-name has been added successfully.
     ______________________________________________________________________________________

5. Configure the printer using cups

5.1. Set default options for your printer

Navigate to Admin main menu page. Find your printer's menu in the Printer menu page. Choose
Configure Printer.

Admin menu
   Printer menu
      printer-name menu
      Configure Printer

   You will probably want to configure the page size straight away. You can always make other
   configuration changes later.
Admin menu: Choose default options for printername.
    Page size: A4
Continue

Printer printer-name has been configured successfully.
     ______________________________________________________________________________________

5.2. Test your printer from cups

Navigate to Admin main menu page. Find your printer's menu in the Printer menu page. Choose
Configure Printer.

Admin menu
   Printers menu
   Manage Printers

   Print a test page to check the new cups configuration.
Printer menu
printer-name
Print Test Page

   Reconfigure your printer if necessary (see the previous section on [42]setting default
   options). When you are happy with the result, print a page from an application, eg a text
   editor.
     ______________________________________________________________________________________

6. Install an alternative front end for managing cups (optional)

Some people prefer to manage their printers using a web browser. If you want an alternative X
front end to cups, you can try these applications.

     * gtklp (Gnome)
     * qtcups (KDE)
     * xpp

   You can find out more about each application, or install them, using apt. For example, this
   is how you might find the details of the gtklp package and then install it.
$ apt-cache show gtklp
Description: Front end for cups written in gtk
...
$ su
Password: *******
# apt-get install gtklp
...
# exit
$
     ______________________________________________________________________________________

A. Appendix

A.1. About installing Debian packages

A.1.1. Log in as a normal user

You should login as a normal user rather than as the superuser (user Root).
     ______________________________________________________________________________________

A.1.2. Switch to user Root only when needed

If necessary, you can switch user to Root from a normal user's account. using the switch user
(su) command. You need Root's password for this.
     ______________________________________________________________________________________

A.1.3. Install or remove Debian packages

There are several applications that install Debian packages. synaptic is an X Window System
progam and aptitude is an ncurses program which runs on a terminal or in a terminal window in X.
apt runs from the command line. The examples in this document use apt.

Use apt to install a package.

# apt-get install package-name

   Use apt to remove a package.
# apt-get remove package-name
     ______________________________________________________________________________________

B. Appendix

B.1. Managing printers using various browsers

B.1.1. mozilla

Run mozilla and open web location http://localhost:631/admin. Enter user Root's user name and
password when prompted/

Prompt dialog
   User Name: root
   Password: *******
   OK
     ______________________________________________________________________________________

B.1.2. galeon

Run galeon and open web location http://localhost:631/admin. Enter user Root's user name and
password when prompted.

Galeon dialog
   Enter user name and password for "CUPS" at localhost:631
   User name root
   Password *******
   OK
     ______________________________________________________________________________________

B.1.3. konqueror

Run konqueror. Visit the cups web page at http://localhost:631/admin. Click on the Administration
button in the menu bar at the top of the page. Enter user Root's user name and password when
prompted.

Printer menu page
   Administration

Authorization dialog
   Username root
   Password *******
OK
     ______________________________________________________________________________________

B.1.4. lynx

Run lynx from a terminal or a terminal window. Go to the cups web page at
http://localhost:631/admin. You may briefly see an error message before lynx asks for your user
name and password.

$ lynx http://localhost:631/admin
Alert!: Access without authorization denied -- retrying
Username for 'CUPS' at server 'localhost:631': root
Password: *******
     ______________________________________________________________________________________

B.1.5. Elinks (links)

Do not forget to use the full URL including 'http://'

$ links http://localhost:631/admin
Unauthorized
   HTTP Authentication dialog
      Authentication required for CUPS at http://localhost:631/admin
      Login root
      Password *******
      OK
     ______________________________________________________________________________________

C. Appendix

C.1. Kernel printer port support

C.1.1. About Kernel modules

The Linux kernel is the core of the operating system. Adding many features would reduce Linux's
performance. The solution is to compile (build) the kernel with basic features that almost
everyone will want, but to allow other features to be added on later as modules. Your printer
will not work without kernel support.

You may already have run a check for kernel printer port support using dmesg in the section on
[43]Linux kernel printer support. You can double-check, install and remove kernel modules with
modconf (module configuration utility).
     ______________________________________________________________________________________

C.1.2. Parallel printer support

C.1.2.1. Check and install parallel printer support

Run modconf as the Root user from a terminal or terminal window.

$ su
Password: *******
# modconf
     ______________________________________________________________________________________

C.1.2.2. Select a module category

   Note Ncurses navigation


   Use the arrow keys and the <Tab> key to make your selections. Selected items are
   highlighted in blue. Use the <Enter> key to confirm your selection.

Select Category menu
   kernel/drivers/parport   Parallel port support.
   <Ok>

   Loaded modules are tagged with a plus sign (+). You need two modules for a standard PC
   parallel port: parport and parport_pc.
     ______________________________________________________________________________________

C.1.2.3. Check the status of parallel port modules

You already have parallel port support if you see plus signs (+).

Select kernel/drivers/parport modules menu
   parport       + Parallel-port support
   parport_pc    + PC-style hardware

   If either is flagged with minus signs (-), go straight on to the next section on
   [44]installing parallel port modules.

   If both modules are already installed, exit from the menu, exit from modconf and exit from
   the Root user's account.
Select kernel/drivers/parport modules menu
   Exit    Finished. Return to previous menu.
   <Ok>
Select Category menu
   Exit    Finished. Return to previous menu.
   <Ok>
# exit
$

   Finished with this appendix!
     ______________________________________________________________________________________

C.1.2.4. Install parallel port modules

You do not have parallel port support if you see minus signs (-) on either parport or parport_pc.

Select kernel/drivers/parport modules menu
   parport       - Parallel-port support
   parport_pc    - PC-style hardware

   Install each module by highlighting it (in blue) and choosing <Ok>. If you are asked for
   any command line arguments, it is safe to leave the entry box blank. Anyone who uses a
   printer that needs command line arguments would probably know what the arguments are.
Select kernel/drivers/parport modules menu
   parport       - Parallel-port support
   <Ok>
   parport_pc    - PC-style hardware
   <Ok>

   When both modules are installed, exit from the menu, exit from modconf and exit from the
   Root user's account.
Select kernel/drivers/parport modules menu
   Exit    Finished. Return to previous menu.
   <Ok>
Select Category menu
   Exit    Finished. Return to previous menu.
   <Ok>
# exit
$

   Finished with this appendix!
     ______________________________________________________________________________________

C.1.3. USB printer support

   Warning This section is untested


   I do not have a USB printer, so this is my 'best guess' at how to install one. If you get a
   USB printer working please let me know (<[45]feedback.chrislale.@coolscience.co.uk>) and I
   will update this document.
     ______________________________________________________________________________________

C.1.3.1. Run modconf from a terminal or terminal window.

You must be Root to use modconf.

$ su
Password: *******
# modconf
     ______________________________________________________________________________________

C.1.3.2. Select a module category

   Note Ncurses navigation


   Use the arrow keys and the <Tab> key to make your selections. Selected items are
   highlighted in blue. Use the <Enter> key to confirm your selection.

Select Category menu
kernel/drivers/usb       Universal Serial Bus (USB).
<Ok>

   Loaded modules are tagged with a plus sign (+).
     ______________________________________________________________________________________

C.1.3.3. Check the status of USB port modules

You already have USB printer support if you see a plus sign (+) against USB Printer support.

Select kernel/drivers/parport modules menu
   printer    + USB Printer support

   If there is a minus sign (-), go straight on to the next section on [46]installing the USB
   printer module.

   If the module is already installed, exit from the menu, exit from modconf and exit from the
   Root user's account.
Select kernel/drivers/parport modules menu
   Exit    Finished. Return to previous menu.
   <Ok>
Select Category menu
   Exit    Finished. Return to previous menu.
   <Ok>
# exit
$

   Finished with this appendix!
     ______________________________________________________________________________________

C.1.3.4. Install the USB printer module

You do not have USB support if you see a minus signs (-) against USB Printer support.

Select kernel/drivers/usb modules menu
   printer    - USB Printer support

   Install the module by highlighting it (in blue) and choosing <Ok>. If you do not know of
   any command line arguments, leave the entry box blank.
Select kernel/drivers/usb modules menu
   printer       - USB Printer support
   <Ok>
printer menu
   Install this module in the kernel?
   <Yes>
Enter Command-Line Arguments menu   _________________________________
   <Ok>

   When you have installed the module, exit from the menu, exit from modconf and exit from the
   Root user's account.
Select kernel/drivers/usb modules menu
   Exit    Finished. Return to previous menu.
   <Ok>
Select Category menu
   Exit    Finished. Return to previous menu.
   <Ok>
# exit
$

   Finished with this appendix!

   Appendix: About this document
     ______________________________________________________________________________________

C.2. Copyright information

Copyright ©2004 Chris Lale <[47]feedback.chrislale@coolscience.co.uk>. Permission is granted to
copy, distribute and/or modify this document with no Invariant Sections, with no Front-Cover
texts and with no Back-Cover Texts under the terms of the GNU Free Documentation License, version
1.1 or any later version, published by the Free Software Foundation. A copy of the license can be
found at http://www.fsf.org/copyleft/fdl.html.
     ______________________________________________________________________________________

C.3. Latest version

You can get the latest version of this document from [48]http://newbiedoc.sourceforge.net.
     ______________________________________________________________________________________

C.4. Bugs, errors and mistakes

If you find any errors, omissions etc, please let me know via the newbieDoc Discussion list
<[49]newbiedoc-discuss@lists.sourceforge.net> or <[50]feedback.chrislale@coolscience.co.uk>.
     ______________________________________________________________________________________

C.5. Spelling, punctuation and grammar

I have written this document in English. I have used American spellings for some technical terms
eg 'program' where these have become widely accepted.

You can find guides to English spelling, punctuation and grammar at
[51]http://www.cral.ac.uk/guidelines/.
     ______________________________________________________________________________________

C.6. Conventions used in this document

C.6.1. Ellipsis

Three dots ...

     * if before text, indicates text has been omitted in front of the text
     * if after text, indicates that following text has been omitted.
     * if on one line by themselves indicates that lines have been omitted.
     ______________________________________________________________________________________

C.6.2. Directory trees

A trailing forward slash (/) indicates that this is a directory, not a file.
     ______________________________________________________________________________________

C.6.3. Command line prompts

A '$' at the start of a line indicates that the rest of the line is input from a normal user. A
'#' indicates that the Root user inputs the rest of the line.
     ______________________________________________________________________________________

C.6.4. File names, application names, package names and screen text

Filenames, application names, package names and text displayed by a console or terminal window
look like this.

my-file.txt
my-directory
/my-path/my-directory/
my-application
my-package
This is some terminal text.

   Filenames, application names, package names and text displayed in an X window look like
   this.
my-file.txt
my-application
my-package
This is some text in an X window.
     ______________________________________________________________________________________

C.6.5. Commands

Commands issued from a terminal look like this. Use of the <ENTER> key is implied but not shown.

$ my command

   This example shows a command issued in an X application.
Menu bar:    File -> Close



---
http://www.penguintutor.com/linux/printing-reference

Linux sysadmin printing reference guide

Introduction

   Linux has a number of different methods that can be used to provide printing. This guide is
   based on the traditional BSD style printing daemons used to manage print queues. These
   provide a useful way of configuring printers in a server environment and is a requirement
   for the LPIC 102 exam. The BSD printing system is often better known by the daemon or the
   main printing command, which are lpd and lpr respectively.

Background

   The lpd print system originates from the original BSD printing system which has been
   implemented on various UNIX operating systems for many years. LPD stands for "Line Printer
   Daemon", and is the name of the daemon that runs on the system (lpd). It is now still in
   use as a basic print spooler, although has been replaced by cups for most Desktop systems.
   It is still particularly useful if you have a server that you would like to be able to
   print from, but don't want to install cups and all the additional software and filters that
   would be required for cups printing.

   The protocol that the daemon uses is defined in the RFC document 1179 (Line Printer Daemon
   Protocol). This provides a protocol which allows clients to send jobs to remote printers,
   and allows for control of the print queues.

   There are a number of different implementations of lpd, and the lpd protocol is included in
   several different printing tools including CUPS and LPRng.

Spooling Daemon (lpd)

   The spooling daemon is called lpd. There will be an instance of lpd running on each
   machine, including the local and remote machine if using remote printing. There will also
   be an instance of lpd for each printer that is actively printing.

   The initial daemon is normally started during system startup. This instance will be running
   continuously. It listens for connections and is used to manage the queues. Whenever a
   request comes in (e.g. from the lpr command), the printer daemon accepts the network
   connection and receives the print data and options.

   When lpd identifies an available printer for a queue with a pending job it spawns a child
   lpd process to handle the printing.

   The child lpd daemon applies any appropriate filters as defined in /etc/printcap before
   sending the data to the printer.

Submitting Prints (lpr)

   The lpr command is used to send a print job to the printer. The lpr command communicates
   with lpd.

Managing Print Jobs (lpq, lpc and lprm)

   The three commands lpq, lpc and lprm are used to manage the print queues.

   lpq lists the jobs in the print queue
   lpc is the control command which can be used to manage the print queue including (stopping
   the printer, starting the pritner and reordering the jobs on the print queue).
   lprm is used to remove one or more jobs from the print queue.

Listing Jobs on the Queue (lpq)

   You can use the lpq command to list the jobs on the queue. If run without any parameters it
   will display jobs on the default queue.

   The most common options are:
   lpq -a (list jobs on all printers)
   lpq -l (provides more information about the jobs – long list format)

Controlling the Printers (lpc)

   The line printer control program can be used to control the operation of local printers.

   Here are some example commands:

   lpc status printername
   Show the status of all the named printer. The printername can be replaced with the keyword
   all to view the status of all local printers.

   lpc disable printername
   Turns of the print queue. It prevents new printer jobs from entering the print queue. The
   printername can be replaced with the keyword all to apply to all local printer queues.

   lpc enable printername
   Allows new jobs to be added to the print queues. The printername can be replaced with the
   keyword all to apply to all local printer queues.

   lpc stop printername
   Stops the spooling daemon after the current job has completed. It then disables printing to
   that printer. The printername can be replaced with the keyword all to view the status of
   all local printers.

   lpc start printername
   Enables printing starting a spooling daemon for the printer. The printername can be
   replaced with the keyword all to view the status of all local printers.

Removing Print Jobs (lprm)

   The lprm command is used to remove print jobs from the print queue.

   The command can be run without any arguments which will delete the current print request.
   Normal users can only remove their own print jobs, but the superuser can remove any jobs.

   The following are some examples of the lprm command.

   lprm -P printqueue jobid
   Remove requests from the specified queue.

   lprm -
   If requested by a user it will remove all jobs from that user. If specified by a superuser
   it will delete all requests on that print queue.

   lprm -a
   Delete all your jobs on all printers

   lprm -a all
   Delete all jobs on all printers from all users (superuser only).

Printer configuration (/etc/printcap)

   The file /etc/printcap is used to define the printers for use by lpd.

   The following shows the format for the printcap file, with two examples. The first called
   printer1 (alias name localprinter) is on the first printer port, whereas the second called
   printer2 (alias name remoteprinter) is on a remote machine.

printer1|localprinter:\

        :lp=/dev/lp0:\

        :sd=/var/spool/lpd/printer1:\

        :mx#0:\

        :sh:



printer2|remoteprinter:\

        :rm=remoteserver:\

        :rp=remoteprinter:\

        :sd=/var/spool/lpd/printer2:\

        :mx#0:\

        :sh:


   Common entries in the printcap file are:
   lp – Local printer port / device (local printing only)
   sd – Spool directory
   mx – Maximum buffer size (0 = unlimited)
   sh – suppress printing of burst page header
   rm – remote server host name (remote printing only)
   rp – remote printer queue name (remote printing only)
   if – input filter, used to process the input with a program to change the formatting.
   af – accounting file
   lf – error log file
   pl – page length (lines)
   pw – page width (characters)
   [49]Previous Linux printing using CUPS
   Linux printing using CUPS [50]Next Basic TCP/IP networking reference guide
   Basic TCP/IP networking reference guide
