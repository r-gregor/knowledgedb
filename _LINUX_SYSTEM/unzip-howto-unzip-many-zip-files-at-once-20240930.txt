filename: unzip_howto_unzip-many-zip-files-at-once_20240930.txt
https://www.cyberciti.biz/faq/linux-unix-shell-unzipping-many-zip-files/

How do I unzip multiple / many files under Linux?
September 27, 2024

I have lots of files in a directory called /disk2/images/. All files are in zip file format, so I am using the
following command to extract zip files: unzip *.zip The command result into an error which read as follows:
caution: filename not matched How do I unzip multiple or many zip files under a Linux/Unix-like system?

Linux or Unix-like system use the unzip command to list, test, or extract files from a ZIP archive, commonly
found on MS-DOS and other systems. This page explains how to unzip multiple files under Linux or Unix-like
systems.

The problem with multiple zip files on Linux
Assuming that you have four file in a /disk2/images/ directory as follows:
1. data.zip
2. invoices.zip
3. pictures.zip
4. visit.zip

Let us verify it with the help of ls command:
$> ls

Here is what I see:
data.zip    invoices.zip    pictures.zip    visit.zip

To unzip all files (*.zip tells unzip to work on all files ending with .zip extension on Linux or Unix
machine), enter:
$> unzip *.zip

Then I get the following message on my screen:
Archive:  data.zip
caution: filename not matched:  invoices.zip
caution: filename not matched:  pictures.zip
caution: filename not matched:  visit.zip

Above error indicate that you used the unzip command wrongly. It means extract invoices.zip, pictures.zip, and
visit.zip files from inside the data.zip archive. Your shell expands the command 'unzip *.zip' it as follows:
$> unzip data.zip invoices.zip pictures.zip visit.zip

The solution is pretty simple when you want to unzip the file using the wild card; you have two options as
follows.

Method #1: Unzip Multiple Files Using Single Quote (short version)
The syntax is as follows to unzip multiple files from Linux command line: unzip '*.zip'

Type the following command as follows:
$> cd /disk2/images/
$> unzip '*.zip'
$> ls -l

Note: *.zip is put in between two single quotes so that shell will not recognize it as a wild card
character.  How to unzip multiple and many files under Linux and macos using unzip command

Unzip Multiple Files from Linux Command Line Unzip multiple files from Linux command line using \ as escape
character

Add a '\' to wildcard character. For instance:
$> unzip \*.zip

From the bash man page:
    A non-quoted backslash '\' is the Bash escape character. It preserves the literal value of the next
    character that follows, with the exception of newline. If a \newline pair appears, and the backslash
    itself is not quoted, the \newline is treated as a line continuation (that is, it is removed from the
    input stream and effectively ignored).

Method #2: Unzipping Multiple Files from Linux Command Line Using Shell For Loop (Long Version)
You can also use bash for loop as follows:
$> for z in *.zip; do unzip "$z"; done

The syntax is as follows:
$> unzip -P 'your_password_here' file1.zip
# Dealing with multiple zip files at the CLI
$> unzip -P 'your_password_here' *.zip
# Bash for loop example
$> for z in *.zip; do unzip -P 'my_password_here' "$z"; done

Summing up
You learned about the shell problem associated with unzip command, and then we explained how to extract
multiple .zip files on Linux, macOS, *BSD or Unix-like systems using a single go. For more info consult manual
page using the man command or help command.


---

