filename: picom_instead_of_xfwm4-multif_20240320.txt
https://askubuntu.com/questions/143376/how-to-change-the-xfce4-default-window-manager

How to change the Xfce4 default window manager?

   How can I change the default window manager for Xfce4?

***
   Doing YourWindowManager --replace means xfwm4 has already started upon login and you are now stopping
   it to start a new window manager...that's working but there's a quicker and cleaner way as this
   guy explains taking kwin as his example.

   XFCE starts the window manager specified in
   /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml or, under xubuntu, in
   /etc/xdg/xdg-xubuntu/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml

   In this file look for the Client0_Command property and edit its value: <value type="string"
   value="xfwm4"/> to <value type="string" value="kwin"/> (obviously, replace "kwin" with your window
   manager of choice) You would need to go root. You could also copy and only edit that file in
   /home/user/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml if you want the changes to only
   affect your userspace.

   Because in XFCE it is common for us to save our session while logging out, don't forget to clean your
   session: Settings Manager->Session and Startup->Session tab->Clear saved sessions

   Now you can logout and back in.

     * You could do the same from the command line using xfconf-query --channel xfce4-session --property
       /sessions/Failsafe/Client0_Command --set openbox --force-array (change openbox to your preferred
       window manager).
     * @Mikel This gives me "There are 1 new values, but only 2 types could be determined."
     * @d33tah This command worked for me with xfconf version 4.12.1: xfconf-query --channel
       xfce4-session --property /sessions/Failsafe/Client0_Command --type string --set "awesome"
       --force-array

***
   The easiest way I found to permanently change the default window manager is:
    1. Download your desired WM.
    2. Then go: system tools > preferences > startup applications.
    3. Then click "add".
    4. If you wanted, for example, to change your default WM to metacity, at "name" put "metacity" and
       at "command" put "metacity --replace". Click "add".
    5. Log out > log in.

***
   In general...
    1. Download your desired window manager if you don't already have it
    2. Run it with --replace, so for the XFCE default manager xfwm4 --replace
    3. Log out, but ensure that you have checked the 'Save session for future logins' option. The logout
       dialog, if otherwise unavailable, can be invoked from a command line xfce4-session-logout

***
   To change it to xfwm4, the following command should work. This would change it back to the setting
   Xfce has by default out of the box.

   xfconf-query --channel xfce4-session --property /sessions/Failsafe/Client0_Command --type string
   --set 'xfwm4' --type string --set '--replace'

***
   If you prefer a GUI solution, go to:

   Settings >> Desktop Settings. In the Desktop Settings dialog, change the Window Manager to the
   manager of your choice.

   This works in Linux Mint 20.2



---
https://wiki.manjaro.org/index.php?title=Using_Compton_for_a_tear-free_experience_in_Xfce

Using Compton for a tear-free experience in Xfce [Manjaro]

   People who are experiencing screen tearing in Xfce can try out the following method.

   Compton has been replaced by Picom

   Installing picom
   Picom - is an X compositor which supports xrender and glx (opengl) backends.

   To install it from the command line:
   user $ sudo pacman -S picom COPY TO CLIPBOARD

   Configuring picom
   Picom is configured by editing ~/.config/picom/picom.conf.

   The following are some commonly used options:
   ~/.config/picom/picom.conf
backend = "glx";
glx-no-stencil = true;
vsync = true;
unredir-if-possible = true;

# Shadow
shadow = true; # Enabled client-side shadows on windows.
shadow-radius = 7; # The blur radius for shadows. (default 12)
shadow-offset-x = -7; # The left offset for shadows. (default -15)
shadow-offset-y = -7; # The top offset for shadows. (default -15)
shadow-exclude = [
  "n:e:Notification",
  "n:e:Docky",
  "g:e:Synapse",
  "g:e:Conky",
  "n:w:*Firefox*",
  "n:w:*Chromium*",
  "n:w:*dockbarx*",
  "class_g ?= 'Cairo-dock'",
  "class_g ?= 'Xfce4-notifyd'",
  "class_g ?= 'Xfce4-power-manager'",
  "class_g ?= 'Notify-osd'",
  "_GTK_FRAME_EXTENTS@:c"
];

# Opacity
detect-client-opacity = true;

# Window type settings
wintypes:
{
  dock = { shadow = false; };
  dnd = { shadow = false; };
  tooltip = { shadow = false; };
 };

   Disabling xfwm4 compositor and enabling picom

   The following command can be used to turn off xfwm4's compositing feature:
   user $ xfconf-query -c xfwm4 -p /general/use_compositing -s false COPY TO CLIPBOARD

   Create a new file ~/.config/autostart/picom.desktop with content
   ~/.config/autostart/picom.desktop
 [Desktop Entry]
 Encoding=UTF-8
 Version=0.9.4
 Type=Application
 Name=Picom
 Comment=X11 compositor
 Exec=compton -b
 OnlyShowIn=XFCE;
 StartupNotify=false
 Terminal=false
 Hidden=false

   Now one could logout and login again to see if picom has been activated.

   To check if picom is working following command can be used:
   user $> pgrep -l picom COPY TO CLIPBOARD

   Links
     * https://wiki.archlinux.org/title/Picom
     * https://github.com/yshui/picom



---
https://medium.com/@timemrah/xfce-desktop-enviroment-and-picom-settings-352dc539a654

XFCE desktop enviroment and PICOM settings
Dec 26, 2020

   I am useing the XFCE desktop enviroment with the Linux Manjaro distribution. And the window effects
   were a bit inadequate. I decided to use PICOm too.

   There was somethink ı specifically wanted to adjust. The window i focused on should have had a
   shadow. Those left behind should not have had a shadow.

   If you are looking for something like this, ı am sharing my complete picom.conf codes below.

   I think your files location might be like /etc/xdg/picom.conf. I think you should search for
   picom.conf file on your filesystem.

   picom.conf
# Thank you code_nomad: http://9m.no/...
# and Arch Wiki contributors: https://wiki.archlinux.org/index.php/Compton# Edit by Emrah Tunçel - 26.12.20
20#################################
#
# Backend
#
################################## Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
#backend = "xrender"#################################
#
# GLX backend
#
#################################glx-no-stencil = true;# GLX backend: Copy unmodified regions from front buffe
r instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
glx-copy-from-front = false;# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some dri
vers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined";#################################
#
# Shadows
#
################################## Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 20;
# The left offset for shadows. (default -15)
shadow-offset-x = -20;
# The top offset for shadows. (default -15)
shadow-offset-y = -20;
# The translucency for shadows. (default .75)
shadow-opacity = 0.5;log-level = "warn";
#change your username here
#log-file = "/home/erik/.config/compton.log";# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;# The shadow exclude options are helpful if you have shadows enabled. Due to the way compt
on draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on an
y "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g = 'Cairo-clock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'","!focused", "class_g = 'dmenu'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;#################################
#
# Opacity
#
#################################inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# blur-background = true;
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "_GTK_FRAME_EXTENTS@:c"
];#################################
#
# Fading
#
################################## Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];#################################
#
# Other
#
################################## Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;# Detect _NET_WM_OPACITY on client windows, useful for window managers not passi
ng _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;# Vertical synchronization: match the refresh rate of the monitor
# this breaks transparency in virtualbox - put a "#" before next line to fix that
vsync = true;# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;# Unredirect all windows if a full-screen opaque window is detected, to maximize performance f
or full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;# Specify a list of conditions of windows that should always be considered focused
.
focus-exclude = [ ];# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at
 the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;#################################
#
# Window type settings
#
#################################wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.9; focus = true;};
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.9; }
  dropdown_menu = { opacity = 0.9; }
};######################
#
# XSync
# See: https://github.com/yshui/compton/commit/b18d46bcbdc35a3b5620d817dd46fbc76485c20d
#
####################### Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX
backend for some users.
xrender-sync-fence = true;



---

