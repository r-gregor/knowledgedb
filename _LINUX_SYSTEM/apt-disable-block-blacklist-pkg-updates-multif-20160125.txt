filename: apt_disable-block-blacklist-pkg-updates_20160125.txt
http://www.tecmint.com/disable-lock-blacklist-package-updates-ubuntu-debian-apt/

How to Disable/Lock or Blacklist Package Updates using Apt Tool

   by [54]Gunjit Khera | Published: January 13, 2016 | Last Updated: January 13, 2016

   APT means Advanced Packaging Tool is another package manager found on Linux based systems. Initially
   designed as a front-end for dpkg to work with .deb packages, apt has succeeded to show his visibility
   on Mac OS, Open Solaris etc.

   Disable Package Updates in Debian and Ubuntu Using APT

   Want to learn and master about APT and DPKG commands to manage Debian package management, then use
   our in-depth articles which will cover more than 30+ examples on both tools.
   [58]25 Useful APT Commands for Debian/Ubuntu Package Management
   [59]15 Useful Dpkg Commands for Package Management in Debian/Ubuntu

   In this article we will see various techniques to disable/lock package from install, upgrade and
   remove in Debian Linux and its derivatives such as Ubuntu and Linux Mint.

1. Disable/Lock Package Using ‘apt-mark’ with hold/unhold Option

   The command apt-mark will mark or unmark a software package as being automatically installed and it
   is used with option hold or unhold.
    1. hold – this option used to mark a package as held back, which will block the package from being
       installed, upgraded or removed.
    2. unhold – this option used to remove a previously set hold on a package and allow to install,
       upgrade and remove package.

   For example, for making a package say apache2 unavailable for install, up-gradation or uninstall, you
   can use following command at the terminal with root privileges:
# apt-mark hold apache2

   To make this package available for update, just replace ‘hold‘ with ‘unhold‘.
# apt-mark unhold apache2

   [60]Hold Package Update in Ubuntu Hold Package Update in Ubuntu

   Hold Package Update in Ubuntu/Debian

Blocking Package Updates Using APT Preferences File

   Another way to block updates of a specific package is to add its entry in /etc/apt/preferences or
   /etc/apt/preferences.d/official-package-repositories.pref file. This file holds responsibility of
   updating or blocking certain package updates according to priority specified by the user.

   To block the package, you just need to enter its name, additional feature, and to what priority you
   want to take it to. Here, priority < 1 would block the package.

   For blocking any package, just enter its details in file /etc/apt/preferences like this:
Package: <package-name> (Here, '*' means all packages)
Pin: release *
Pin-Priority: <less than 0>

   For example to block updates for package apache2 add the entry as shown:
Package: apache2
Pin: release o=Ubuntu
Pin-Priority: 1

   [61]Block Package Update Using Preference File Block Package Update Using Preference File

   Block Package Update Using Preference File

   We can use other options with release keyword for further identifying the package on which we are
   applying the Pin Priority. Those keywords are:
    1. a -> Archive
    2. c -> Component
    3. o -> Origin
    4. l -> Label
    5. n -> Architecture

   like:
Pin: release o=Debian,a=Experimental

   Would mean to pull the stated package from Debian package experimental archive.

Blacklist a Package Update using APT Autoremove File

   Another way to blacklist a package from installation is to update its entry in one of the files
   contained in /etc/apt/apt.conf.d/ directory which is 01autoremove.

   Sample file is shown below:
APT
{
  NeverAutoRemove
  {
        "^firmware-linux.*";
        "^linux-firmware$";
  };

  VersionedKernelPackages
  {
        # linux kernels
        "linux-image";
        "linux-headers";
        "linux-image-extra";
        "linux-signed-image";
        # kfreebsd kernels
        "kfreebsd-image";
        "kfreebsd-headers";
        # hurd kernels
        "gnumach-image";
        # (out-of-tree) modules
        ".*-modules";
        ".*-kernel";
        "linux-backports-modules-.*";
        # tools
        "linux-tools";
  };

  Never-MarkAuto-Sections
  {
        "metapackages";
        "restricted/metapackages";
        "universe/metapackages";
        "multiverse/metapackages";
        "oldlibs";
        "restricted/oldlibs";
        "universe/oldlibs";
        "multiverse/oldlibs";
  };
};

   Now, for blacklisting any package, just need to enter its name in Never-MarkAuto-Sections. Just enter
   the name of the package at the end in Never-MarkAuto-Section and Save and Close the file. This would
   block apt for searching for further updates of that package.

   For example, to blacklist a package from being update add the entry as shown:
Never-MarkAuto-Sections
  {
        "metapackages";
        "restricted/metapackages";
        "universe/metapackages";
        "multiverse/metapackages";
        "oldlibs";
        "restricted/oldlibs";
        "universe/oldlibs";
        "multiverse/oldlibs";
        "apache2*";
  };
};

Custom Package Selection for Update

   Another alternative for this is to choose what you want to update. The apt tool gives you freedom to
   choose what you want to update, but for this you should have knowledge about what all packages are
   available for up-gradation.

   For such a thing, following set of commands can prove to be helpful:

   a. To List what packages have updates pending.
# apt-get -u -V upgrade

   b. To install only selective packages.
# apt-get --only-upgrade install <package-name>

   [62]Update Selected Packages Update Selected Packages

   Update Selected Packages

Conclusion

   In this article, we’ve explained few ways to disable/block or blacklist package updates using APT
   way. If you know any other preferred way, do let us know via comments or if you were looking for yum
   command to disable/lock package update, then read this below article.



---
http://www.tecmint.com/useful-basic-commands-of-apt-get-and-apt-cache-for-package-management/

25 Useful Basic Commands of APT-GET and APT-CACHE for Package Management
by Ravi Saive | Published: March 13, 2013 | Last Updated: January 3, 2015

This article explains how quickly you can learn to install, remove, update and search software packages
using apt-get and apt-cache commands from the command line. This article provides some useful commands
that will help you to handle package management in Debian/Ubuntu based systems.

APT-GET and APT-CACHE Commands
APT-GET and APT-CACHE Commands

What is apt-get?
The apt-get utility is a powerful and free package management command line program, that is used to work
with Ubuntu’s APT (Advanced Packaging Tool) library to perform installation of new software packages,
removing existing software packages, upgrading of existing software packages and even used to upgrading
the entire operating system.

What is apt-cache?
The apt-cache command line tool is used for searching apt software package cache. In simple words, this
tool is used to search software packages, collects information of packages and also used to search for
what available packages are ready for installation on Debian or Ubuntu based systems.

APT-CACHE – 5 Useful Basic Commands

1. How Do I List All Available Packages?
To list all the available packages, type the following command.
$ apt-cache pkgnames
esseract-ocr-epo
pipenightdreams
mumudvb
tbb-examples
libsvm-java
libmrpt-hmtslam0.9
libboost-timer1.50-dev
kcm-touchpad
g++-4.5-multilib
...

2. How Do I Find Out Package Name and Description of Software?
To find out the package name and with it description before installing, use the ‘search‘ flag. Using
“search” with apt-cache will display a list of matched packages with short description. Let’s say
you would like to find out description of package ‘vsftpd‘, then command would be.

$ apt-cache search vsftpd
vsftpd - lightweight, efficient FTP server written for security
ccze - A robust, modular log coloriser
ftpd - File Transfer Protocol (FTP) server
yasat - simple stupid audit tool
To find and list down all the packages starting with ‘vsftpd‘, you could use the following command.

$ apt-cache pkgnames vsftpd
vsttpd

3. How Do I Check Package Information?
For example, if you would like to check information of package along with it short description say
(version number, check sums, size, installed size, category etc). Use ‘show‘ sub command as shown below.
$ apt-cache show netcat
Package: netcat
Priority: optional
Section: universe/net
Installed-Size: 30
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Original-Maintainer: Ruben Molina <rmolina@udea.edu.co>
Architecture: all
Version: 1.10-40
Depends: netcat-traditional (>= 1.10-39)
Filename: pool/universe/n/netcat/netcat_1.10-40_all.deb
Size: 3340
MD5sum: 37c303f02b260481fa4fc9fb8b2c1004
SHA1: 0371a3950d6967480985aa014fbb6fb898bcea3a
SHA256: eeecb4c93f03f455d2c3f57b0a1e83b54dbeced0918ae563784e86a37bcc16c9
Description-en: TCP/IP swiss army knife -- transitional package
 This is a "dummy" package that depends on lenny's default version of
 netcat, to ease upgrades. It may be safely removed.
Description-md5: 1353f8c1d079348417c2180319bdde09
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Origin: Ubuntu

4. How Do I Check Dependencies for Specific Packages?
Use the ‘showpkg‘ sub command to check the dependencies for particular software packages. whether
those dependencies packages are installed or not. For example, use the ‘showpkg‘ command along
with package-name.
$ apt-cache showpkg vsftpd
Package: vsftpd
Versions:
2.3.5-3ubuntu1 (/var/lib/apt/lists/in.archive.ubuntu.com_ubuntu_dists_quantal_main_binary-i386_Packages)
 Description Language:
                 File:
                 /var/lib/apt/lists/in.archive.ubuntu.com_ubuntu_dists_quantal_main_binary-i386_Packages
                  MD5: 81386f72ac91a5ea48f8db0b023f3f9b
 Description Language: en
                 File: /var/lib/apt/lists/in.archive.ubuntu.com_ubuntu_dists_quantal_main_i18n_Translation-en
                  MD5: 81386f72ac91a5ea48f8db0b023f3f9b

Reverse Depends:
  ubumirror,vsftpd
  harden-servers,vsftpd
Dependencies:
2.3.5-3ubuntu1 - debconf (18 0.5) debconf-2.0 (0 (null)) upstart-job (0 (null)) libc6 (2 2.15) libcap2
(2 2.10) libpam0g (2 0.99.7.1) libssl1.0.0 (2 1.0.0) libwrap0 (2 7.6-4~) adduser (0 (null)) libpam-modules
(0 (null)) netbase (0 (null)) logrotate (0 (null)) ftp-server (0 (null)) ftp-server (0 (null))
Provides:
2.3.5-3ubuntu1 - ftp-server
Reverse Provides:

5. How Do I Check statistics of Cache
The ‘stats‘ sub command will display overall statistics about the cache. For example, the following
command will display Total package names is the number of packages have found in the cache.
$ apt-cache stats
Total package names: 51868 (1,037 k)
Total package structures: 51868 (2,490 k)
  Normal packages: 39505
  Pure virtual packages: 602
  Single virtual packages: 3819
  Mixed virtual packages: 1052
  Missing: 6890
Total distinct versions: 43015 (2,753 k)
Total distinct descriptions: 81048 (1,945 k)
Total dependencies: 252299 (7,064 k)
Total ver/file relations: 45567 (729 k)
Total Desc/File relations: 81048 (1,297 k)
Total Provides mappings: 8228 (165 k)
Total globbed strings: 286 (3,518 )
Total dependency version space: 1,145 k
Total slack space: 62.6 k
Total space accounted for: 13.3 M

APT-GET – 20 Useful Basic Commands for Package Management

6. How to Update System Packages
The ‘update‘ command is used to resynchronize the package index files from the their sources specified
in /etc/apt/sources.list file. The update command fetched the packages from their locations and update
the packages to newer version.
$ sudo apt-get update
[sudo] password for tecmint:
Ign http://security.ubuntu.com quantal-security InRelease
Get:1 http://security.ubuntu.com quantal-security Release.gpg [933 B]
Get:2 http://security.ubuntu.com quantal-security Release [49.6 kB]
Ign http://in.archive.ubuntu.com quantal InRelease
Ign http://in.archive.ubuntu.com quantal-updates InRelease
Get:3 http://repo.varnish-cache.org precise InRelease [13.7 kB]
Ign http://in.archive.ubuntu.com quantal-backports InRelease
Hit http://in.archive.ubuntu.com quantal Release.gpg
Get:4 http://security.ubuntu.com quantal-security/main Sources [34.8 kB]
Get:5 http://in.archive.ubuntu.com quantal-updates Release.gpg [933 B]
...

7. How to Upgrade Software Packages
The ‘upgrade‘ command is used to upgrade all the currently installed software packages on the
system. Under any circumstances currently installed packages are not removed or packages which are not
already installed neither retrieved and installed to satisfy upgrade dependencies.
$ sudo apt-get upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages have been kept back:
  linux-headers-generic linux-image-generic wine1.5 wine1.5-i386
The following packages will be upgraded:
  activity-log-manager-common activity-log-manager-control-center adium-theme-ubuntu alacarte
  alsa-base app-install-data-partner appmenu-gtk appmenu-gtk3 apport apport-gtk apt
  apt-transport-https apt-utils aptdaemon aptdaemon-data at-spi2-core bamfdaemon base-files bind9-host
   ...
However, if you want to upgrade, unconcerned of whether software packages will be added or removed to
fulfill dependencies, use the ‘dist-upgrade‘ sub command.

$ sudo apt-get dist-upgrade

8. How Do I Install or Upgrade Specific Packages?
The ‘install‘ sub command is tracked by one or more packages wish for installation or upgrading.
$ sudo apt-get install netcat
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  netcat-traditional
The following NEW packages will be installed:
  netcat netcat-traditional
0 upgraded, 2 newly installed, 0 to remove and 328 not upgraded.
Need to get 67.1 kB of archives.
After this operation, 186 kB of additional disk space will be used.
Do you want to continue [Y/n]? y
Get:1 http://in.archive.ubuntu.com/ubuntu/ quantal/universe netcat-traditional i386 1.10-40 [63.8 kB]
Get:2 http://in.archive.ubuntu.com/ubuntu/ quantal/universe netcat all 1.10-40 [3,340 B]
Fetched 67.1 kB in 1s (37.5 kB/s)
Selecting previously unselected package netcat-traditional.
(Reading database ... 216118 files and directories currently installed.)
Unpacking netcat-traditional (from .../netcat-traditional_1.10-40_i386.deb) ...
Selecting previously unselected package netcat.
Unpacking netcat (from .../netcat_1.10-40_all.deb) ...
Processing triggers for man-db ...
Setting up netcat-traditional (1.10-40) ...
Setting up netcat (1.10-40) ...

9. How I can Install Multiple Packages?
You can add more than one package name along with the command in order to install multiple packages at
the same time. For example, the following command will install packages ‘nethogs‘ and ‘goaccess‘.
$ sudo apt-get install nethogs goaccess
Reading package lists... Done
Building dependency tree
Reading state information... Done
goaccess is already the newest version.
nethogs is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 328 not upgraded.

10. How to Install Several Packages using Wildcard
With the help of regular expression you can add several packages with one string. For example, we use *
wildcard to install several packages that contains the ‘*name*‘ string, name would be ‘package-name’.
$ sudo apt-get install '*name*'

11. How to install Packages without Upgrading
Using sub ‘–no-upgrade‘ command will prevent already installed packages from upgrading.
$ sudo apt-get install packageName --no-upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
Skipping vsftpd, it is already installed and upgrade is not set.
0 upgraded, 0 newly installed, 0 to remove and 328 not upgraded.

12. How to Upgrade Only Specific Packages
The ‘–only-upgrade‘ command do not install new packages but it only upgrade the already installed
packages and disables new installation of packages.
$ sudo apt-get install packageName --only-upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
vsftpd is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 328 not upgraded.

13. How Do I Install Specific Package Version?
Let’s say you wish to install only specific version of packages, simply use the ‘=‘ with the
package-name and append desired version.
$ sudo apt-get install vsftpd=2.3.5-3ubuntu1
Reading package lists... Done
Building dependency tree
Reading state information... Done
vsftpd is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 328 not upgraded.

14. How Do I Remove Packages Without Configuration
To un-install software packages without removing their configuration files (for later re-use the same
configuration). Use the ‘remove‘ command as shown.
$ sudo apt-get remove vsftpd
[sudo] password for tecmint:
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages will be REMOVED:
  vsftpd
0 upgraded, 0 newly installed, 1 to remove and 328 not upgraded.
After this operation, 364 kB disk space will be freed.
Do you want to continue [Y/n]? y
(Reading database ... 216156 files and directories currently installed.)
Removing vsftpd ...
vsftpd stop/waiting
Processing triggers for ureadahead ...
Processing triggers for man-db ...

15. How Do I Completely Remove Packages
To remove software packages including their configuration files, use the ‘purge‘ sub command as
shown below.
$ sudo apt-get purge vsftpd
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages will be REMOVED:
  vsftpd*
0 upgraded, 0 newly installed, 1 to remove and 328 not upgraded.
After this operation, 0 B of additional disk space will be used.
Do you want to continue [Y/n]? y
(Reading database ... 216107 files and directories currently installed.)
Removing vsftpd ...
Purging configuration files for vsftpd ...
Processing triggers for ureadahead ...

Alternatively, you can combine both the commands together as shown below.
$ sudo apt-get remove --purge vsftpd
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages will be REMOVED:
  vsftpd*
0 upgraded, 0 newly installed, 1 to remove and 328 not upgraded.
After this operation, 364 kB disk space will be freed.
Do you want to continue [Y/n]? y
(Reading database ... 216156 files and directories currently installed.)
Removing vsftpd ...
vsftpd stop/waiting
Purging configuration files for vsftpd ...
Processing triggers for ureadahead ...
Processing triggers for man-db ...

16. How I Can Clean Up Disk Space
The ‘clean‘ command is used to free up the disk space by cleaning retrieved (downloaded) .deb files
(packages) from the local repository.
$ sudo apt-get clean

17. How Do I Download Only Source Code of Package
To download only source code of particular package, use the option ‘–download-only source‘ with
‘package-name’ as shown.
$ sudo apt-get --download-only source vsftpd
Reading package lists... Done
Building dependency tree
Reading state information... Done
Need to get 220 kB of source archives.
Get:1 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (dsc) [1,883 B]
Get:2 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (tar) [188 kB]
Get:3 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (diff) [30.5 kB]
Fetched 220 kB in 4s (49.1 kB/s)
Download complete and in download only mode

18. How Can I Download and Unpack a Package
To download and unpack source code of a package to a specific directory, type the following command.
$ sudo apt-get source vsftpd
Reading package lists... Done
Building dependency tree
Reading state information... Done
Need to get 220 kB of source archives.
Get:1 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (dsc) [1,883 B]
Get:2 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (tar) [188 kB]
Get:3 http://in.archive.ubuntu.com/ubuntu/ quantal/main vsftpd 2.3.5-3ubuntu1 (diff) [30.5 kB]
Fetched 220 kB in 1s (112 kB/s)
gpgv: Signature made Thursday 24 May 2012 02:35:09 AM IST using RSA key ID 2C48EE4E
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./vsftpd_2.3.5-3ubuntu1.dsc
dpkg-source: info: extracting vsftpd in vsftpd-2.3.5
dpkg-source: info: unpacking vsftpd_2.3.5.orig.tar.gz
dpkg-source: info: unpacking vsftpd_2.3.5-3ubuntu1.debian.tar.gz
dpkg-source: info: applying 01-builddefs.patch
dpkg-source: info: applying 02-config.patch
dpkg-source: info: applying 03-db-doc.patch
dpkg-source: info: applying 04-link-local.patch
dpkg-source: info: applying 05-whitespaces.patch
dpkg-source: info: applying 06-greedy.patch
dpkg-source: info: applying 07-utf8.patch
dpkg-source: info: applying 08-manpage.patch
dpkg-source: info: applying 09-s390.patch
dpkg-source: info: applying 10-remote-dos.patch
dpkg-source: info: applying 11-alpha.patch
dpkg-source: info: applying 09-disable-anonymous.patch
dpkg-source: info: applying 12-ubuntu-use-snakeoil-ssl.patch

19. How Can I Download, Unpack and Compile a Package
You can also download, unpack and compile the source code at the same time, using option ‘–compile‘
as shown below.
$ sudo apt-get --compile source goaccess
[sudo] password for tecmint:
Reading package lists... Done
Building dependency tree
Reading state information... Done
Need to get 130 kB of source archives.
Get:1 http://in.archive.ubuntu.com/ubuntu/ quantal/universe goaccess 1:0.5-1 (dsc) [1,120 B]
Get:2 http://in.archive.ubuntu.com/ubuntu/ quantal/universe goaccess 1:0.5-1 (tar) [127 kB]
Get:3 http://in.archive.ubuntu.com/ubuntu/ quantal/universe goaccess 1:0.5-1 (diff) [2,075 B]
Fetched 130 kB in 1s (68.0 kB/s)
gpgv: Signature made Tuesday 26 June 2012 09:38:24 AM IST using DSA key ID A9FD4821
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./goaccess_0.5-1.dsc
dpkg-source: info: extracting goaccess in goaccess-0.5
dpkg-source: info: unpacking goaccess_0.5.orig.tar.gz
dpkg-source: info: unpacking goaccess_0.5-1.debian.tar.gz
dpkg-buildpackage: source package goaccess
dpkg-buildpackage: source version 1:0.5-1
dpkg-buildpackage: source changed by Chris Taylor <ctaylor@debian.org>
dpkg-buildpackage: host architecture i386
 dpkg-source --before-build goaccess-0.5
dpkg-checkbuilddeps: Unmet build dependencies: debhelper (>= 9) autotools-dev libncurses5-dev libglib2.0-dev
libgeoip-dev autoconf
dpkg-buildpackage: warning: build dependencies/conflicts unsatisfied; aborting
dpkg-buildpackage: warning: (Use -d flag to override.)
...

20. How Do I Download a Package Without Installing
Using ‘download‘ option, you can download any given package without installing it. For example,
the following command will only download ‘nethogs‘ package to current working directory.
$ sudo apt-get download nethogs
Get:1 Downloading nethogs 0.8.0-1 [27.1 kB]
Fetched 27.1 kB in 3s (7,506 B/s)

21. How Do I Check Change Log of Package?
The ‘changelog‘ flag downloads a package change-log and shows the package version that is installed.
$ sudo apt-get changelog vsftpd
vsftpd (2.3.5-3ubuntu1) quantal; urgency=low

  * Merge from Debian testing (LP: #1003644).  Remaining changes:
    + debian/vsftpd.upstart: migrate vsftpd to upstart.
    + Add apport hook (LP: #513978):
      - debian/vsftpd.apport: Added.
      - debian/control: Build-depends on dh-apport.
      - debian/rules: Add --with apport.
    + Add debian/watch file.
    + debian/patches/09-disable-anonymous.patch: Disable anonymous login
      by default. (LP: #528860)
  * debian/patches/12-ubuntu-us-snakeoil-ssl.patch: Use snakeoil SSL
    certificates and key.

 -- Andres Rodriguez <andreserl@ubuntu.com>  Wed, 23 May 2012 16:59:36 -0400
...

22. How Do I Check Broken Dependencies?
The ‘check‘ command is a diagnostic tool. It used to update package cache and checks for broken
dependencies.
$ sudo apt-get check
[sudo] password for tecmint:
Reading package lists... Done
Building dependency tree
Reading state information... Done

23. How Do I Search and Build Dependencies?
This ‘build-dep‘ command searches the local repositories in the system and install the build dependencies
for package. If the package does not exists in the local repository it will return an error code.
$ sudo apt-get build-dep netcat
The following NEW packages will be installed:
  debhelper dh-apparmor html2text po-debconf quilt
0 upgraded, 5 newly installed, 0 to remove and 328 not upgraded.
Need to get 1,219 kB of archives.
After this operation, 2,592 kB of additional disk space will be used.
Do you want to continue [Y/n]? y
Get:1 http://in.archive.ubuntu.com/ubuntu/ quantal/main html2text i386 1.3.2a-15build1 [91.4 kB]
Get:2 http://in.archive.ubuntu.com/ubuntu/ quantal/main po-debconf all 1.0.16+nmu2ubuntu1 [210 kB]
Get:3 http://in.archive.ubuntu.com/ubuntu/ quantal/main dh-apparmor all 2.8.0-0ubuntu5 [9,846 B]
Get:4 http://in.archive.ubuntu.com/ubuntu/ quantal/main debhelper all 9.20120608ubuntu1 [623 kB]
Get:5 http://in.archive.ubuntu.com/ubuntu/ quantal/main quilt all 0.60-2 [285 kB]
Fetched 1,219 kB in 4s (285 kB/s)
...

24. How I Can Auto clean Apt-Get Cache?
The ‘autoclean‘ command deletes all .deb files from /var/cache/apt/archives to free-up significant
volume of disk space.
$ sudo apt-get autoclean
Reading package lists... Done
Building dependency tree
Reading state information... Done

25. How I Can Auto remove Installed Packages?
The ‘autoremove‘ sub command is used to auto remove packages that were certainly installed to satisfy
dependencies for other packages and but they were now no longer required. For example, the following
command will remove an installed package with its dependencies.
$ sudo apt-get autoremove vsftpd
Reading package lists... Done
Building dependency tree
Reading state information... Done
Package 'vsftpd' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 328 not upgraded.
I’ve covered most of the available options with apt-get and apt-cache commands, but still there are
more options available, you can check them out using ‘man apt-get‘ or ‘man apt-cache‘ from the
terminal. I hope you enjoyed reading this article, If I’ve missed anything and you would like me to
add to the list. Please feel free to mention in the comment below.



---
http://www.tecmint.com/dpkg-command-examples/

15 Practical Examples of “dpkg commands” for Debian Based Distros
by Avishek Kumar | Published: October 1, 2013 | Last Updated: January 3, 2015

Debian GNU/Linux, the mother Operating System of a number of Linux distributions including Knoppix, Kali,
Ubuntu, Mint, etc. uses various package Manager like dpkg, apt, aptitude, synaptic, tasksel, deselect,
dpkg-deb and dpkg-split.

dpkg Command Examples

15 dpkg Command Examples
We will be describing each of these briefly before focusing on ‘dpkg‘ command.

APT Command
Apt stands for Advanced Package Tool. It doesn’t deal with ‘deb‘ package and works directly,
but works with ‘deb‘ archive from the location specified in the “/etc/apt/sources.list” file.

Read More : 25 Useful Basic Commands of APT-GET Commands

Aptitude
Aptitude is a text based package manager for Debian which is front-end to ‘apt‘, which enables user
to manage packages easily.

Synaptic
Graphical package manager which makes it easy to install, upgrade and uninstall packages even to novice.

Tasksel
Tasksel lets the user to install all the relevant packages related to a specific task, viz.,
Desktop-environment.

Deselect
A menu-driven package management tool, initially used during the first time install and now is replaced
with aptitude.

Dpkg-deb
Interacts with Debian archive.

Dpkg-split
Useful in splitting and merging large file into chunks of small files to be stored on media of smaller
size like floppy-disk.

Dpkg Command
dpkg is the main package management program in Debian and Debian based System. It is used to install,
build, remove, and manage packages. Aptitude is the primary front-end to dpkg.

Some the most commonly used dpkg commands along with their usages are listed here:

1. Install a Package
For installing an “.deb” package, use the command with “-i” option. For example, to install an
“.deb” package called “flashpluginnonfree_2.8.2+squeeze1_i386.deb” use the following command.
[root@tecmint~]# dpkg -i flashpluginnonfree_2.8.2+squeeze1_i386.deb
Selecting previously unselected package flashplugin-nonfree.
(Reading database ... 465729 files and directories currently installed.)
Unpacking flashplugin-nonfree (from flashplugin-nonfree_3.2_i386.deb) ...
Setting up flashplugin-nonfree (1:3.2) ...
--2013-10-01 16:23:40--
http://fpdownload.macromedia.com/get/flashplayer/pdc/11.2.202.310/install_flash_player_11_linux.i386.tar.gz
Resolving fpdownload.macromedia.com (fpdownload.macromedia.com)... 23.64.66.70
Connecting to fpdownload.macromedia.com (fpdownload.macromedia.com)|23.64.66.70|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 6923724 (6.6M) [application/x-gzip]
Saving to: ‘/tmp/flashplugin-nonfree.FPxQ4l02fL/install_flash_player_11_linux.i386.tar.gz’

2. List all the installed Packages
To view and list all the installed packages, use the “-l” option along with the command.
[root@tecmint~]# dpkg -l
Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend
|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)
||/ Name                                   Version                  Architecture    Description
+++-======================================-========================-==========================================
ii  accerciser                             3.8.0-0ubuntu1           all             interactive Python
	accessibility explorer for the GNOME desktop
ii  account-plugin-aim                     3.6.4-0ubuntu4.1         i386            Messaging account
	plugin for AIM
ii  account-plugin-facebook                0.10bzr13.03.26-0ubuntu1 i386            GNOME Control Center
	account plugin for single signon - facebook
ii  account-plugin-flickr                  0.10bzr13.03.26-0ubuntu1 i386            GNOME Control Center
	account plugin for single signon - flickr
ii  account-plugin-generic-oauth           0.10bzr13.03.26-0ubuntu1 i386            GNOME Control Center
	account plugin for single signon - generic OAuth
ii  account-plugin-google                  0.10bzr13.03.26-0ubuntu1 i386            GNOME Control Center
	account plugin for single signon
rc  account-plugin-identica                0.10bzr13.03.26-0ubuntu1 i386            GNOME Control Center
	account plugin for single signon - identica
ii  account-plugin-jabber                  3.6.4-0ubuntu4.1         i386            Messaging account
	plugin for Jabber/XMPP
....

To view a specific package installed or not use the option “-l” along with package-name. For example,
check whether apache2 package installed or not.

[root@tecmint~]# dpkg -l apache2
Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend
|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)
||/ Name                                   Version                  Architecture    Description
+++-======================================-========================-==========================================
ii  apache2                                2.2.22-6ubuntu5.1        i386            Apache HTTP Server
	metapackage
	
3. Remove a Package
To remove the “.deb” package, we must specify the package name “flashpluginnonfree“, not the original
name “flashplugin-nonfree_3.2_i386.deb“. The “-r” option is used to remove/uninstall a package.

[root@tecmint~]# dpkg -r flashpluginnonfree
(Reading database ... 142891 files and directories currently installed.)
Removing flashpluginnonfree ...
Processing triggers for man-db ...
Processing triggers for menu ...
Processing triggers for desktop-file-utils ...
Processing triggers for gnome-menus ...
You can also use ‘p‘ option in place of ‘r’ which will remove the package along with configuration
file. The ‘r‘ option will only remove the package and not configuration files.

[root@tecmint~]# dpkg -p flashpluginnonfree

4. View the Content of a Package
To view the content of a particular package, use the “-c” option as shown. The command will display
the contents of a “.deb” package in long-list format.
[root@tecmint~]# dpkg -c flashplugin-nonfree_3.2_i386.deb
drwxr-xr-x root/root         0 2012-12-14 22:54 ./
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/bin/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/lib/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/lib/mozilla/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/lib/mozilla/plugins/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/lib/flashplugin-nonfree/
-rw-r--r-- root/root      3920 2009-09-09 22:51 ./usr/lib/flashplugin-nonfree/pubkey.asc
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/man/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/man/man8/
-rw-r--r-- root/root       716 2012-12-14 22:54 ./usr/share/man/man8/update-flashplugin-nonfree.8.gz
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/applications/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/icons/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/icons/hicolor/
drwxr-xr-x root/root         0 2012-12-14 22:54 ./usr/share/icons/hicolor/24x24/
....

5. Check a Package is installed or not
Using “-s” option with package name, will display whether an deb package installed or not.
[root@tecmint~]# dpkg -s flashplugin-nonfree
Package: flashplugin-nonfree
Status: install ok installed
Priority: optional
Section: contrib/web
Installed-Size: 177
Maintainer: Bart Martens <bartm@debian.org>
Architecture: i386
Version: 1:3.2
Replaces: flashplugin (<< 6)
Depends: debconf | debconf-2.0, wget, gnupg, libatk1.0-0, libcairo2, libfontconfig1, libfreetype6,
libgcc1, libglib2.0-0, libgtk2.0-0 (>= 2.14), libnspr4, libnss3, libpango1.0-0, libstdc++6, libx11-6,
libxext6, libxt6, libcurl3-gnutls, binutils
Suggests: iceweasel, konqueror-nsplugins, ttf-mscorefonts-installer, ttf-dejavu, ttf-xfree86-nonfree,
flashplugin-nonfree-extrasound, hal
Conflicts: flashplayer-mozilla, flashplugin (<< 6), libflash-mozplugin, xfs (<< 1:1.0.1-5)
Description: Adobe Flash Player - browser plugin
...

6. Check the location of Packages installed
To list location of files to be installed to your system from package-name.
[root@tecmint~]# dpkg -L flashplugin-nonfree
/.
/usr
/usr/bin
/usr/lib
/usr/lib/mozilla
/usr/lib/mozilla/plugins
/usr/lib/flashplugin-nonfree
/usr/lib/flashplugin-nonfree/pubkey.asc
/usr/share
/usr/share/man
/usr/share/man/man8
/usr/share/man/man8/update-flashplugin-nonfree.8.gz
/usr/share/applications
/usr/share/icons
/usr/share/icons/hicolor
...

7. Install all Packages from a Directory
Recursively, install all the regular files matching pattern “*.deb” found at specified directories
and all of its subdirectories. This can be used with “-R” and “–install” options. For example,
I will install all the “.deb” packages from the directory called “debpackages“.
[root@tecmint~]# dpkg -R --install debpackages/
(Reading database ... 465836 files and directories currently installed.)
Preparing to replace flashplugin-nonfree 1:3.2 (using .../flashplugin-nonfree_3.2_i386.deb) ...
Unpacking replacement flashplugin-nonfree ...
Setting up flashplugin-nonfree (1:3.2) ...
Processing triggers for man-db ...
Processing triggers for bamfdaemon ...
Rebuilding /usr/share/applications/bamf-2.index...
Processing triggers for gnome-menus ...

8. Unpack the Package but dont’ Configure
Using action “–unpack” will unpack the package, but it will don’t install or configure it.
[root@tecmint~]# dpkg --unpack flashplugin-nonfree_3.2_i386.deb
(Reading database ... 465836 files and directories currently installed.)
Preparing to replace flashplugin-nonfree 1:3.2 (using flashplugin-nonfree_3.2_i386.deb) ...
Unpacking replacement flashplugin-nonfree ...
Processing triggers for man-db ...
Processing triggers for bamfdaemon ...
Rebuilding /usr/share/applications/bamf-2.index...
Processing triggers for gnome-menus ...

9. Reconfigure a Unpacked Package
The option “–configure” will reconfigure a already unpacked package.
[root@tecmint~]# dpkg --configure flashplugin-nonfree
Setting up flashplugin-nonfree (1:3.2) ...

10. Replace available Package information
The “–-update-avail” option replace the old information with the available information in the
Packages file.
[root@tecmint~]# dpkg –-update-avail package_name

11. Erase Existing Available information of Package
The action “–clear-avaial” will erase the current information about what packages are available.
[root@tecmint~]# dpkg –-clear-avail

12. Forget Uninstalled and Unavailable Packages
The dpkg command with option “–forget-old-unavail” will automatically forget uninstalled and
unavailable packages .
[root@tecmint~]# dpkg --forget-old-unavail

13. Display dpkg Licence
[root@tecmint~]# dpkg --licence

14. Display dpkg Version
The “–version” argument will display dpkg version information.
[root@tecmint~]# dpkg –version
Debian `dpkg' package management program version 1.16.10 (i386).
This is free software; see the GNU General Public License version 2 or
later for copying conditions. There is NO warranty.

15. Get all the Help about dpkg
The “–help” option will display a list of available options of dpkg command.
[root@tecmint~]# dpkg –help
Usage: dpkg [<option> ...] <command>

Commands:
  -i|--install       <.deb file name> ... | -R|--recursive <directory> ...
  --unpack           <.deb file name> ... | -R|--recursive <directory> ...
  -A|--record-avail  <.deb file name> ... | -R|--recursive <directory> ...
  --configure        <package> ... | -a|--pending
  --triggers-only    <package> ... | -a|--pending
  -r|--remove        <package> ... | -a|--pending
  -P|--purge         <package> ... | -a|--pending
  --get-selections [<pattern> ...] Get list of selections to stdout.
  --set-selections                 Set package selections from stdin.
  --clear-selections               Deselect every non-essential package.
  --update-avail <Packages-file>   Replace available packages info.
  --merge-avail <Packages-file>    Merge with info from file.
  --clear-avail                    Erase existing available info.
  --forget-old-unavail             Forget uninstalled unavailable pkgs.
  -s|--status <package> ...        Display package status details.
...
That’s all for now. I’ll soon be here again with another interesting article. If I’ve missed any
command in the list do let me know via comments. Till then, Stay tuned and Keep connected to Tecmint. Like
and share us and help us spread. Don’t forget to mention your valuable thoughts in comment.
