filename: c_howto-set-custom-keyboard-shortcuts-from-terminal_20230404.txt
https://askubuntu.com/questions/597395/how-to-set-custom-keyboard-shortcuts-from-terminal

   How to set custom keyboard shortcuts from terminal for different Linux versions?

   Basically I want to know where Linux stores the keyboard shortcut files and how it can be edited.

   On my research I found a file ~/.config/compiz-1/compizconfig but it was more or like encrypted when
   I tried to open it with nano.

***
   Anonymous PlatypusAnonymous Platypus
     * Note, XFCE/Xubuntu systems already have an answer [**1]here

***
Adding shortcut keybindings in two steps from the command line (14.04+)

   Adding custom shortcuts from the command line can be done, but is a bit complicated; it needs to be
   done in a few steps per keybinding. On the other hand, it is pretty straightforward and can very well
   be scripted if you somehow want to do it from the command line (that was the question, right?).

   Just like in your interface (System Settings > "Keyboard" > "Shortcuts" > "Custom Shortcuts"), Custom
   keyboard shortcuts are made from command line in two steps:
    1. create the keybinding by editing (adding to-) the list that is returned by the command:
$> gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings

       The returned list looks like (if it were only one shortcut currently):
['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']

       Apply the edited list by the command:
$> gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "[<altered_list>]"
       (!! mind the double quotes !!)

       N.B. No need to say that the mention in the list (e.g. custom1, custom2) should be a unique one.
       If you script it, the script should prevent duplicates. In this case the edited list should look
       like e.g.:
['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', \
'/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/']

       to add one keybinding: custom1
    2. set its properties:
          + name:
$> gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:\
/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ name '<newname>'

          + command:
$> gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:\
/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ command '<newcommand>'

          + Key combination (for example <Primary><Alt>g):
$> gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:\
/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ binding '<key_combination>'


Example script to set a new custom shortcut
   The script below can be used to set a new shortcut key combination from the command line. It can be
   used with the command (assuming the key combination is available):
$> python3 /path/to/script.py '<name>' '<command>' '<key_combination>'

   An example:
   To set a shortcut key combination to open gedit with the key combination Alt+7:
$> python3 /path/to/script.py 'open gedit' 'gedit' '<Alt>7'

   The script:
#!/usr/bin/env python3
import subprocess
import sys

# defining keys & strings to be used
key = "org.gnome.settings-daemon.plugins.media-keys custom-keybindings"
subkey1 = key.replace(" ", ".")[:-1]+":"
item_s = "/"+key.replace(" ", "/").replace(".", "/")+"/"
firstname = "custom"

# get the current list of custom shortcuts
get = lambda cmd: subprocess.check_output(["/bin/bash", "-c", cmd]).decode("utf-8")
array_str = get("gsettings get "+key)

# in case the array was empty, remove the annotation hints
command_result = array_str.lstrip("@as")
current = eval(command_result)

# make sure the additional keybinding mention is no duplicate
n = 1
while True:
	new = item_s+firstname+str(n)+"/"
	if new in current:
		n = n+1
	else:
		break

# add the new keybinding to the list
current.append(new)
# create the shortcut, set the name, command and shortcut key
cmd0 = 'gsettings set '+key+' "'+str(current)+'"'
cmd1 = 'gsettings set '+subkey1+new+" name '"+sys.argv[1]+"'"
cmd2 = 'gsettings set '+subkey1+new+" command '"+sys.argv[2]+"'"
cmd3 = 'gsettings set '+subkey1+new+" binding '"+sys.argv[3]+"'"

for cmd in [cmd0, cmd1, cmd2, cmd3]:
	subprocess.call(["/bin/bash", "-c", cmd])

   How to use:
   Paste the script into an empty file, save it as set_customshortcut.py, run it as explained above.

Some of the mostly used key mentions (found experimentally, looking into the changes the GUI way made into
the binding value):

Super key:                 <Super>
Control key:               <Primary> or <Control>
Alt key:                   <Alt>
Shift key:                 <Shift>
numbers:                   1 (just the number)
Spacebar:                  space
Slash key:                 slash
Asterisk key:              asterisk (so it would need `<Shift>` as well)
Ampersand key:             ampersand (so it would need <Shift> as well)

a few numpad keys:
Numpad divide key (`/`):   KP_Divide
Numpad multiply (Asterisk):KP_Multiply
Numpad number key(s):      KP_1
Numpad `-`:                KP_Subtract



---
[**1]
https://askubuntu.com/questions/90513/how-do-i-change-my-keyboard-shortcuts-in-xubuntu/760958#760958

How do I change my keyboard shortcuts in xubuntu?

   I am a new Xubuntu user. Earlier when using Gnome, I was able to configure several desktop shortcuts,
   particularly for navigation between workspaces.

   But, now in Xubuntu, I cannot find those options.

   Where can I find those options.

***
   There are more available in Settings Editor in Settngs Manager, which can be launched from the
   command-line using:
xfce4-settings-editor

***
For Xfce 4.8 (Xubuntu 12.04 LTS)

   Keyboard shortcuts are accessible from Settings -> Settings Manager -> Keyboard -> Application
   Shortcuts:
     * Choose "Add" to add a command you need to assign to a shortcut.
       enter image description here
     * In the window following "Ok" press the key combination you want to assign:
       enter image description here

***
Automate this with xfconf-query

   If multiple machines require configuring keyboard shortcuts, this can be done without having to
   repeatedly open windows. Rather, use the very handy xfconf-query command in a bash script to --set a
   --property in xfce4-keyboard-shortcuts.xml.

   Here is an example:
$> xfconf-query --create --channel xfce4-keyboard-shortcuts --property /commands/custom/XF86AudioMute \
--type string --set 'amixer -D pulse set Master 1+ toggle'

   As a matter of fact, this is part of my solution to restore the function of the mute button in
   Xubuntu 12.04.

** [5+]
Easy Way
   Heres [**2][https://github.com/uladkasach/Keybind/tree/master/xml/xfce4] a script that handles binding
   commands to keys cleanly in Xubuntu. Download keybind.c, compile it (example is given in readme in link)
   and simply run ./keybind "<keys to bind to>" "<command>"

   For example heres some I use:
./keybind "<Control><Alt>Delete" "gnome-system-monitor"

./keybind "<Control><Alt>Up" "xrandr -o inverted"
./keybind "<Control><Alt>Down" "xrandr -o normal"
./keybind "<Control><Alt>Right" "xrandr -o left"
./keybind "<Control><Alt>Left" "xrandr -o right"

   Disclosure: I created the script.

Slightly less Easy Way
   If you're running a Xubuntu system and want to do it from the terminal it is a simple procedure too.

   For debugging, here is where keybinding shortcuts are stored in XFCE4:
$> gedit ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml

   Underlying Schema:
   1) Remove existing commands bound to the binding keys
   2) Set new command to keys
1a)
`xfconf-query --reset --channel xfce4-keyboard-shortcuts --property "/commands/custom/<Control><Alt>Down"`<br/>
`xfconf-query --reset --channel xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Control><Alt>Down"`<br />
2)
`xfconf-query --create --channel xfce4-keyboard-shortcuts --property "/commands/custom/<Control><Alt>Down" \
--type string --set 'gedit'`

   note if you're binding to key, ubuntu systems treat and equally and you will need to unbind any key
   bindings with in the above example <Primary><Alt>Down


---
[**2]
https://github.com/uladkasach/Keybind/tree/master/xml/xfce4

README.md

This is a C implementation for keybinding custom commands in XFCE4, Xubuntu systems.
##Usage

Set a binding : ./binary '<binding>' '<command>' Remove a binding : ./binary '<binding>'

For example compile the binary :
$> gcc -o keybind keybind.c

use it :
$> ./keybind '<Control><Alt>7' 'gedit'
$> ./keybind '<Control><Alt>7'

Where keybinding shortcuts are stored in XFCE4:
$> gedit ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml

Underlying Schema:
1 & 2) Remove existing commands bound to the binding keys
3) Set new command to keys

    xfconf-query --reset --channel xfce4-keyboard-shortcuts --property "/commands/custom/<Control><Alt>Down"
    xfconf-query --reset --channel xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Control><Alt>Down"
    xfconf-query --create --channel xfce4-keyboard-shortcuts --property "/commands/custom/<Control><Alt>Down" \
	--type string --set 'gedit'

Note, you must clear the active bindings to both commands and xfwm4 in order for your new custom command to work.

See example key bindings in main README.md


---

