filename: curl-adds-parallel-host-control-20250806.txt
https://daniel.haxx.se/blog/2025/08/01/curl-adds-parallel-host-control/

curl adds parallel host control
August 1, 2025

   I'm convinced a lot of people have not yet figured out that curl has supported parallel downloads for
   six years already by now.

   Provided a practically unlimited number of URLs, curl can be asked to get them in a parallel fashion.
   It then makes sure to keep N transfers alive for as long as there is N or more transfers left to
   complete, where X is a custom number but 50 by default.

   Concurrently transferring data from potentially a large number of different hosts can drastically
   shorten transfer times and who doesn't prefer to complete their download job sooner rather than
   later?

Limit connections per host
   At times however, you may want to do a lot of transfers, and you want to do them in parallel for
   speed, but maybe you prefer to limit how many connections curl should use per each hostname among all
   the URLs?

   This per-host limit is a feature libcurl has offered applications for a long time and now the time
   has come for curl tool users to also enjoy its powers.

   Per host should perhaps be called per origin if we spoke web lingo, because it rather limits the
   number of connections to the same protocol + hostname + port number. We call that host here for
   simplicity.

   To set a cap on how many connections curl is allowed to use for each specific server use
   --parallel-max-host [number].

   For example, if you want to download ten million images from this site, but never use more than six
   connections:
$> curl --parallel --parallel-max-host 6 https://example.com/[1-10000000].jpg --remote-name

Connections
   Pay special attention to the exact term: this limits the number of connections used to each host. If
   the transfers are done using HTTP/2 or HTTP/3, they can be done using many streams over just one or a
   few connections so doing 50 or 200 transfers in parallel should still be perfectly doable even with a
   limited number of connections. Not so much with HTTP/1.

Ships in 8.16.0


---

