filename: jv_iterate-through-a-hashmap_20190402.txt
https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap

Iterate through a HashMap [duplicate]

   What's the best way to iterate over the items in a HashMap?

***
   Iterate through the entrySet() like so:
public static void printMap(Map mp) {
    Iterator it = mp.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry pair = (Map.Entry)it.next();
        System.out.println(pair.getKey() + " = " + pair.getValue());
        it.remove(); // avoids a ConcurrentModificationException
    }
}

***
what do you think about the following way:
Map<Integer, Integer> map = new HashMap<Integer, Integer>();
for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
    System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue());
}

***
   If you're only interested in the keys, you can iterate through the keySet() of the map:
Map<String, Object> map = ...;

for (String key : map.keySet()) {
    // ...
}

   If you only need the values, use values():
for (Object value : map.values()) {
    // ...
}

   Finally, if you want both the key and value, use entrySet():
for (Map.Entry<String, Object> entry : map.entrySet()) {
    String key = entry.getKey();
    Object value = entry.getValue();
    // ...
}

***
   Extracted from the reference: How to Iterate Over a Map in Java:

   There are several ways of iterating over a Map in Java. Let's go over the most common methods and
   review their advantages and disadvantages. Since all maps in Java implement the Map interface, the
   following techniques will work for any map implementation (HashMap, TreeMap, LinkedHashMap,
   Hashtable, etc.)

   Method #1: Iterating over entries using a For-Each loop.

   This is the most common method and is preferable in most cases. It should be used if you need both
   map keys and values in the loop.
Map<Integer, Integer> map = new HashMap<Integer, Integer>();
for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
    System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue());
}

   Note that the For-Each loop was introduced in Java 5, so this method is working only in newer
   versions of the language. Also a For-Each loop will throw NullPointerException if you try to iterate
   over a map that is null, so before iterating you should always check for null references.

   Method #2: Iterating over keys or values using a For-Each loop.

   If you need only keys or values from the map, you can iterate over keySet or values instead of
   entrySet.
Map<Integer, Integer> map = new HashMap<Integer, Integer>();

// Iterating over keys only
for (Integer key : map.keySet()) {
    System.out.println("Key = " + key);
}

// Iterating over values only
for (Integer value : map.values()) {
    System.out.println("Value = " + value);
}

   This method gives a slight performance advantage over entrySet iteration (about 10% faster) and is
   more clean.

   Method #3: Iterating using Iterator.

   Using Generics:
Map<Integer, Integer> map = new HashMap<Integer, Integer>();
Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator();
while (entries.hasNext()) {
    Map.Entry<Integer, Integer> entry = entries.next();
    System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue());
}

   Without Generics:
Map map = new HashMap();
Iterator entries = map.entrySet().iterator();
while (entries.hasNext()) {
    Map.Entry entry = (Map.Entry) entries.next();
    Integer key = (Integer)entry.getKey();
    Integer value = (Integer)entry.getValue();
    System.out.println("Key = " + key + ", Value = " + value);
}

   You can also use same technique to iterate over keySet or values.

   This method might look redundant, but it has its own advantages. First of all, it is the only way to
   iterate over a map in older versions of Java. The other important feature is that it is the only
   method that allows you to remove entries from the map during iteration by calling iterator.remove().
   If you try to do this during For-Each iteration you will get "unpredictable results" according to
   Javadoc.

   From a performance point of view this method is equal to a For-Each iteration.

   Method #4: Iterating over keys and searching for values (inefficient).
Map<Integer, Integer> map = new HashMap<Integer, Integer>();
for (Integer key : map.keySet()) {
    Integer value = map.get(key);
    System.out.println("Key = " + key + ", Value = " + value);
}

   This might look like a cleaner alternative for method #1, but in practice it is pretty slow and
   inefficient as getting values by a key might be time-consuming (this method in different Map
   implementations is 20%-200% slower than method #1). If you have FindBugs installed, it will detect
   this and warn you about inefficient iteration. This method should be avoided.

   Conclusion:

   If you need only keys or values from the map, use method #2. If you are stuck with older version of
   Java (less than 5) or planning to remove entries during iteration, you have to use method #3.
   Otherwise use method #1.
   [83]share|[84]improve this answer
   [85]edited Jul 6 '16 at 19:33
   [86]Peter Mortensen
   13.8k1987113
   answered Dec 8 '11 at 14:19
   [87]arvindarvind
   7,915195
     * 1
       Lets add the small caevet, that in case of ConcurrentMaps, iteration on keySet() will crash in
       general (there is no guarantee the values exist for earlier-gathered keys). On the other hand
       using iterators or entries is safe (they always refer to existing objects). – [88]P Marecki Feb
       29 '16 at 12:34
     * 2
       @arvind How would method #4 ever be inefficient? By definition, calling get() is always O(1) for
       a HashMap. That is the definition of a HashMap and the user asked for a HashMap. I do not get why
       this is so highly upvoted. If you are going to reference someone else's link, make sure it
       actually makes sense for the question asked. – [89]ohbrobig Jun 3 '18 at 13:09

   add a comment |
   (Submit)
   119
   (Submit)
for (Map.Entry<String, String> item : hashMap.entrySet()) {
    String key = item.getKey();
    String value = item.getValue();
}

   [90]share|[91]improve this answer
   [92]edited Feb 28 at 12:09
   [93]c-an
   572426
   answered Jul 23 '11 at 1:28
   [94]gaborgabor
   2,38841820
     * Is param the name of the HashMap? – [95]c-an Feb 27 at 0:53
     * @ChanjungKim yes , its the Name of the HashMap – [96]heman123 Feb 27 at 22:29

   add a comment |
   (Submit)
   86
   (Submit)

   You can iterate through the entries in a [97]Map in several ways. Get each key and value like this:
Map<?,?> map = new HashMap<Object, Object>();
for(Entry<?, ?> e: map.entrySet()){
    System.out.println("Key " + e.getKey());
    System.out.println("Value " + e.getValue());
}

   Or you can get the list of keys with
Collection<?> keys = map.keySet();
for(Object key: keys){
    System.out.println("Key " + key);
    System.out.println("Value " + map.get(key));
}

   If you just want to get all of the values and aren't concerned with the keys, you can use:
Collection<?> values = map.values();

   [98]share|[99]improve this answer
   [100]edited Apr 20 '18 at 16:52
   [101]Lonely Neuron
   3,06031834
   answered Jun 30 '09 at 23:43
   [102]codethulhucodethulhu
   3,3221515

   add a comment |
   (Submit)
   61
   (Submit)

   Smarter:
for (String key : hashMap.keySet()) {
    System.out.println("Key: " + key + ", Value: " + map.get(key));
}

   [103]share|[104]improve this answer
   answered Aug 11 '10 at 10:01
   [105]jkarreterojkarretero
   81362
     * 8
       this actually depends on whether or not you need the keys. if not, it's more efficient to use
       entrySet() as hashCode() does not get called. – [106]icfantv Oct 5 '11 at 22:33
     * 14
       map.get(key) for every iteration is not smarter -- its way slower – [107]ComputerEngineer88 Apr
       18 '13 at 21:30
     * 1
       map.entrySet() which returns entries which already contains both the key and the value. This way
       you don't have to call hashCode() and search the hash during the iteration.
       – [108]ComputerEngineer88 Apr 16 '16 at 13:11
     * Java 8 syntax. May still not work for Android development. "Android is not intended to be 100%
       compatible with any Java SE API version, not 6 nor 8 nor any. ... The JRE is the Java Runtime
       Environment while the JDK is the Java Development Kit. It is the JDK that you need for Android
       application development along with the existing Android SDK.Dec 9, 2013" [109]source
       – [110]jasonleonhard Aug 5 '17 at 22:40

   add a comment |
   (Submit)
   44
   (Submit)

   Depends. If you know you're going to need both the key and the value of every entry, then go through
   the entrySet. If you just need the values, then there's the values() method. And if you just need the
   keys, then use keyset().

   A bad practice would be to iterate through all of the keys, and then within the loop, always do
   map.get(key) to get the value. If you're doing that, then the first option I wrote is for you.
   [111]share|[112]improve this answer
   [113]edited Sep 27 '13 at 17:42
   [114]bofredo
   2,06952845
   answered Jun 30 '09 at 23:29
   [115]Gary KephartGary Kephart
   3,27043146
     * 1
       One more important point, the Set returned by keySet() and Collection returned by values() are
       both backed by the original Map. That is, if you make any modification in them they will be
       reflected back in the Map, however, both of them don't support add() and addAll() methods i.e.
       you can't add new key to the Set or new value in the Collection. – [116]sactiw Jan 24 '14 at 8:25

   add a comment |

Not the answer you're looking for? Browse other questions tagged [117]java [118]loops [119]hashmap
[120]iteration or [121]ask your own question.

   asked

   9 years, 9 months ago

   viewed

   3423243 times

   active

   [122]1 month ago
   Blog
     ________________________________________________________________________________________________

   [123]The Next CEO of Stack Overflow
   [124]Visit chat

Linked

   2858
   [125]How do I efficiently iterate over each entry in a Java Map?
   3
   [126]java.util.HashSet int iteration order
   2
   [127]Iterating through/Updating HashMap
   -3
   [128]Finding the n largest values in a hashmap
   0
   [129]Delete entry from HashMap
   0
   [130]Write LinkedHashMap to a text file?
   0
   [131]Java - best way to call a method of each object in a collection
   -3
   [132]Iterating HashMap with string key
   -2
   [133]How to return the value of a HashMap
   -1
   [134]Loop through HashMap
   [135]see more linked questions…

Related

   3400
   [136]Differences between HashMap and Hashtable?
   2858
   [137]How do I efficiently iterate over each entry in a Java Map?
   2208
   [138]What is the best way to iterate over a dictionary?
   1106
   [139]Iterating through a Collection, avoiding ConcurrentModificationException when removing objects
   in a loop
   2018
   [140]How do I call one constructor from another in Java?
   1644
   [141]Why is using “for…in” with array iteration a bad idea?
   812
   [142]How to remove items from a list while iterating?
   2679
   [143]Loop through an array in JavaScript
   874
   [144]How to directly initialize a HashMap (in a literal way)?
   1713
   [145]Iterate through object properties

[146]Hot Network Questions

     * [147]Can I cast Thunderwave and be at the center of its bottom face, but not be affected by it?
     * [148]What difference does it make matching a word with/without a trailing whitespace?
     * [149]Why doesn't Shulchan Aruch include the laws of destroying fruit trees?
     * [150]Can you teleport closer to a creature you are Frightened of?
     * [151]Read/write a pipe-delimited file line by line with some simple text manipulation
     * [152]Find the majority element, which appears more than half the time
     * [153]How did scripture get the name bible?
     * [154]Man transported from Alternate World into ours by a Neutrino Detector
     * [155]Another proof that dividing by 0 does not exist -- is it right?
     * [156]How to compactly explain secondary and tertiary characters without resorting to stereotypes?
     * [157]Is it possible to create a QR code using text?
     * [158]What does this strange code stamp on my passport mean?
     * [159]How does a dynamic QR code work?
     * [160]A hang glider, sudden unexpected lift to 25,000 feet altitude, what could do this?
     * [161]Is it reasonable to ask other researchers to send me their previous grant applications?
     * [162]Could a dragon use hot air to help it take off?
     * [163]Identify and count spells (Distinctive events within each group)
     * [164]How can I prove that a state of equilibrium is unstable?
     * [165]Is a distribution that is normal, but highly skewed, considered Gaussian?
     * [166]Early programmable calculators with RS-232
     * [167]logical reads on global temp table, but not on session-level temp table
     * [168]Find a path from s to t using as few red nodes as possible
     * [169]Is the 21st century's idea of "freedom of speech" based on precedent?
     * [170]Is it "common practice in Fourier transform spectroscopy to multiply the measured
       interferogram by an apodizing function"? If so, why?

   [171]more hot questions
   lang-java

[172]Stack Overflow

     * [173]Questions
     * [174]Jobs
     * [175]Developer Jobs Directory
     * [176]Salary Calculator
     * [177]Help
     * Mobile

[178]Products

     * [179]Teams
     * [180]Talent
     * [181]Advertising
     * [182]Enterprise

[183]Company

     * [184]About
     * [185]Press
     * [186]Work Here
     * [187]Legal
     * [188]Privacy Policy
     * [189]Contact Us

[190]Stack Exchange
Network

     * [191]Technology
     * [192]Life / Arts
     * [193]Culture / Recreation
     * [194]Science
     * [195]Other

     * [196]Stack Overflow
     * [197]Server Fault
     * [198]Super User
     * [199]Web Applications
     * [200]Ask Ubuntu
     * [201]Webmasters
     * [202]Game Development

     * [203]TeX - LaTeX
     * [204]Software Engineering
     * [205]Unix & Linux
     * [206]Ask Different (Apple)
     * [207]WordPress Development
     * [208]Geographic Information Systems
     * [209]Electrical Engineering

     * [210]Android Enthusiasts
     * [211]Information Security
     * [212]Database Administrators
     * [213]Drupal Answers
     * [214]SharePoint
     * [215]User Experience
     * [216]Mathematica

     * [217]Salesforce
     * [218]ExpressionEngine® Answers
     * [219]Stack Overflow em Português
     * [220]Blender
     * [221]Network Engineering
     * [222]Cryptography
     * [223]Code Review

     * [224]Magento
     * [225]Software Recommendations
     * [226]Signal Processing
     * [227]Emacs
     * [228]Raspberry Pi
     * [229]Stack Overflow на русском
     * [230]Programming Puzzles & Code Golf

     * [231]Stack Overflow en español
     * [232]Ethereum
     * [233]Data Science
     * [234]Arduino
     * [235]Bitcoin
     * [236]more (31)

     * [237]Photography
     * [238]Science Fiction & Fantasy
     * [239]Graphic Design
     * [240]Movies & TV
     * [241]Music: Practice & Theory
     * [242]Worldbuilding
     * [243]Seasoned Advice (cooking)

     * [244]Home Improvement
     * [245]Personal Finance & Money
     * [246]Academia
     * [247]Law
     * [248]more (15)

     * [249]English Language & Usage
     * [250]Skeptics
     * [251]Mi Yodeya (Judaism)
     * [252]Travel
     * [253]Christianity
     * [254]English Language Learners
     * [255]Japanese Language

     * [256]Arqade (gaming)
     * [257]Bicycles
     * [258]Role-playing Games
     * [259]Anime & Manga
     * [260]Puzzling
     * [261]Motor Vehicle Maintenance & Repair
     * [262]more (33)

     * [263]MathOverflow
     * [264]Mathematics
     * [265]Cross Validated (stats)
     * [266]Theoretical Computer Science
     * [267]Physics
     * [268]Chemistry
     * [269]Biology

     * [270]Computer Science
     * [271]Philosophy
     * [272]more (10)

     * [273]Meta Stack Exchange
     * [274]Stack Apps
     * [275]API
     * [276]Data

     * [277]Blog
     * [278]Facebook
     * [279]Twitter
     * [280]LinkedIn

   site design / logo © 2019 Stack Exchange Inc; user contributions licensed under [281]cc by-sa 3.0
   with [282]attribution required. rev 2019.4.1.33195

   Stack Overflow works best with JavaScript enabled

References

   Visible links
   1. https://stackoverflow.com/opensearch.xml
   2. https://stackoverflow.com/
   3. https://stackoverflow.com/users/login?ssrc=head&returnurl=https%3a%2f%2fstackoverflow.com%2fquestions%2f1066589%2fiterate-through-a-hashmap
   4. https://stackoverflow.com/users/signup?ssrc=head&returnurl=%2fusers%2fstory%2fcurrent
   5. https://stackoverflow.com/
   6. https://stackoverflow.com/help
   7. https://chat.stackoverflow.com/
   8. https://stackoverflow.com/users/signup?ssrc=site_switcher&returnurl=%2fusers%2fstory%2fcurrent
   9. https://stackoverflow.com/users/login?ssrc=site_switcher&returnurl=https%3a%2f%2fstackoverflow.com%2fquestions%2f1066589%2fiterate-through-a-hashmap
  10. https://stackexchange.com/sites
  11. https://stackoverflow.blog/
  12. https://stackoverflow.com/tour
  13. https://stackoverflow.com/help
  14. https://meta.stackoverflow.com/
  15. https://stackoverflow.com/company/about
  16. https://www.stackoverflowbusiness.com/?ref=topbar_help
  17. https://stackoverflow.com/legal/cookie-policy
  18. https://stackoverflow.com/legal/privacy-policy
  19. https://stackoverflow.com/legal/terms-of-service/public
  20. https://stackoverflow.com/
  21. https://stackoverflow.com/questions
  22. https://stackoverflow.com/tags
  23. https://stackoverflow.com/users
  24. https://stackoverflow.com/jobs?med=site-ui&ref=jobs-tab
  25. https://stackoverflow.com/teams
  26. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
  27. https://stackoverflow.com/questions/ask
  28. https://stackoverflow.com/questions/46898
  29. https://stackoverflow.com/questions/tagged/java
  30. https://stackoverflow.com/questions/tagged/loops
  31. https://stackoverflow.com/questions/tagged/hashmap
  32. https://stackoverflow.com/questions/tagged/iteration
  33. https://stackoverflow.com/q/1066589
  34. https://stackoverflow.com/posts/1066589/edit
  35. https://stackoverflow.com/posts/1066589/revisions
  36. https://stackoverflow.com/users/63550/peter-mortensen
  37. https://stackoverflow.com/users/84916/burntsugar
  38. https://stackoverflow.com/users/552792/jmort253
  39. https://stackoverflow.com/users/50776/casperone
  40. https://stackoverflow.com/questions/ask
  41. https://stackoverflow.com/users/84916/burntsugar
  42. https://stackoverflow.com/users/106104/immibis
  43. http://stackoverflow.com/a/25616206/1503859
  44. https://stackoverflow.com/users/1503859/nitin-mahesh
  45. https://stackoverflow.com/users/1049903/dean-wild
  46. https://stackoverflow.com/a/53497541/5756557
  47. https://stackoverflow.com/users/5756557/anand
  48. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap?answertab=active#tab-top
  49. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap?answertab=oldest#tab-top
  50. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap?answertab=votes#tab-top
  51. http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm
  52. http://docs.oracle.com/javase/7/docs/api/java/util/Map.html
  53. https://stackoverflow.com/a/1066603
  54. https://stackoverflow.com/posts/1066603/edit
  55. https://stackoverflow.com/posts/1066603/revisions
  56. https://stackoverflow.com/users/4298200/lonely-neuron
  57. https://stackoverflow.com/users/70393/karim79
  58. https://stackoverflow.com/users/247573/benjamin-wootton
  59. https://stackoverflow.com/users/1000194/fresh-dev
  60. https://stackoverflow.com/users/540128/vimukthi
  61. https://stackoverflow.com/users/597419/danny
  62. https://stackoverflow.com/users/48839/chad-okere
  63. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
  64. http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#keySet%28%29
  65. http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#values%28%29
  66. http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#entrySet%28%29
  67. https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603
  68. http://download.oracle.com/javase/6/docs/api/java/util/Map.Entry.html
  69. https://stackoverflow.com/a/1066607
  70. https://stackoverflow.com/posts/1066607/edit
  71. https://stackoverflow.com/posts/1066607/revisions
  72. https://stackoverflow.com/users/-1/community
  73. https://stackoverflow.com/users/86463/harto
  74. https://stackoverflow.com/users/751077/damainboss
  75. https://stackoverflow.com/users/86463/harto
  76. http://stackoverflow.com/questions/3870064/performance-considerations-for-keyset-and-entryset-of-map/6927754#6927754
  77. https://stackoverflow.com/users/32453/rogerdpack
  78. https://stackoverflow.com/users/416369/sactiw
  79. https://stackoverflow.com/users/1763602/marco-sulla
  80. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
  81. http://www.sergiy.ca/how-to-iterate-over-a-map-in-java
  82. https://en.wikipedia.org/wiki/Javadoc
  83. https://stackoverflow.com/a/8432400
  84. https://stackoverflow.com/posts/8432400/edit
  85. https://stackoverflow.com/posts/8432400/revisions
  86. https://stackoverflow.com/users/63550/peter-mortensen
  87. https://stackoverflow.com/users/1087918/arvind
  88. https://stackoverflow.com/users/1211018/p-marecki
  89. https://stackoverflow.com/users/4696214/ohbrobig
  90. https://stackoverflow.com/a/6797672
  91. https://stackoverflow.com/posts/6797672/edit
  92. https://stackoverflow.com/posts/6797672/revisions
  93. https://stackoverflow.com/users/7877391/c-an
  94. https://stackoverflow.com/users/838228/gabor
  95. https://stackoverflow.com/users/7877391/c-an
  96. https://stackoverflow.com/users/5835423/heman123
  97. http://java.sun.com/javase/6/docs/api/java/util/Map.html
  98. https://stackoverflow.com/a/1066654
  99. https://stackoverflow.com/posts/1066654/edit
 100. https://stackoverflow.com/posts/1066654/revisions
 101. https://stackoverflow.com/users/4298200/lonely-neuron
 102. https://stackoverflow.com/users/130516/codethulhu
 103. https://stackoverflow.com/a/3457226
 104. https://stackoverflow.com/posts/3457226/edit
 105. https://stackoverflow.com/users/417084/jkarretero
 106. https://stackoverflow.com/users/542395/icfantv
 107. https://stackoverflow.com/users/916046/computerengineer88
 108. https://stackoverflow.com/users/916046/computerengineer88
 109. https://stackoverflow.com/questions/20480090/does-android-support-jdk-6-or-7
 110. https://stackoverflow.com/users/1783588/jasonleonhard
 111. https://stackoverflow.com/a/1066614
 112. https://stackoverflow.com/posts/1066614/edit
 113. https://stackoverflow.com/posts/1066614/revisions
 114. https://stackoverflow.com/users/2074990/bofredo
 115. https://stackoverflow.com/users/17967/gary-kephart
 116. https://stackoverflow.com/users/416369/sactiw
 117. https://stackoverflow.com/questions/tagged/java
 118. https://stackoverflow.com/questions/tagged/loops
 119. https://stackoverflow.com/questions/tagged/hashmap
 120. https://stackoverflow.com/questions/tagged/iteration
 121. https://stackoverflow.com/questions/ask
 122. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap?lastactivity
 123. https://stackoverflow.blog/2019/03/28/the-next-ceo-of-stack-overflow/
 124. https://chat.stackoverflow.com/
 125. https://stackoverflow.com/questions/46898/how-do-i-efficiently-iterate-over-each-entry-in-a-java-map?noredirect=1
 126. https://stackoverflow.com/questions/17342950/java-util-hashset-int-iteration-order?noredirect=1
 127. https://stackoverflow.com/questions/17532409/iterating-through-updating-hashmap?noredirect=1
 128. https://stackoverflow.com/questions/23805861/finding-the-n-largest-values-in-a-hashmap?noredirect=1
 129. https://stackoverflow.com/questions/40629247/delete-entry-from-hashmap?noredirect=1
 130. https://stackoverflow.com/questions/36961210/write-linkedhashmap-to-a-text-file?noredirect=1
 131. https://stackoverflow.com/questions/33635456/java-best-way-to-call-a-method-of-each-object-in-a-collection?noredirect=1
 132. https://stackoverflow.com/questions/49165927/iterating-hashmap-with-string-key?noredirect=1
 133. https://stackoverflow.com/questions/31527366/how-to-return-the-value-of-a-hashmap?noredirect=1
 134. https://stackoverflow.com/questions/50176682/loop-through-hashmap?noredirect=1
 135. https://stackoverflow.com/questions/linked/1066589
 136. https://stackoverflow.com/questions/40471/differences-between-hashmap-and-hashtable
 137. https://stackoverflow.com/questions/46898/how-do-i-efficiently-iterate-over-each-entry-in-a-java-map
 138. https://stackoverflow.com/questions/141088/what-is-the-best-way-to-iterate-over-a-dictionary
 139. https://stackoverflow.com/questions/223918/iterating-through-a-collection-avoiding-concurrentmodificationexception-when-re
 140. https://stackoverflow.com/questions/285177/how-do-i-call-one-constructor-from-another-in-java
 141. https://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea
 142. https://stackoverflow.com/questions/1207406/how-to-remove-items-from-a-list-while-iterating
 143. https://stackoverflow.com/questions/3010840/loop-through-an-array-in-javascript
 144. https://stackoverflow.com/questions/6802483/how-to-directly-initialize-a-hashmap-in-a-literal-way
 145. https://stackoverflow.com/questions/8312459/iterate-through-object-properties
 146. https://stackexchange.com/questions?tab=hot
 147. https://rpg.stackexchange.com/questions/144271/can-i-cast-thunderwave-and-be-at-the-center-of-its-bottom-face-but-not-be-affec
 148. https://unix.stackexchange.com/questions/509765/what-difference-does-it-make-matching-a-word-with-without-a-trailing-whitespace
 149. https://judaism.stackexchange.com/questions/101480/why-doesnt-shulchan-aruch-include-the-laws-of-destroying-fruit-trees
 150. https://rpg.stackexchange.com/questions/144235/can-you-teleport-closer-to-a-creature-you-are-frightened-of
 151. https://codereview.stackexchange.com/questions/216653/read-write-a-pipe-delimited-file-line-by-line-with-some-simple-text-manipulation
 152. https://codereview.stackexchange.com/questions/216648/find-the-majority-element-which-appears-more-than-half-the-time
 153. https://christianity.stackexchange.com/questions/69347/how-did-scripture-get-the-name-bible
 154. https://scifi.stackexchange.com/questions/208269/man-transported-from-alternate-world-into-ours-by-a-neutrino-detector
 155. https://math.stackexchange.com/questions/3171071/another-proof-that-dividing-by-0-does-not-exist-is-it-right
 156. https://writing.stackexchange.com/questions/44271/how-to-compactly-explain-secondary-and-tertiary-characters-without-resorting-to
 157. https://superuser.com/questions/1420001/is-it-possible-to-create-a-qr-code-using-text
 158. https://travel.stackexchange.com/questions/134942/what-does-this-strange-code-stamp-on-my-passport-mean
 159. https://superuser.com/questions/1420058/how-does-a-dynamic-qr-code-work
 160. https://worldbuilding.stackexchange.com/questions/142973/a-hang-glider-sudden-unexpected-lift-to-25-000-feet-altitude-what-could-do-thi
 161. https://academia.stackexchange.com/questions/127350/is-it-reasonable-to-ask-other-researchers-to-send-me-their-previous-grant-applic
 162. https://worldbuilding.stackexchange.com/questions/142989/could-a-dragon-use-hot-air-to-help-it-take-off
 163. https://stackoverflow.com/questions/55463310/identify-and-count-spells-distinctive-events-within-each-group
 164. https://physics.stackexchange.com/questions/469917/how-can-i-prove-that-a-state-of-equilibrium-is-unstable
 165. https://stats.stackexchange.com/questions/400316/is-a-distribution-that-is-normal-but-highly-skewed-considered-gaussian
 166. https://retrocomputing.stackexchange.com/questions/9509/early-programmable-calculators-with-rs-232
 167. https://dba.stackexchange.com/questions/233689/logical-reads-on-global-temp-table-but-not-on-session-level-temp-table
 168. https://cs.stackexchange.com/questions/106337/find-a-path-from-s-to-t-using-as-few-red-nodes-as-possible
 169. https://law.stackexchange.com/questions/38677/is-the-21st-centurys-idea-of-freedom-of-speech-based-on-precedent
 170. https://chemistry.stackexchange.com/questions/111982/is-it-common-practice-in-fourier-transform-spectroscopy-to-multiply-the-measure
 171. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 172. https://stackoverflow.com/
 173. https://stackoverflow.com/questions
 174. https://stackoverflow.com/jobs
 175. https://stackoverflow.com/jobs/directory/developer-jobs
 176. https://stackoverflow.com/jobs/salary
 177. https://stackoverflow.com/help
 178. https://www.stackoverflowbusiness.com/
 179. https://stackoverflow.com/teams
 180. https://www.stackoverflowbusiness.com/talent
 181. https://www.stackoverflowbusiness.com/advertising
 182. https://stackoverflow.com/enterprise
 183. https://stackoverflow.com/company/about
 184. https://stackoverflow.com/company/about
 185. https://stackoverflow.com/company/press
 186. https://stackoverflow.com/company/work-here
 187. https://stackoverflow.com/legal
 188. https://stackoverflow.com/legal/privacy-policy
 189. https://stackoverflow.com/company/contact
 190. https://stackexchange.com/
 191. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 192. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 193. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 194. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 195. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 196. https://stackoverflow.com/
 197. https://serverfault.com/
 198. https://superuser.com/
 199. https://webapps.stackexchange.com/
 200. https://askubuntu.com/
 201. https://webmasters.stackexchange.com/
 202. https://gamedev.stackexchange.com/
 203. https://tex.stackexchange.com/
 204. https://softwareengineering.stackexchange.com/
 205. https://unix.stackexchange.com/
 206. https://apple.stackexchange.com/
 207. https://wordpress.stackexchange.com/
 208. https://gis.stackexchange.com/
 209. https://electronics.stackexchange.com/
 210. https://android.stackexchange.com/
 211. https://security.stackexchange.com/
 212. https://dba.stackexchange.com/
 213. https://drupal.stackexchange.com/
 214. https://sharepoint.stackexchange.com/
 215. https://ux.stackexchange.com/
 216. https://mathematica.stackexchange.com/
 217. https://salesforce.stackexchange.com/
 218. https://expressionengine.stackexchange.com/
 219. https://pt.stackoverflow.com/
 220. https://blender.stackexchange.com/
 221. https://networkengineering.stackexchange.com/
 222. https://crypto.stackexchange.com/
 223. https://codereview.stackexchange.com/
 224. https://magento.stackexchange.com/
 225. https://softwarerecs.stackexchange.com/
 226. https://dsp.stackexchange.com/
 227. https://emacs.stackexchange.com/
 228. https://raspberrypi.stackexchange.com/
 229. https://ru.stackoverflow.com/
 230. https://codegolf.stackexchange.com/
 231. https://es.stackoverflow.com/
 232. https://ethereum.stackexchange.com/
 233. https://datascience.stackexchange.com/
 234. https://arduino.stackexchange.com/
 235. https://bitcoin.stackexchange.com/
 236. https://stackexchange.com/sites#technology
 237. https://photo.stackexchange.com/
 238. https://scifi.stackexchange.com/
 239. https://graphicdesign.stackexchange.com/
 240. https://movies.stackexchange.com/
 241. https://music.stackexchange.com/
 242. https://worldbuilding.stackexchange.com/
 243. https://cooking.stackexchange.com/
 244. https://diy.stackexchange.com/
 245. https://money.stackexchange.com/
 246. https://academia.stackexchange.com/
 247. https://law.stackexchange.com/
 248. https://stackexchange.com/sites#lifearts
 249. https://english.stackexchange.com/
 250. https://skeptics.stackexchange.com/
 251. https://judaism.stackexchange.com/
 252. https://travel.stackexchange.com/
 253. https://christianity.stackexchange.com/
 254. https://ell.stackexchange.com/
 255. https://japanese.stackexchange.com/
 256. https://gaming.stackexchange.com/
 257. https://bicycles.stackexchange.com/
 258. https://rpg.stackexchange.com/
 259. https://anime.stackexchange.com/
 260. https://puzzling.stackexchange.com/
 261. https://mechanics.stackexchange.com/
 262. https://stackexchange.com/sites#culturerecreation
 263. https://mathoverflow.net/
 264. https://math.stackexchange.com/
 265. https://stats.stackexchange.com/
 266. https://cstheory.stackexchange.com/
 267. https://physics.stackexchange.com/
 268. https://chemistry.stackexchange.com/
 269. https://biology.stackexchange.com/
 270. https://cs.stackexchange.com/
 271. https://philosophy.stackexchange.com/
 272. https://stackexchange.com/sites#science
 273. https://meta.stackexchange.com/
 274. https://stackapps.com/
 275. https://api.stackexchange.com/
 276. https://data.stackexchange.com/
 277. https://stackoverflow.blog/?blb=1
 278. https://www.facebook.com/officialstackoverflow/
 279. https://twitter.com/stackoverflow
 280. https://linkedin.com/company/stack-overflow
 281. https://creativecommons.org/licenses/by-sa/3.0/
 282. https://stackoverflow.blog/2009/06/25/attribution-required/

   Hidden links:
 283. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 284. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 285. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 286. https://stackexchange.com/users/?tab=inbox
 287. https://stackexchange.com/users/?tab=reputation
 288. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 289. https://stackexchange.com/
 290. https://stackoverflow.com/
 291. https://meta.stackoverflow.com/
 292. https://stackoverflow.com/users/63550/peter-mortensen
 293. https://stackoverflow.com/users/84916/burntsugar
 294. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 295. https://stackoverflow.com/users/4298200/lonely-neuron
 296. https://stackoverflow.com/users/70393/karim79
 297. https://stackoverflow.com/users/-1/community
 298. https://stackoverflow.com/users/86463/harto
 299. https://stackoverflow.com/users/63550/peter-mortensen
 300. https://stackoverflow.com/users/1087918/arvind
 301. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 302. https://stackoverflow.com/users/7877391/c-an
 303. https://stackoverflow.com/users/838228/gabor
 304. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 305. https://stackoverflow.com/users/4298200/lonely-neuron
 306. https://stackoverflow.com/users/130516/codethulhu
 307. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 308. https://stackoverflow.com/users/417084/jkarretero
 309. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 310. https://stackoverflow.com/users/2074990/bofredo
 311. https://stackoverflow.com/users/17967/gary-kephart
 312. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
 313. https://stackoverflow.blog/2019/03/28/the-next-ceo-of-stack-overflow/
 314. https://stackoverflow.com/q/46898
 315. https://stackoverflow.com/q/17342950
 316. https://stackoverflow.com/q/17532409
 317. https://stackoverflow.com/q/23805861
 318. https://stackoverflow.com/q/40629247
 319. https://stackoverflow.com/q/36961210
 320. https://stackoverflow.com/q/33635456
 321. https://stackoverflow.com/q/49165927
 322. https://stackoverflow.com/q/31527366
 323. https://stackoverflow.com/q/50176682
 324. https://stackoverflow.com/q/40471
 325. https://stackoverflow.com/q/46898
 326. https://stackoverflow.com/q/141088
 327. https://stackoverflow.com/q/223918
 328. https://stackoverflow.com/q/285177
 329. https://stackoverflow.com/q/500504
 330. https://stackoverflow.com/q/1207406
 331. https://stackoverflow.com/q/3010840
 332. https://stackoverflow.com/q/6802483
 333. https://stackoverflow.com/q/8312459
 334. https://stackoverflow.com/
 335. https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap


---

