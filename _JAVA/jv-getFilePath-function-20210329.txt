	/**
	 * Returns full path of containing directory of *.class or
	 * *.jar file, so the app can access resources from within
	 * containing directory.
	 * (resources = flat txt file, sqlite file, ...)
	 *
	 * The String of full path of filename is:
	 * jarFilePath + File.separator + fileName;
	 * ... or
	 * classFilePath + File.separator + fileName;
	 * [className] = Litteral Class name
	 *
	*/
	private String getFilePath(String fileName) throws Exception {
		
		String fileName = "myFile.txt";
		File inputFile = new File(className.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());
		
		// database file outside *.jar in same dir as *.class, or *.jar file
		String jarFilePath = inputFile.getParent();
		String classFilePath = inputFile.toString();
		
		String type = [className].class.getResource("[className].class").toString();
		String mypath = null;
		if (type.startsWith("file")) {
			mypath = classFilePath;
		} else if (type.startsWith("jar")) {
			mypath = jarFilePath;
		} else {
			System.out.println("No suitable file found!");
			System.exit(0);
		}
		return mypath
	}

