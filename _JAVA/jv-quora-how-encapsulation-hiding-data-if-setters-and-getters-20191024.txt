filename: jv_quora_how-encapsulation-hiding-data-if-setters-and-getters_20191024.txt
https://www.quora.com/How-does-encapsulation-act-as-hiding-the-data-as-we-are-providing-setters-and-getters

How does encapsulation act as hiding the data, as we are providing setters and getters?

   If you choose to add getters and setters, you have chosen to not bother with encapsulation. Why that
   would be the case is something that presumably you know?

   Generally, I do not start out with getters or setters.

   I design objects to have a constructor, and then add behaviours as methods to do the right thing for
   my application. Sometimes, this needs some getters, but often not. Very rarely indeed does it need
   raw setters.

   Here’s a simple example of this kind of approach:
   
class UserIdentity {
    private String name ;
    private String password ;
    
    public UserIdentity( String name, String password ) {
        this.name = name ;
        this.password = password ;
    }
 
    public boolean isAuthenticated( IdentityRepository identities ) {
    return identities.containsUser( name, password );
    }
}


The private data is never exposed via getter/setter. It does not need to be.

The key to this approach is to think about what behaviours - as in methods - do you need for your system.
Stop thinking of objects as data - they aren’t. They are little virtual machines that host application-specific
behaviour.

They might hold private data to help those behaviours - but that is their little secret.


---
