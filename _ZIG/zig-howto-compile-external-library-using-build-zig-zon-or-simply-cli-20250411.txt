filename: zig-howto-compile-external-library-using-build-zig-zon-or-simply-cli-20250411.txt
https://ziggit.dev/t/how-to-compile-an-external-library-using-build-zig-zon-or-simply-cli/2910/6

How to compile an external library using build.zig, zon, or simply cli?
February 10, 2024

   I was following the steps in this thread, but they don't quite seem to work (exe.root_module doesn't
   seem to exist in the version of Zig I am using).

   Here is how I rewrote this example for my Zig version (0.12.0-dev.1830+779b8e259)
   on macOS.

~/personal/zig_experiments/testapp
$> cat build.zig.zon

.{
	.name = "testapp",
	.version = "0.1.0",
	.dependencies = .{
		.testlib = .{
			.path = "../testlib", // path instead or url for local packages/libraries
		},
	},
	.paths = .{"src"},
}

$> cat build.zig

const std = @import("std");

pub fn build(b: *std.Build) void {
	const target = b.standardTargetOptions(.{});
	const optimize = b.standardOptimizeOption(.{});

	const exe = b.addExecutable(.{
		.name = "testapp",
		.root_source_file = .{ .path = "src/main.zig" },
		.target = target,
		.optimize = optimize,
	});

	const pkg = b.dependency("testlib", .{ });
	// addImport seems to be a breaking changed added in newer versions
	exe.addModule("testlib", pkg.module("testlib"));

	b.installArtifact(exe);
}

$> cat src/main.zig

const std = @import("std");
const testlib = @import("testlib");

pub fn main() !void {
	std.debug.print("output from testlib is {}\n", .{testlib.add(1,3)});
}

   And in the testlib folder:

~/personal/zig_experiments/testlib
$> cat build.zig.zon

.{
	.name = "testlib",
	.version = "0.1.0",

	.paths = .{
		"build.zig",
		"build.zig.zon",
		"src",
		//"LICENSE",
		//"README.md",
	},
}

$> cat build.zig

const std = @import("std");

pub fn build(b: *std.Build) void {
	_ = b.addModule("testlib", .{ .source_file = .{ .path = "src/lib.zig" }});

$> cat src/lib.zig

const std = @import("std");
const testing = std.testing;

pub export fn add(a: i32, b: i32) i32 {
	return a + b;
}

test "basic add functionality" {
	try testing.expect(add(3, 7) == 10);
}


---

