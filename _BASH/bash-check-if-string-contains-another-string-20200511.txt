filename: bash_check-if-string-contains-another-string_20200511.txt
https://tecrobust.com/check-if-a-string-contains-another-string-in-bash-script4-easy-ways/

Check If a String Contains Another String in Bash Script!!{4 Easy Ways}

Determine If a String Contains a Substring!!

   heck If a String Contains Another String in Bash: One of the most basic operations when working with
   strings in Bash is to check whether or not a string contains another string. Here, in this tutorial,
   let's see four different ways to Check If String Contains Another String in Bash Scripting.

Using Wildcard Symbol:
   It is a simple and effortless way of checking if a string contains another string with the use of
   wildcard symbol * (asterisk) in a bash script. The symbol is used to represent zero, one or more
   strings.

Example 1:
   Using Wildcard Symbol - Example 1

   str="Ubuntu Mint Fedora"

   if [[ $str = *Mint* ]]; then
   echo "Yes"
   fi
     * str - String is declared.
     * In this example, we are using the if statement and (=) operator to check if a string contains
       another string. Usage of (==) operator instead of (=) operator results in the same output.
     * We are checking whether the string 'Mint' is present in '$str'. If it is 'true', then it will
       echo the output.

   Execute the script in Ubuntu Terminal in the below format:
   $bash [filename]

   Run the script in the Terminal:
$ bash ex1.sh

Output:
   The script will echo the below output:
   Output

   Yes

Example 2:
   If you want to check multi-word string that contains spaces, you have to use " " (double quotes)
   around the string.
   Using Wildcard Symbol - Example 2

   str="Linux is an operating system"
   Check this too  Concatenation of Two Strings in Bash Script!!

   if [[ $str = *"is an operating system"* ]]; then
   echo "Yes"
   fi

   Run the script:
$ bash ex2.sh

Output:

   Output

   Yes

Example 3:
   Using Wildcard Symbol - Example 3

   STR1='Bash Strings'
   STR2='Bash'

   if [[ $STR1 == *$STR2* ]]; then
   echo "It's there."
   fi

   Run the script:
$ bash ex3.sh

Output:

   Output

   It's there.

Using Case Statement:
   We can also use the case statement to check if a string contains another string.
   Using Case Statement

   str='Ubuntu Mint Fedora'
   [INS: :INS]

   case $str in

   *Fedora*)
   echo "It's there."
   ;;
   esac

   Run the script in the Terminal:
$ bash casestr.sh

Output:

   Output

   It's there.

Using Regex Operator:
   To find whether a string is present within another string is to use the regex operator (=~). The
   right string will be considered as an usual expression, when this regex operator is used.

Example 1:

   Using Regex Operator - Example 1

   str='Ubuntu Mint Fedora'

   if [[ $str =~ .*Ubuntu.* ]]; then
   echo "It's there."
   fi

   Run the script in the Terminal:
$ bash regex1.sh

Output:

   Output

   It's there.

Example 2:
   Using Regex Operator - Example 2

   str='Ubuntu Mint Fedora'

   if [[ $str =~ .*Linux.* ]]; then
   echo "It's there."
   else
   echo "Sorry. It's not there."
   fi

   Run the script in the Terminal:
$ bash regex2.sh

Output:

   Output

   Sorry. It's not there.

Using Grep Command:
   The grep command is used to search text or given file for lines containing a match to the given
   strings or words.
   Using Grep Command

   str="Linux is an operating system"

   if grep -q "system" <<< $str; then
   echo "It's there"
   fi

   Run the script in the Terminal:
$ bash grep.sh

Output:

   Output

   It's there
   Check this too  How to Include One Bash Script in another Bash Script?
     * In this example, we are passing the string $str as an input ot grep and checking if the string
       "system" is found in the input string. After that, the command will return true or false as
       relevant and echo the output.

Closure:
   In the above tutorial, we have explained how to Check If a String Contains another String by using
   four different ways. In addition, we guided you to execute it in Terminal and get output in easy
   steps. If you have any queries/feedback, feel free to leave a comment. Thanks for visiting [118]Tec
   Robust!! Keep Learning!!


---
