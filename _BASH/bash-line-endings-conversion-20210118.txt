filename: bash_line-endings-conversion_20210118.txt
https://stackoverflow.com/questions/2613800/how-to-convert-dos-windows-newline-crlf-to-unix-newline-lf-in-a-bash-script

How to convert DOS/Windows newline (CRLF) to Unix newline (LF) and back in a Bash script?

option 1:
   You can use tr to convert from DOS to Unix; however, you can only do this safely if CR appears in
   your file only as the first byte of a CRLF byte pair. This is usually the case. You then use:
$> tr -d '\015' <DOS-file >UNIX-file

   Note that the name DOS-file is different from the name UNIX-file; if you try to use the same name
   twice, you will end up with no data in the file.

   You can't do it the other way round (with standard 'tr').

option 2:
   If you know how to enter carriage return into a script (control-V, control-M to enter control-M),
   then:
$> sed 's/^M$//'     # DOS to Unix
$> sed 's/$/^M/'     # Unix to DOS

option 3:
   where the '^M' is the control-M character. You can also use the bash ANSI-C Quoting mechanism to
   specify the carriage return:
$> sed $'s/\r$//'     # DOS to Unix
$> sed $'s/$/\r/'     # Unix to DOS

   However, if you're going to have to do this very often (more than once, roughly speaking), it is far
   more sensible to install the conversion programs (e.g. dos2unix and unix2dos, or perhaps
   dtou and utod) and use them.

option 4:
$> tr -d "\r" < file


option 5:
# IN UNIX ENVIRONMENT: convert DOS newlines (CR/LF) to Unix format.
$> sed 's/.$//'               # assumes that all lines end with CR/LF
$> sed 's/^M$//'              # in bash/tcsh, press Ctrl-V then Ctrl-M
$> sed 's/\x0D$//'            # works on ssed, gsed 3.02.80 or higher

# IN UNIX ENVIRONMENT: convert Unix newlines (LF) to DOS format.
$> sed "s/$/`echo -e \\\r`/"            # command line under ksh
$> sed 's/$'"/`echo \\\r`/"             # command line under bash
$> sed "s/$/`echo \\\r`/"               # command line under zsh
$> sed 's/$/\r/'                        # gsed 3.02.80 or higher

   Use sed -i for in-place conversion e.g. sed -i 's/..../' file.


---
