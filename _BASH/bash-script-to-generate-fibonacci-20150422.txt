filename: bash-script-to-generate-fibonacci_20150422.txt
http://www.bashguru.com/2010/12/shell-script-to-generate-fibonacci.html

Shell Script to Generate Fibonacci Series

  By definition in mathematics, the Fibonacci Numbers are the numbers
in the below sequence:
0,1,1,2,3,5,8,13,21,34,55,89,144, ......
  By definition, the first two Fibonacci numbers are 0 and 1, and each
subsequent number is the sum of the previous two. Some sources omit
the initial 0, instead beginning the sequence with two 1s.
  In mathematical terms, the sequence Fn of Fibonacci numbers is defi-
ned by the recurrence relation
    Fn = Fn-1 + Fn-2,
with seed values
   F0 = 0 and F1 = 1.

Iterative Method:

   #!/bin/bash#!/bin/bash
   # SCRIPT: fibo_iterative.sh
   # USAGE: fibo_iterative.sh [Number]
   # PURPOSE: Generate Fibonacci sequence.
   #      \\\\ ////
   #      \\ - - //
   #         @ @
   # ---oOOo-( )-oOOo---
   #
   #####################################################################
   # Script Starts Here #
   #####################################################################
   if [ $# -eq 1 ]
   then
   Num=$1
   else
   echo -n "Enter a Number :"
   read Num
   fi
   f1=0
   f2=1
   echo "The Fibonacci sequence for the number $Num is : "
   for (( i=0;i<=Num;i++ ))
   do
   echo -n "$f1 "
   fn=$((f1+f2))
   f1=$f2
   f2=$fn
   done
   echo
   OUTPUT:
   # sh fibo_iterative.sh 18
   The Fibonacci sequence for the number 18 is :
   0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584
   # sh fibo_iterative.sh
   Enter a Number :20
   The Fibonacci sequence for the number 20 is :
   0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765

Recursive Method:

   #!/bin/bash
   # SCRIPT: fibo_recursive.sh
   # USAGE: fibo_recursive.sh [Number]
   # PURPOSE: Generate Fibonacci sequence.
   #      \\\\ ////
   #      \\ - - //
   #         @ @
   # ---oOOo-( )-oOOo---
   #
   #####################################################################
   # Arguments Checking #
   #####################################################################
   if [ $# -eq 1 ]
   then
   Num=$1
   else
   echo -n "Enter a Number : "
   read Num
   fi
   #####################################################################
   # Define Functions Here #
   #####################################################################
   Fibonacci()
   {
   case $1 in
   0|1) printf "$1 " ;;
   *) echo -n "$(( $(Fibonacci $(($1-2)))+$(Fibonacci $(($1-1))) )) ";;
   esac
   #$(( )) construct is used instead of expr command for doing addition.
   #$( ) constrict is used instead of back ticks.
   }
   #####################################################################
   # Main Script Starts Here #
   #####################################################################
   echo "The Fibonacci sequence for the number $Num is : "
   for (( i=0; i<=$Num; i++ ))
   do
   Fibonacci $i #Calling function Fibonacci
   done
   echo
   OUTPUT:
   # sh fibo_recursive.sh
   Enter a Number : 11
   The Fibonacci sequence for the number 11 is :
   0 1 1 2 3 5 8 13 21 34 55 89
   # sh fibo_recursive.sh 13
   The Fibonacci sequence for the number 13 is :
   0 1 1 2 3 5 8 13 21 34 55 89 144 233
   Be aware that recursion is resource-intensive and executes slowly,
   and is therefore generally not appropriate to use in a script.
   [root@localhost shell]# time ./fibo_iterative.sh 15
   The Fibonacci sequence for the number 15 is :
   0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610
   real 0m0.008s
   user 0m0.008s
   sys 0m0.000s
   [root@localhost shell]# time ./fibo_recursive.sh 15
   The Fibonacci sequence for the number 15 is :
   0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610
   real 0m7.875s
   user 0m0.908s
   sys 0m5.188s
   Too many levels of recursion may crash a script with a segfault.
   [13]Email This[14]BlogThis![15]Share to Twitter[16]Share to Facebook
   [17]Beginners Scripts
   [18]Newer Post [19]Older Post [20]Home

2 comments:

    1. Hi,
       Thanks for sharing. Just to share my own version too:
       fibo() { local a=0; b="$1"; inc="$2"; while ((b < $inc)); do tmp=$((a+b)); a=$b; b="$tmp"; printf
       '%s ' "$tmp"; done; }; fibo 34 2000
       Regards,

    2. Enter a Number :4
       The Fibonacci sequence for the number 4 is :
       fib.sh: 27: fib.sh: Syntax error: Bad for loop variable
       Copy/paste from here, no errors.
