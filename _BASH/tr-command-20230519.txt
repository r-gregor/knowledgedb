filename: tr-command_20230519.txt
https://tecadmin.net/tr-command-in-linux/

TR Command in Linux: A Guide with Practical Examples
May 18, 2023

   In the realm of Linux, the 'tr' command is a vital tool that users can employ for text processing.
   TR, short for translate, is utilized to translate or delete characters from standard input, writing
   to standard output. It may seem simple on the surface, but the 'tr' command offers a great depth of
   functionality. This article aims to guide you through the nuances of the 'tr' command, providing
   practical examples along the way.

Basics of TR Command
   The 'tr' command is generally used in the following structure:

   tr [options] "set1" "set2"

   Here, set1 and set2 are character sets. The 'tr' command replaces the characters in set1 with the
   corresponding characters in set2. Note that if set2 is shorter than set1, the last character of set2
   is replicated to match the length of set1.

Command-line Options
   Here is a list of some common command-line options for the 'tr' command in Linux:
     * -d or --delete: This option removes all occurrences of the specified characters in the SET1. It
       does not require SET2.
     * -s or --squeeze-repeats: This option replaces each sequence of a repeated character that is
       listed in the SET1 with a single occurrence of that character.
     * -c or --complement: This option takes the complement of SET1. In other words, it considers all
       characters not listed in SET1.
     * -C or --complement: It is the same as -c but treats a character as a byte value.
     * -t or --truncate-set1: This option first truncates SET1 to the length of SET2, and then performs
       the translation.

   Please note that you can use these options together. For instance, you might want to delete and
   squeeze certain characters at the same time. You can do this by running 'tr -ds'.

Practical Examples
   Let's delve into the practical uses of the 'tr' command.
    1. Changing Case
       You can use the 'tr' command to convert text from upper case to lower case, or vice versa. Here's
       how you do it:
$> echo 'Hello World' | tr 'a-z' 'A-Z'

       Output:
HELLO WORLD

    2. Deleting Characters
       The -d option is used with the 'tr' command to delete characters from the input. For example:
$> echo "Hello 123 World 456" | tr -d '0-9'

       Output:
Hello  World

    3. Squeezing Repeated Characters
       The -s option can be used to squeeze a sequence of repeating characters into a single character.
       Here's an example:
$> echo "Hello     World" | tr -s ' '

       Output:
Hello World

    4. Complementing SET1
       The -c or -C option is used to take the complement of set1. All characters which are not in set1
       are translated. This is an example of it:
$> echo 'Hello 123 World 456' | tr -d -c '0-9 \n'

       Output:
 123  456

Conclusion
   The 'tr' command is an incredibly powerful tool in your Linux arsenal. It offers an enormous range of
   text processing capabilities, from basic text translation to more complex functions such as deletion
   and squeezing of character sequences. Mastering this command opens up a world of possibilities for
   managing and manipulating text data in Linux. Remember, the best way to truly understand the 'tr'
   command is to experiment and practice with it. So, go ahead and test out these examples on your own
   system. You'll soon find that the tr command becomes one of your go-to tools in the Linux
   environment.


---

