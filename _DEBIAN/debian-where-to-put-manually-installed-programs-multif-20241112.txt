filename: debian_where_to_put_manually_installed_programs-multif_20241112.txt
https://www.reddit.com/r/linuxquestions/comments/11zenhm/where_to_put_manuallyinstalled_programs_eg/

Where to put manually-installed programs? (e.g. AppImages or compiled)

   Recently installed Genymotion and it doesn't have a default install location (it installs from a .bin
   file). You choose a location and it installs to a "genymotion" folder.

   So I was wondering, what are the conventions for this? I'm new to Linux so I would like to start with
   good habits. Same goes for AppImages and Flatpaks.

***
For a system-wide installation (for all users) that's not through your package manager, you'd want to put it
in /usr/local/bin, though some prefer something in /opt/something-or-other.

For a user-specific installation, you'd want to put it in ~/.local/bin or ~/.local/appdata/bin. I prefer the
former. If it has a command-line interface, you'd want to make sure that directory is in your path (google
"add to path").

	...
	Apologies for the ignorance here, but how do I tell the difference between a system-wide installation
	and a user-specific one?
	
	The example I mentioned, Genymotion, installs to a user by default, but it gives the option to install
	system-wide. I'm guessing that the package manager always installs system-wide, and that this is a
	program-by-program case thing?
	
	Also, Genymotion installs everything to a single folder. But the bin folders are supposed to be for only
	the binaries of a program, right? So in my case, it would be more appropriate to install it to ~/.local?
	
	Also also, where would AppImages go, here? Since they're contained, they could be treated as system-wide,
	right?

***
I'd install them to subdirectories in /opt and symlink the binaries to ~/.local/bin.

	...
	Thank you for the suggestion, considering Genymotion installs everything to a single folder (And I'm
	assuming that the bin folders are for binaries only), symlinking the binaries definitely seems like a
	cleaner way to do it.

	One thing I found through a quick search though is that /opt seems to cause permission issues sometimes?

***
I personally put all binaries and scripts into ~/.bin (windows and linux). AppImages are handled by AppImage
Lauchner. Flatpak handles itself

***
I usually put my own scripts in ~/bin, my own scripts that I need for my setup to work in ~/.local/sbin, and I
clone git repos to ~/.local/src if compiled, ~/.local/lib if not compiled, and ~/.local/opt if I just
downloaded the binaries. I symlink all the binaries to ~/.local/bin so I get automatic updates by just cloning
and building again

***
I put appimages and apps installed from tarballs in /opt, which is "reserved for the installation of add-on
application software packages."
(quoted from here [https://www.pathname.com/fhs/pub/fhs-2.3.html#OPTADDONAPPLICATIONSOFTWAREPACKAGES]).

Flatpaks are installed by default to ~/.var/app, so no need to worry about it, unless you want to symlink it
to a different drive.

***
https://www.pathname.com/fhs/pub/fhs-2.3.html /opt is for additional packages not installed by your system's
package manager but it's best imo to install such packages to your home directory as your regular user if you
don't have multiple users. Anything installed outside the package manager requires manual maintenance and
carries a higher risk level. Keeping these in /home segregates them and adds a level of protection against bad
things affecting your system.

---
https://askubuntu.com/questions/1148/when-installing-user-applications-where-do-best-practices-suggest-they-be-loc

When installing user applications, where do "best practices" suggest they be located?

Occasionally I install applications manually, rather than using apt or another package manager.

What location (/usr/, /usr/local/, /opt/, /home/, etc.) is suggested by "best practices" for the
installation of user applications?

***
   That depends, really. If the application has a makefile, or for example for Python apps if the
   application uses distutils (e.g., has a setup.py file), or a similar build/install system, you
   should install it into /usr/local/. This is often the default behavior.

   From what I understand, /usr/local/ has a hierarchy that is similar to /usr/. However, directories
   like /usr/bin/ and /usr/lib/ are usually reserved for packages installed via apt. So a program
   expecting to get "installed" into /usr/ should work fine in /usr/local/.

   If you just need to extract a tarball and run directly (e.g. Firefox) then put it into /opt/. A
   program that just needs one directory and will get all files/libraries relative to that directory can
   get one directory for itself in /opt/.

   For reference, see the FHS.

***
       Make a symlink from /usr/bin or add it to PATH in ~/.bashrc

***
       You can install things inside ~ (your home directory), but that will make an application
       accessible only to one user. Other users on your system will have to install and maintain their
       own installations of that software. As for best practices on installing applications install your
       home directory, I believe there aren't as strong guidelines because you won't interfere with
       system packages.

***
   It's good to remember that /usr does not stand for user but rather unix system resources.
   ========================================================================================

   As such, I tend to figure that any distribution has the rights to stomp all over over contents of
   /usr, and that my specific additions to the system go in /usr/local, which I preserve before doing an
   upgrade.

   Meanwhile, applications and other things go in /opt.

   Some people feel comfortable putting stuff in /home, though I rarely follow that convention.

   All that said, I let the distribution package manager do things its way first, and then do the above
   when hand rolling stuff.

***
       It's worth remembering that 'unix system resources' is a renaming performed AFTER '/home' was
       added. In the old, old, old days (Unix Version 6 et.al.) you would see directories like
       /usr/jimmy, /usr/siobhan, /usr/ahmed, etc. because the "user" directories were stored in /usr.

***
       OK I'll bite: what does opt stand for?

       It's 'optional' - it was originally for software that wasn't part of a default
       installation.

       /usr is User. That was because linux users were developers. First as it started to devide into
       devs and users the /home dir was introduced. And then someone had the idea to say it means Unix
       System Resources, which doesn't really makes sense, because we have the Unix system Resources in
       /dev

       Correct, /usr is a backronym. The purpose has changed since the days Unix was running on a PDP-7
       back in 1969.

*** (5+)
   Install unstable programs like firefox devel in /home/user/opt/ makes it a lot easier to remove, and
   no confusion for other users as to what version they should use... So if it is not a program for
   global use, install it in a subfolder in your home directory (/home/user/).

   Never install programs in /usr/, it is likely to cause chaos, things installed in /usr/ is meant to
   be for distribution packages only. /usr/local/ is for packages locally compiled. And the structure
   works in exactly the same way! files in /usr/local/ will be prioritized over files in /usr/.

   /opt/ should be used for installation of pre-compiled (binary) packages (Thunderbird, Eclipse,
   Netbeans, IBM NetSphere, etc) and the like. But if they are only for a single user they should be put
   in your home directory.

   If you want to be able to run a program installed in a "weird" location (like /home/user/opt/firefox/)
   without typing the whole path you need to add it to your $PATH variable, you can do this be adding a line
   like this in your /home/user/.profile
export PATH=/home/user/opt/firefox:$PATH

   The folder name should be the one where the executable file you need to run is located.

***
     The original idea behind '/usr/local' was to have a separate ('local') '/usr' directory on every
     machine besides '/usr', which might be just mounted read-only from somewhere else. It copies the
     structure of '/usr'. These days, '/usr/local' is widely regarded as a good place in which to keep
     self-compiled or third-party programs. The /usr/local hierarchy is for use by the system
     administrator when installing software locally. It needs to be safe from being overwritten when
     the system software is updated. It may be used for programs and data that are shareable amongst a
     group of hosts, but not found in /usr. Locally installed software must be placed within /usr/local
     rather than /usr unless it is being installed to replace or upgrade software in /usr.

***
       Seems to contradict this /usr/local stuff with the info on the opt page:
       tldp.org/LDP/Linux-Filesystem-Hierarchy/html/opt.html " "This directory is reserved for all
       the software and add-on packages that are not part of the default installation. For example,
       StarOffice, Kylix, Netscape Communicator and WordPerfect packages are normally found here. To
       comply with the FSSTND, all third party applications should be installed in this directory." ...
       " (similar to the way in which Windows will install new software to its own directory tree
       C:\Windows\Progam Files\"Program Name")"

***
   I usually have a folder named "Programs" in my home where I install those programs, strange enough
   (or not) they are all java stuff right now.

   It has one great advantage for me, when I reinstall or change computers they get moved with the rest
   of my home. It has a clear disadvantage, those apps are only available to my user.


---

