filename: pandas-build-on-cygwin_20170628.txt
https://stackoverflow.com/questions/34341112/pandas-build-on-cygwin

pandas build on Cygwin

   I tried building pandas on Cygwin and run into an error building pandas.msgpack._packer:

   building 'pandas.msgpack._packer' extension

   The error is:

   gcc: error: spawn: No such file or directory

   And here's the build command:

   gcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe
   -Wimplicit-function-declaration
   -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1
   -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/pyth
   on3-3.4.3-1 -D__LITTLE_ENDIAN__=1 -Ipandas/src/msgpack -Ipandas/src/klib -Ipandas/src
   -I/tmp/pip-build-mdmyz2dz/pandas/.eggs/numpy-1.10.2-py3.4-cygwin-2.3.1-x86_64.egg/numpy/core/include
   -I/usr/include/python3.4m -c pandas/msgpack/_packer.cpp -o
   build/temp.cygwin-2.3.1-x86_64-3.4/pandas/msgpack/_packer.o

   I'm guessing that gcc isnt finding pandas/src/msgpack and its subdirectories because the prior builds
   use all the other links except for these.

   I guess, my question is, has anyone tried to install pandas on Cygwin's python? If not, any clues on
   what's going on here?

***
   I've got no answer for you, but I've got the same problem. If you sorted this out, please do share
   the answer for the betterment of all the teeming masses whose employers insist on Windows. ;-)

***
   unfortunately, I have not figured this out. I can install numpy but am stuck at pandas. I'll keep you
   updated in this ever continuing saga. – [35]Franco Solleza Jan 5 '16 at 19:10

***
   Also trying to do this at the moment. Please update if you ever figured this out. Thanks.

***
   Sorry no, I haven't figured it out and haven't been working on it for a while... – [37]Franco Solleza

***
   I successfully built pandas 0.18.1, I had to install gcc-g++.

   If you're using baboon: pact install gcc-g++

***
   this below is taken from another website,
   https://wiki.usask.ca/display/MESH/Running+Python+from+the+Cygwin+Terminal.

   I report the steps below but all credit goes to the original writer.

   Configuring Cygwin

   Download and run the Cygwin installer: setup-x86.exe for 32-bit or setup-x86_64.exe for 64-bit
   (source: [45]http://cygwin.com/install.html).

   Search for and mark the following packages for installation:
     * \All\Devel\make
     * \All\Devel\gcc-core
     * \All\Devel\gcc-fortran
     * \All\Devel\gcc-g++
     * \All\Python\python
     * \All\Web\wget

   Installing Python

   Run "Cygwin Terminal" (mintty.exe) as an Administrator. Install Python using the following command:
wget https://bootstrap.pypa.io/ez_setup.py -O - | python

   Install additional packages, as required:
easy_install --upgrade numpy
easy_install "python-dateutil==1.5"
easy_install --upgrade pytz
easy_install --upgrade pandas

***
   Install the following packages in cygwin :
python2-numpy
python2-six
python2-wheel
python2-setuptools
python2-pip
python2-cython
gcc-core
gcc-fortran
gcc-g++
make
wget

   And then in Cygwin Terminal, build and install
pip2 install pytz python-dateutil
pip2 install pandas


---
https://wiki.usask.ca/display/MESH/Running+Python+from+the+Cygwin+Terminal

Running Python from the Cygwin Terminal

Python is a useful scripting language that can be used with Fortran modules to improve flexibility with
manipulating certain types of data. A fully-featured development environment can be installed to write and run
new Python scripts. However, if the intent is to simply run an existing script, an alternate approach is to run
Python from the Cygwin terminal.

Cygwin
Cygwin is a software package that can be used to compile Standalone MESH on Microsoft Windows.
Installing Python with Cygwin
Configuring Cygwin
Download and run the Cygwin installer: setup-x86.exe for 32-bit or setup-x86_64.exe for 64-bit
(source: http://cygwin.com/install.html).

Search for and mark the following packages for installation:
\All\Devel\make
\All\Devel\gcc-core
\All\Devel\gcc-fortran
\All\Devel\gcc-g++
\All\Python\python
\All\Web\wget

Installing Python
Run "Cygwin Terminal" (mintty.exe) as an Administrator.

Install Python using the following command:
wget https://bootstrap.pypa.io/ez_setup.py -O - | python

Install additional packages, as required:
easy_install --upgrade numpy
easy_install "python-dateutil==1.5"
easy_install --upgrade pytz
easy_install --upgrade pandas

Running Python from the Cygwin terminal
To compile an existing Fortran module for Python:
f2py -c -m NAME_OF_FILE NAME_OF_FILE.f90

To run an existing Python script:
python NAME_OF_FILE.py input_arguments
