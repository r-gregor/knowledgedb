filename: howto_change-default-python-version_20170613.txt
https://www.obeygeek.com/how-to-change-default-python-version-on-debian-9-stretch-linux-video-tutorial/

How to change default python version on Debian 9 Stretch Linux
June 12, 2017

   Today we will learn how to switch default python version system wide on Debian 9 Stretch. Some
   programs work with Python 2.7 and some require Python 3. In normal cases, both versions are already
   installed on your system. For any reasons you want to change the default version you can follow the
   guide below and for your batter understanding we have also posted a video that you are requested to
   have a look.

   We’ll start by installing both of the python version just in case you do not have it already
   installed.

PYTHON 2 INSTALLATION:
# apt install python

PYTHON 3 INSTALLATION:
# apt install python3

Check Default Python Version

   The default python version can be checked by typing below command in the terminal. After
   installation, you are likely to have python 2.7 as your default version.
$ python --version
Python 2.7.13

Update Python Alternatives List

   To switch python version system wide you need to apply below command. It will throw an error
   mentioned in the output below but do not worry, we’re gonna install those alternatives.
# update-alternatives --list python
update-alternatives: error: no alternatives for python

   Before installing Python alternatives we’ll list all the available
   options by applying below command.
$ ls /usr/bin/python*
/usr/bin/python
/usr/bin/python2
/usr/bin/python2.7
/usr/bin/python3
/usr/bin/python3.5
/usr/bin/python3.5m
/usr/bin/python3m

   We can update all the Python alternatives we want from the list but for now, we’re going to choose
   Python 2.7 and Python 3. Therefore just type in below commands with ‘sudo’ prefix as it requires
   superuser permissions.
# update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
update-alternatives:
using /usr/bin/python2.7 to provide /usr/bin/python
(python) in auto mode
# update-alternatives --install /usr/bin/python python /usr/bin/python3.5 2
update-alternatives:
using /usr/bin/python3.5 to provide /usr/bin/python
(python) in auto mode

   The number at the end of both of the above commands shows priority. Higher priority version is
   selected as default. In the above command we’ve selected ‘2’ priority for the Python 3 version,
   therefore it will be our default version after executing the command. You can check it by applying
   below command.
# python --version
Python 3.5.3

Switch Between Python Versions

   Now, after all this work there should be an easier way of switching the default version right? That
   can be solved with below command. And yes you will need superuser permissions for this too.
# update-alternatives --config python
There are 2 choices for the alternative python
(providing /usr/bin/python).

  Selection    Path                Priority   Status
------------------------------------------------------------
* 0            /usr/bin/python3.5   2         auto mode
  1            /usr/bin/python2.7   1         manual mode
  2            /usr/bin/python3.5   2         manual mode

Press <enter> to keep the current choice[*],
or type selection number: 1
update-alternatives:
using /usr/bin/python2.7 to provide /usr/bin/python
(python) in manual mode

   Type in the appropriate number to change the priority and check the change with the command shown
   below.
# python --version
Python 2.7.13
