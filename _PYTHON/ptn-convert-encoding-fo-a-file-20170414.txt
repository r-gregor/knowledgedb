filename: python_convert-encoding-fo-a-file_20170414.txt
https://bytes.com/topic/python/answers/431749-detect-character-encoding

Hi,
As you already heard you can't be sure but you can guess.

I use a method like this:

<code>
# guess_list=['us-ascii','iso-8859-1','iso-8859-2',...,'windows-1250','windows-1252'...]

guess_list=['iso-8859-1','iso-8859-2','windows-1250','windows-1252']

def guess_encoding(text):
	for best_enc in guess_list:
		try:
			unicode(text,best_enc,"strict")
		except:
			pass
	else:
		break
	return best_enc
</code>

'guess_list' is an ordered charset name list like this:

['us-ascii','iso-8859-1','iso-8859-2',...,'windows-1250','windows-1252'...]

of course you can remove charsets you are sure you'll never find.


---
vim method:
The simplest solution for me was to open the file in vim
and type :set fileencoding, which displays the auto-detected encoding.
vim correctly detected my test file as latin1 (ISO8859-1).
