filename: ptn_quick-fix_of_broken_router_20181218.txt
http://blogologue.com/frames?url=http://blogologue.com/blog_entry?id=1544885504X93&protocol=http

Python quick-fix of broken router
I have a router which seems to "take the day off" every once in a while, and this started after I filled up
all 4 Ethernet ports.

Rebooting, the only fix I've found so far, fixes the problem, so that all 4 Ethernet ports start working again.

Rebooting the router gets boring and annoying after a while, so I decided to write a script to automatically
reboot the router every hour.

That script is here:

https://github.com/morphex/netgear_reboot/
    README.md
    
    netgear_reboot
    Reboot script for Netgear WNDR4500
    I have a router that started failing after I filled up all 4 Ethernet ports, even after updating firmware,
    so this little script runs on a laptop connected via WiFi, and reboots the router every hour.
    To set it up to run on boot, have a crontab something like this:
    START CRONTAB HOME=/home/morphex
    @reboot /home/morphex/netgear_reboot/br.sh ROUTER_ADMIN_PASSWORD END CRONTAB
    
    Where HOME is the home directory of the user, where netgear_reboot is the directory for this script, and
    bin is the directory which contains geckodriver, which can be downloaded from here:
    https://github.com/mozilla/geckodriver/releases
    
    Also, on my laptop, the network routing gets screwed up, so I have to allow my user morphex to run sudo on
    the command to reset the routing table:
    morphex ALL=(ALL) NOPASSWD: /sbin/ip route del 0/0
    
    the above line is added to /etc/sudoers
    Tested on Ubuntu with python 2 and 3, seems to work just fine. Requires the python package python(3)-selenium.
    Blog posts related to this software is here:
    http://blogologue.com/search?category=1470141490X



https://raw.githubusercontent.com/morphex/netgear_reboot/master/br.py
<code>
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
import time
import os
import sys

def main(password):
  options = Options()
  options.add_argument("--headless")
  browser = webdriver.Firefox(firefox_options=options)
  url = "http://admin:%s@10.11.12.1/ADV_home2.htm" % password
  browser.get(url) #navigate to the page
  browser.find_element_by_id("reboot").click()
  time.sleep(2)
  browser.switch_to_alert().accept();
  time.sleep(5)
  os.system("/usr/bin/sudo /sbin/ip route del 0/0")
  time.sleep(90)
  browser.quit()

if __name__ == '__main__':
  # 60 seconds to allow setting up network on reboot
  time.sleep(60)
  while True:
    main(sys.argv[1])
    time.sleep(60*60) # 1 hour
</code>

https://raw.githubusercontent.com/morphex/netgear_reboot/master/br.sh
<code>
#!/bin/bash

GECKODRIVER_PATH=$HOME/bin
RUN_DIRECTORY=$HOME/netgear_reboot
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin
PATH=$PATH:$GECKODRIVER_PATH
export PATH
cd $RUN_DIRECTORY
python br.py $1 >> br.log
</code>

Didn't need to write any Python 2 or 3 specific hacks to make it work on either Python 2 or 3 either.

I was reading a Python 2-3 cheat sheet here:
http://python-future.org/compatible_idioms.html

And after getting used to using for example print(1), I like the idea of making things simpler and more
consistent, an easier to learn syntax.

An added benefit is that I, and other who use two or more keyboard layouts, don't have to remember where the
backticks are located on no_nb and en_us keyboard layouts.


---
