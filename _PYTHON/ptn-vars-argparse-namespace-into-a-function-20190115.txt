filename: ptn_vars-argparse-namespace-into-a-function_20190115.txt
https://www.peterbe.com/plog/vars-argparse-namespace-into-a-function

Use vars() to send an argparse Namespace into a function in Python
08 January 2019

   I only just learned about this today after all these years and thought you might like it too.

   The trick is to conveniently turn an argparse.Namespace into keyword arguments that you can send to a
   function. This is the old/wrong way I've been doing it for years:

<code>   
# THE OLD WAY

def main(things, option_a, option_n):
    print(locals())  # Debugging


import argparse

parser = argparse.ArgumentParser()
parser.add_argument("things", help="Bla bla", nargs="*")
parser.add_argument("-o", "--option-a", help="Bla bla", default="Op A")
parser.add_argument("-n", "--option-n", help="Ble ble", default="Op N")
args = parser.parse_args()

main(
    things=args.things,
    option_a=args.option_a,
    option_n=args.option_n
)
</code>

   That works but the tedious thing is to have to have spell out every single argument, twice!, when
   sending the argparse Namespace into the function. Here's the much moar betterest way:
   
<code>   
# THE NEW WAY

def main(things, option_a, option_n):
    print(locals())  # Debugging


import argparse

parser = argparse.ArgumentParser()
parser.add_argument("things", help="Bla bla", nargs="*")
parser.add_argument("-o", "--option-a", help="Bla bla", default="Op A")
parser.add_argument("-n", "--option-n", help="Ble ble", default="Op N")
args = parser.parse_args()

# The only difference and the magic sauce...
main(**vars(args))
</code>

   What's neat about this is that you don't have to type up every argument defined in the parser to the
   get it as arguments into a function. And as a bonus, Python will name match keyword arguments to
   arguments so the order doesn't matter.

   Caveat! This "trick" assumes that the arguments in the parser match the arguments in the function. So
   if the main() function takes an argument called foo_bar you have to have an argument in the parser
   called --foo-bar.


---
