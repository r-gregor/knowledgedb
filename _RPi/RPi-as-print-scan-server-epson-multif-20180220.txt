filename: RPi-as-print-scan-server-epson-multif_20180220.txt
https://www.raspberrypi.org/forums/viewtopic.php?f=36&t=109169

Scanning Server for Epson L350 Series Printer/Scanner
May 02, 2015

   The L351 Epson All-in-one printer/scanner device was a huge pain in the ass to configure, but after a
   few days I've managed to figure it out. The printer part is actually really easy so I'm not going to
   cover it in this guide, you can find other guides for this. I will be devoting this guide to
   configuring the Raspberry Pi running Raspbian to work as a scanner server on for this particular
   device for a Windows client assuming it is already configured to work as a printer server (i.e. CUPS
   has been installed and configured). Due to the nature of this device being a combo there are special
   steps to be taken in order to achieve the desired effect.
   
   Lets get SANE (the scanner operator for linux) and an internet superdaemon:
$ sudo apt-get install xinetd sane-utils

   Now we configure SANE to run automatically:
$ sudo nano /etc/default/saned

   Edit it to look like this:
# Defaults for the saned initscript, from sane-utils

# Set to yes to start saned
RUN=yes

# Set to the user saned should run as
RUN_AS_USER=saned


   Start saned:
$ sudo /etc/init.d/saned start

   Let's see if our scanner is listed:
$ lsusb
Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
Bus 001 Device 006: ID 04b8:08a1 Seiko Epson Corp.
Bus 001 Device 005: ID 7392:7811 Edimax Technology Co., Ltd EW-7811Un 802.11n Wireless Adapter [Realtek RTL8188CUS]

   In my case, it's listed as "Bus 001 Device 006: ID 04b8:08a1 Seiko Epson Corp.". Now let's try
   activating the scanner:
$ scanimage -L

   If your output was:
No scanners were identified. If you were expecting something different,
check that the scanner is plugged in, turned on and detected by the
sane-find-scanner tool (if appropriate). Please read the documentation
which came with this software (README, FAQ, manpages).

   Then you have the same problem as I had, so keep following the guide. If your output is different,
   and you actually see a device ID and scanner name after that, then your scanner is already configured
   (perhaps by the time you read this SANE will include the Epson drivers and will detect automaticaly)
   Let's first prepare our network sharing of the scanner for our Windows client:
$ sudo cat /etc/services | grep sane
sane-port       6566/tcp        sane saned      # SANE network scanner daemon

   You should see the sane-port line. If you don't - add it.
$ cd /etc/xinetd.d
$ sudo touch sane-daemon
$ which saned
/usr/sbin/saned
$ sudo nane sane-daemon

   This will set up the XInet configuration. Please use the following configuration for the
   /etc/xinetd.d/sane-daemon file:
service sane-port
            {
              socket_type = stream
              server = /usr/sbin/saned
              protocol = tcp
              user = saned
              group = saned
              wait = no
              disable = no
            }

   Note that we used the output from “which saned” in the configuration above. If it is different for
   you – e.g. on Archlinux – adjust accordingly.
   Set up saned to accept connections from your network by editing /etc/sane.d/saned.conf:
 $ sudo nano /etc/sane.d/saned.conf

   To look like this:
# saned.conf
# Configuration for the saned daemon

## Daemon options
# [...]
# data_portrange = 10000 - 10100

## Access list
# [...]
# The hostname matching is not case-sensitive.

#scan-client.somedomain.firm
192.168.1.0/24

#192.168.0.1
#192.168.0.1/29
#[2001:7a8:185e::42:12]
#[2001:7a8:185e::42:12]/64

# [...]

   Please adjust the subnet specification 192.168.1.0/24 to your network architecture. You can also
   explicitly specify single IPs (in my case I just added 192.168.0.20, which is the IP of my main PC).
   If you do not edit this file, SaneTwain will hang when contacting your Raspberry Pi scanner server.
   Now you can reboot the Raspberry Pi (sudo reboot).
   Installing the Epson scanner drivers:
   The first thing we need to do is to compile the Epson iscan drivers. They are available for download
   from the Epson driver portal ([56]http://download.ebz.epson.net/dsc/searc ... ch/?OSC=LX)
   You need the iscan and iscan-data .tar.gz files. The packages available there are for other
   architectures, and will not work on the Raspberry Pi, that's why we are forced to download the
   sources and compile for ourselves:
$ cd ~
$ wget https://download3.ebz.epson.net/dsc/f/03/00/03/61/59/a3f8b8d60e8702a1c5bf3977d018cc2336e308a8/iscan_2.30.1-1.tar.gz
$ wget https://download3.ebz.epson.net/dsc/f/03/00/03/61/59/646738a219f7354bf3268897385f6ce48c0776bf/iscan-data_1.36.0-1.tar.gz

   Note: the wget link may be different for you if the version of the driver ever changes. Refer to the
   epson driver portal
   Before we get to compiling, let's install all the dependencies:
$ sudo apt-get install xsltproc libgtk2.0-dev libxml2-dev libsane-dev libltdl-dev

   Great, now let's get to compiling, we compile the iscan-data first:
$ cd iscan-data-1.36.0
$ sudo ./configure
$ sudo make
$ sudo make install

   Hopefully, no errors come up. Keep an eye out, there may be some dependencies missing, in which case
   you should manually install them. Now, we do the same thing with iscan:
$ cd ..
$ cd iscan-2.30.1
$ sudo ./configure
$ sudo make
$ sudo make install

   We'll make a dir for sane's drivers and transfer some driver files there just for good measure
   (WARNING: I'M USING RASPBERRY PI MODEL B, THE /lib/arm* FOLDER NAME MAY BE DIFFERENT FOR YOU
   DEPENDING ON YOUR PI, TO MAKE SURE JUST DO ls /lib/ | grep arm AND YOU WILL SEE THE PROPER FOLDER
   NAME)
$ sudo mkdir /lib/arm-linux-gnueabihf/sane
$ sudo cp /usr/local/lib/sane/libsane-epkowa* /lib/arm-linux-gnueabihf/sane/
$ sudo cp /home/pi/iscan-data-1.36.0/epkowa.desc /lib/arm-linux-gnueabihf/sane/

   Now let's make sure SANE only loads the Epson drivers so as to not overload the system more than we
   need to:
$ sudo nano /etc/sane.d/dll.conf

   Starting from "net", you need to comment out (add a # to the beginning of each line) all the lines
   except epson2. DO NOT COMMENT OUT epson2.
   Now we must add the device ID to the SANE epson2 config:
$ sudo nano /etc/sane.d/epson2.conf

   After the "usb" line, add the following line:
usb 0x4b8 0x8a1

   Where the "4b8" and "8a1" are simply the last three characters of both parts of the device ID of the
   scanner/printer, which we found out when we did the lsusb command at the beginning of the guide (Bus
   001 Device 006: ID 04b8:08a1 Seiko Epson Corp). It might be different in your case, so make sure to
   check it.
   Accounting for the permission problems due to the printer/scanner conflict:
   First, we add user saned to the lp group:
$ sudo adduser saned lp

   Lastly, we create a custom rule for udev to grant special permissions:
$ sudo nano /etc/udev/rules.d/99-custom.rules

   Add the following line:
ATTR{idVendor}=="04b8", ATTR{idProduct}=="08a1", MODE="0666", GROUP="lp"

   NOTE: the idVendor and idProduct attribute values may be different for you. Once again, refer to the
   device ID we get from the lsusb command. Pay attention, the format here is different from the
   epson2.conf file.
   
   That's it! Reboot the pi!
$ sudo reboot

   Let's see if it works, running the scanimage -L command you should have the following or similar
   output:
$ scanimage -L
device `epson2:libusb:001:004' is a Epson PID 08A1 flatbed scanner

   If that's the case - congratulations! The hard part is over.
   
   Windows client setup:
   Download SaneTwain here and install it (http://sanetwain.ozuzo.net/)
   Just enter the pi's IP address in the "Hostname" field (if you do not know it, “ip addr show” will
   show you it’s network setup)
   Try to scan a page. DONE!

     ________________________________________________________________________________________________

***
   Hi Alexey!
   First of all, let me thank you for the great job, making such detailed, step-by-step guide for
   configuring scanner on L350. Done everything as you described and it worked like a charm!
   Now, the sad part :)
   As you mentioned in the beginning, configuring printer was a pretty easy deal. But, unfortunately, I
   was not able to find any information on this matter.... And moreover, drivers, available on the epson
   site is not for ARM architecture.
   If you have time, please give me a hint, how to configure print server on Raspbian, where to look for
   information.
   Thank you in advance!
   Warm Regards
   Denis

***
   Hello, Denis!
   Sorry for taking so long to reply, I didn't check this thread for a long time.
   Configuring the printer part is very easy, you don't need a specific guide for the L351, all you need
   to do is install and configure CUPS. There are a bunch of guides on how to do that, it takes less
   than half an hour, and it just works. Here's a guide I may have used:
   http://www.instructables.com/id/Turn-an ... /?ALLSTEPS
     ________________________________________________________________________________________________

***
$ cd /etc/xinetd.d
$ sudo touch sane-daemon
$ which saned
/usr/sbin/saned
$ sudo nane sane-daemon

   is "nane" really correct or should it be "nano"?
   I think I got everything correctly running on my raspberry pi. I have Epson L210 Series multifunction
   printer scanner.
   using the scanimage -L, it gives me the same output like you have mentioned.
   However, my problem is on connecting to the Scanner from my PC (Windows).
   I have followed the instructions on the SaneTwain website, but everytime I run ScanImage.exe it gives
   an error "Error establishing connection to host".
   What do you think is causing the problem?
     ________________________________________________________________________________________________

***
   I think I have figured it out
   On the saned.conf file. I first added this:
   192.168.1.2/33
   I thought it meant that it is a range of IP Address between 2 and 33, but I think I was wrong.
   So I added my Windows 7 IP address on the list, and it worked. I knew that the Windows 7 IP must be
   listed because when I reboot my Windows 7 PC and it got a new IP address, I cannot connect to the
   scanner again. I check my IP address and added it again and it work again.
   I have adjusted my DHCP server so that my Windows 7 PC will always get the same IP.
   But I still like to know how can I set saned.conf so it would accept a range of IP addresses?
   By the way, I am using :
   Windows 7 64Bit.
   Epson L210 Series
   Raspberry Pi 2 (raspian)
   If I have no error during the initiating the ScanImage program, I can close it just fine with out the
   memory error. It only happens when it cannot connect to the host and I try to close the program.
     ________________________________________________________________________________________________

***
   leojarrabi wrote:I think I have figured it out
   On the saned.conf file. I first added this:
   192.168.1.2/33
   I thought it meant that it is a range of IP Address between 2 and 33, but I think I was wrong.
   So I added my Windows 7 IP address on the list, and it worked. I knew that the Windows 7 IP must be
   listed because when I reboot my Windows 7 PC and it got a new IP address, I cannot connect to the
   scanner again. I check my IP address and added it again and it work again.
   I have adjusted my DHCP server so that my Windows 7 PC will always get the same IP.
   But I still like to know how can I set saned.conf so it would accept a range of IP addresses?
   By the way, I am using :
   Windows 7 64Bit.
   Epson L210 Series
   Raspberry Pi 2 (raspian)
   If I have no error during the initiating the ScanImage program, I can close it just fine with out the
   memory error. It only happens when it cannot connect to the host and I try to close the program.

   Hi- how you configure the epson l120 on a raspberry? (русский говоришь)?
     ________________________________________________________________________________________________

***
   On the saned.conf file. I first added this:
   192.168.1.2/33
   I thought it meant that it is a range of IP Address between 2 and 33, but I think I was wrong.
   ...
   But I still like to know how can I set saned.conf so it would accept a range of IP addresses?

   Hey, Leo!
   So when we talk about IP ranges in the format like 192.168.1.0/24, most people think it means all IPs
   from 192.168.1.0 to 192.168.1.24;
   However, that's not actually the case. The "/24" means "the first 24 bits of the address are the
   unchanged". What do bits have to do with this? Well, you see, an IPv4 address consists of 32 bits or
   4 bytes (1 byte == 8 bits). So if we see an address like 192.168.17.42, in bits representation (which
   is binary representation) it would be: 11000000 10101000 00010001 00101010 (notice instead of dots I
   used spaces to separate the bytes). When computers talk to each other on the internet they actually
   use the binary representation. The "192.168.17.42" is just used by humans because it's easier to read
   and remember.
   So when we say "the first 24 bits of the address are unchanged", what that means is that the last one
   byte of the address can have any value (remember the IPv4 address is 4 bytes long), i.e.
   192.168.0.xxx, or, in binary: 11000000 10101000 00000000 xxxxxxxx <-(notice there are 24 fixed bits,
   that's what the "/24" means). Which will give us a range from 192.168.0.0 to 192.168.1.255 (why
   "255"? Because 255 is highest number you can make in binary with 8 bits: 11111111)
   So you say you want a range of IP between 192.168.1.2 and 192.168.1.33; With the "slash notation"
   (this is what the 192..../24 notation is called) this is impossible because of the binary nature of
   the IP address which I hope you now understand. What I can do is give you a range from 192.168.1.0 to
   192.168.1.31. Let's convert 192.168.1.0 to binary. We get:
   11000000 10101000 00000001 00000000
   Now we convert 192.168.1.31 to binary:
   11000000 10101000 00000001 00011111
   So, after comparing the two, you can see that the difference between them is the last 5 bits. Which
   means we want the first 27 bits to be unchanged (remember, the total bits in an IPv4 address is 32.
   So 32 - 5 = 27). Therefore, the slash notation for that range is 192.168.1.0/27.
   Perhaps you would prefer the range 192.168.1.0 - 192.168.1.63? I'll leave it up to you how to figure
   it out.
     ________________________________________________________________________________________________

***
   Sorry to bump an oldie, but is anyone else able to download the scanner drivers with the above wgets?
   I only ask because I could have sworn blind that I used this very guide only a fortnight ago to set
   up the same scanner on another installation and it worked fine, but now I'm getting 404s. :?
   I'll answer my own question then: The relevant tar.gz files can be found here...
   [110]http://support.epson.net/linux/src/scanner/iscan/
   Pi2B Mini-PC/Media Centre: ARM=1GHz (+3), Core=500MHz, v3d=500MHz, h264=333MHz, RAM=DDR2-1200
   (+6/+4/+4+schmoo). Sandisk Ultra HC-I 32GB microSD card on '50=100' OCed slot (42MB/s read) running
   Raspbian/KODI16, Seagate 3.5" 1.5TB HDD mass storage.
     ________________________________________________________________________________________________

***
   Hi Alexey!
   Just wanted to thank you: your step-by-steps guide worked perfectly and immediately with my Raspberry
   PI model B and a Epson CX9400Fax flat-bed printer/scanner combo!
   Only difference is that the source code needed to recompile iscan is available here:
   [118]http://support.epson.net/linux/src/scanner/iscan/
   Cheers!
   I have seen things you people would not believe. Attack ships on fire off the shoulder of Orion. I
   watched C-beams glitter in the dark near the Tannhauser gate. All those moments will be lost in time
   like tears in the rain. Time to die.
   —Roy Batty
     ________________________________________________________________________________________________

***
   Hello I'm try to share my scanner thru the network using SANE.
   If I use
 scanimage -L

   the scanner is detect
device `epson2:libusb:001:004' is a Epson PID 084D flatbed scanner

   also
sane-find-scanner

   detect the scanner
found USB scanner (vendor=0x04b8 [SEIKO EPSON], product=0x084d [USB MFP]) at libusb:001:004
found USB scanner (vendor=0x0424, product=0xec00) at libusb:001:003

   but when I try to connect the sane twain v1.36 can't find the scanner give me this error "no device
   found on backend "and in device ther is epson2:libusb:001:004
     ________________________________________________________________________________________________

***
   Follow your steps step by step after the completion of the following tips, I should do?
   My device Raspberry Pi 3B
   pi@raspberrypi:~ $ scanimage -L
   No scanners were identified. If you were expecting something different,
   check that the scanner is plugged in, turned on and detected by the
   sane-find-scanner tool (if appropriate). Please read the documentation
   which came with this software (README, FAQ, manpages).
   pi@raspberrypi:~ $ sane-find-scanner
   # sane-find-scanner will now attempt to detect your scanner. If the
   # result is different from what you expected, first make sure your
   # scanner is powered up and properly connected to your computer.
   # No SCSI scanners found. If you expected something different, make sure that
   # you have loaded a kernel SCSI driver for your SCSI adapter.
   # Also you need support for SCSI Generic (sg) in your operating system.
   # If using Linux, try "modprobe sg".
   could not open USB device 0x1908/0x0102 at 001:005: Access denied (insufficient permissions)
   found USB scanner (vendor=0x04b8 [EPSON], product=0x08a1 [EPSON L210 Series]) at libusb:001:004
   could not open USB device 0x0424/0xec00 at 001:003: Access denied (insufficient permissions)
   could not open USB device 0x0424/0x9514 at 001:002: Access denied (insufficient permissions)
   could not open USB device 0x1d6b/0x0002 at 001:001: Access denied (insufficient permissions)
   # Your USB scanner was (probably) detected. It may or may not be supported by
   # SANE. Try scanimage -L and read the backend's manpage.
   # Not checking for parallel port scanners.
   # Most Scanners connected to the parallel port or other proprietary ports
   # can't be detected by this program.
   # You may want to run this program as root to find all devices. Once you
   # found the scanner devices, be sure to adjust access permissions as
   # necessary.


---
http://poingg.com/35630.html
Raspberry Pi Printer Server, Scanner Server and Media Center
09.02.13

   First of all, sorry for posting this in english. Hopefully, I'll post this in portuguese too. I chose
   english as this might be interesting to a wide community of raspberry pi users out there.

   So what's this all about? Really, it's about making good use of an extremely cheap, low powered
   computer that I got at Codebits last year. I actually replaced a $600 mac mini I had doing all these
   things before.

   My goal was to have a reliable Media Center that could connect to a NAS device (I use Synology
   DS1511) and play all my videos, photos and MP3.

   Also, at home we all have a computer and we all need to print or scan something every once in a
   while. I could have bought a network printer and scanner but instead I already owned an old Canon
   Inkjet printer, the PIXMA MP630 which has been doing it's job quite well for years. As it happens,
   this is a multifunction device and works as a scanner too. What follows is a recipe to have
   everything working.

   You'll need a 4GB SD card and a Mac to start the procedure. Everything else is done on the Raspberry
   Pi.
   You should have some knowledge of working "with black windows full of letters" as my daughter says.

1. Install raspbmc
   Raspbmc is a debian wheezy distribution optimized for XBMC Media Center. There are some others but
   for some reason I like this one. Any other debian based should work though.

   Open a terminal window on your mac, insert the SD card on a card reader and run these:

   $ curl -O http://svn.stmlabs.com/svn/raspbmc/testing/installers/python/install.py
   $ chmod +x install.py
   $ sudo python install.py

   Now follow the on screen instructions.

2. Boot raspbmc on your Raspberry Pi
   Insert the card on the Raspberry pi. It will boot and complete the installation. Grab a coffee :)

   Go ahead and play a bit with XBMC. It's great. And if you have one of those TVs that support CEC then
   you can even use your TV remote to navigate on XBMC. I know for a fact that Samsung and Sony TVs work
   quite well.

3. Log on to your Raspberry Pi
   Open your terminal and run this:
   $ ssh pi@192.168.1.169

   it will prompt you for a password. Raspbmc uses the default password "raspberry". I advise you to
   change it just in case.
   Take some time choosing your locale and time zone settings. It will only prompt you once for these.

4. Update your installation
   The network installation of Raspbmc you just did will probably download all the latest packages.
   However, just to be sure, run these commands:
   $ sudo apt-get update
   $ sudo apt-get upgrade

5. Now it's time to setup the printer server.
   $ sudo apt-get install cups
   
   (Grab a coffee. This will take a while)
   $ sudo usermod -a -G lpadmin pi
   
   We're adding user "pi" to the lpadmin group. You'll need admin access to add printers.

   Now edit cupsd configuration:
   $ sudo vi /etc/cups/cupsd.conf

   And change Listem localhost:631 to Listen *:631.

   Also change or add the following lines. Replace 192.168.1.* with the IP addresses of your network. My
   network is 192.168.1.0/24

   Listen *:631

   <Location />
   Order allow,deny
   Allow 192.168.1.*
   </Location>

   <Location /printers>
   Order allow,deny
   Allow 192.168.1.*
   </Location>

   # Restrict access to the admin pages...
   <Location /admin>
   Order allow,deny
   Allow 192.168.1.*
   </Location>

   We're telling cups which IPs in the network have access to. If you trust your network and if you're
   sure there's no access from outside, you can skip editing the file and just enter:
   $ sudo cupsctl --remote-admin
   $ sudo cupsctl --remote-any

   Now you have to restart CUPS
   $ sudo /etc/init.d/cups restart

   Please note the IP address of your Raspberry Pi. You'll need it later
   $ ifconfig eth0  | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'

6. Add your printer
   On your mac, grab a browser and point it to your Raspberry Pi's IP on port 631. Mine is on
   192.168.1.169, so...
   https://192.168.1.169:631

   Don't worry about the certificate warning. It's self signed so your browser will rightfully warn you
   about it.

   Now click on Administration and then on Add Printer

   You should be prompted with a user and password. Of course, use "pi" as the user and "raspberry" as
   the password (or whatever new password you chose)

   You should see a list of local printers. Mine was listed as "Canon MP630 series (Canon MP630 series)"

   Press continue, review the information and make sure you check "Share this printer"

   Choose a make and model and finally add the printer.


7. Add your new network printer on OSX
   This is where I've seen most people make a mistake so beware. When you add this printer under OSX,
   the default driver is postscript based. This means the Mac will send a postscript file back to the
   CUPS server. Now the server has to convert postscript to whatever the printer understands. This is
   bad. This conversion is both memory and cpu consuming. Printing a page would take up to 10 minutes if
   you use these settings.

   What I did was: I installed the correct driver on OSX as if I had the printer connected locally and
   used that driver. This means that all processing is done by my computer and the Raspberry Pi only has
   to forward it to the printer.

   In my case, I installed CanonPrinterDrivers from Apple and chose MP 630 Series driver on the printer
   add dialog.

   Printing done! Go ahead and print a few documents. It's fast and has almost no impact on the
   Raspberry. I actually had a video playing without problems.

8. Now for the scanner.
   While installing CUPS you also installed SANE. So everything should be in place.

   To be sure, run this command:
   $ scanimage -L
   device `pixma:04A9172E_145C70' is a CANON Canon PIXMA MP630 multi-function peripheral

   So, SANE identified my device correctly. Actually, if I try:
   $ scanimage --format=tiff > ~/myimage.tiff

   It works.

   But now we need to tell SANE who is allowed to scan from the network.
   Grab your editor:
   $ sudo vi /etc/sane.d/saned.conf

   And simply add this line
   192.168.1.0/24

   Again, change it to match your network. This means that every IP from 192.168.1.1 to 192.168.1.255
   will be able to use the scanner.

   Now make sure SANE starts by default. You need to edit another file:
   $ sudo vi /etc/default/saned

   And change this line to yes
   RUN=yes

9 Setup your scanner client under OSX
   Now, unfortunatelly, Apple has been shooting itself in the foot as far as network scanning is
   concerned. With the latest versions (I tried 10.7 and 10.8) you can't make your scanner appear under
   "Image Capture". However, with a few tweaks you can make things work.

   First, you need to install SANE Backends for OSX. There's a nice port here:
   http://www.ellert.se/twain-sane/

   Install libusb and SANE Backends, SANE Preferences Pane in this order

   Now you must tell your mac where to search for the scanner.

   Edit this file:
   $ vi /usr/local/etc/sane.d/net.conf

   And add your Raspberry Pi's IP right at the end.
   In my case, 192.168.1.169

   Now go ahead and see if your mac recognizes the network scanner:

   $ scanimage -L
   device `net:192.168.1.169:pixma:04A9172E_145C70' is a CANON Canon PIXMA MP630 multi-function peripheral

   There! If you're a command-line fan, you can simply use "scanimage"

   If you prefer a gui to scanimage, download "snac" from here
   http://www.wallner.nu/fredrik/software/snac/

   It's just a GUI frontend to scanimage but it allows you to scan and save the picture.

   I hope this is useful to somebody.
   Cheers.


---
https://rux.vc/2017.03/raspberry-pi-zero-print-scan-server/

RPI Zero: print & scan servers

   I had to make old printer and scanner wirelessly available over local network. It can be done using
   wireless printer USB adapter but it’s not that cheap and still doesn’t support scanner

   Obvious choose is using Raspberry PI with linux installed. Before I heard a lot about RPI Zero but
   could never believe that it costs just £5. Actually it is just £5 and +£2.5 delivery fee.
   Surprisingly there are no other options except of first class delivery!

   Long story short, I put here main steps how to setup print and scan servers on small Raspberry PI
   Zero:

General configuration
   Upgrade RPI software
   To access most recent features and freshly created bugs make sure you use [13]most recent version of
   RPI firmware. To do so run sudo apt-get dist-upgrade.

   Static IP
   Assign static IP for your raspberry. The easiest way is configure your router DHCP server. Just bind
   mac address to nice IP in your network, like 192.168.100.100, later in this post I

   Reduce graphic memory fraction
   If you aren’t going to use video [14]how to

Configure cups(print server)

   Install cups
sudo apt-get install cups
sudo usermod -a -G lpadmin pi

   Configure cups
   Make cups listen on all interfaces to make it network available, disable ssl and allow access from
   network in /etc/cups/cupsd.conf
Port 631
DefaultEncryption Never
DefaultAuthType None

 . . . .

<Location />
  Order allow,deny
  Allow from all
</Location>
<Location /admin>
  Order allow,deny
  Allow from all
</Location>
<Location /admin/conf>
  AuthType Default
  Require user @SYSTEM
  Order deny,allow
  Allow from all
</Location>


   Restart print server
service cups restart

   Install printer
   Point your browser to http://192.168.XXX.XXX:631/ and go to Administraton → Printers → [Add Printer].
   You might be asked to put your rpi login password. Most likely your printer will be detected, follow
   the wizard’s prompts to finish setup.
   You might want to use [15]openprinting where you can download PPD file for your printer

   Configure your Linux/MacOS/Windows to use this printer
   Using built in tools add network printer.

   Fingers crossed it should work :)

Network scanner
   This is more tricky configuration as clients should support network protocol for sane. Unfortunately
   there are a lot of moving parts and seems like network scan is not the main priority for the sane
   developers. It takes a while to finish configuration so keep calm :)

   Install sane & xinetd
 apt-get install sane sane-utils xinetd

   Find scanner and driver for it
 sane-find-scanner

   And hope that you can see connected scanner :) If not google is your friend
   At this step you have to make sure that scanimage > someimage is working properly

   Configure network daemon systemd files
   Create file /etc/systemd/system/saned@.service with content:
[Unit]
Description=Scanner Service
Requires=saned.socket

[Service]
ExecStart=/usr/sbin/saned
User=saned
Group=saned
StandardInput=null
StandardOutput=syslog
StandardError=syslog

   And /etc/systemd/system/saned.socket with content:
[Unit]
Description=saned incoming socket

[Socket]
ListenStream=6566
Accept=yes
MaxConnections=1

[Install]
WantedBy=sockets.target

   Enable daemon
   Open /etc/default/saned and replace RUN=no with RUN=yes

   In /etc/sane.d/saned.conf
   Put your network, eg 192.168.100.0/24
systemctl enable saned.socket

   In theory it should be enough to start using scanner over network.

   Configure clients
     * On linux you can configure saned by adding RPI IP address to the file /etc/sane.d/net.conf.
       Running imagescan -L should display remote scanner and xscan should be able use it.
     * On windows I found very ugly but working application [16]SaneTwain.
     * For macos seems there is only one option [17]Sane Twain Interface
     * Full list for sane clients you can find [18]here

   Sample output
   To make sure you know what to expect here is sample output from the RPI and linux client:
pi@raspberry:~ $ sudo scanimage -L
device `snapscan:libusb:001:004' is a Acer FlatbedScanner23 flatbed scanner

user@client:~ $ scanimage  -L
device `net:192.168.XXX.XXX:snapscan:libusb:001:004' is a Acer FlatbedScanner23 flatbed scanner

Costs

   Most of the components you can find on eBay from different vendors:
   RPI Zero                                    £5 + £2.5
   WiFi with antenna on [21]Ralink RT5370 chip £3.34
   micro-USB host adapter                      £1.00
   4 ports USB 2.0 hub                         £1.5
   Sandisk microSD 16Gb class 10               £7
   HDMI type C to HDMI type A adaptor          £1.1
   RPI Zero Case                               £1.30
                                     Total     £15.2

   Wireless computer just for price of two-course meal. Not bad, isn’t it?

Conclusion
   Of course it’s possible to extend this computer even more, for example by connecting to external
   screen for XBMC. You also can connect camera, setup vpn server, host your website and do a lot of fun
   and useful stuff!
   



---
https://extremeshok.com/6138/ultimate-raspberry-pi-lan-print-scan-and-pdf-server-cups-airprint-ipp-cups-pdf-\
sanescan-sanetwain-phpsane-scanner-webinterface-samba-remote-file-access/


Ultimate Raspberry Pi : LAN Print , Scan and PDF Server : CUPS + AirPrint + IPP + cups-pdf + sanescan (
SaneTwain ) + phpSANE / PHP-Scanner-Server ( scanner webinterface ) + samba ( remote file access )
April 2, 2014

   Assumptions:
   Completed Ultimate Raspberry Pi : Preparation and with optional server preparation.
   Raspberry pi IP address : 192.168.1.111

   Install Dependencies
   apt-get update && apt-get install -f avahi-daemon cups cups-pdf python-cups avahi-discover
   libnss-mdns sane-utils xinetd printer-driver-gutenprint system-config-printer-udev

   Optional: Install one of the relevant printer drivers
   apt-get install printer-driver-c2050 #printer driver for Lexmark 2050 Color Jetprinter
   apt-get install printer-driver-c2esp #printer driver for Kodak ESP AiO color inkjet Series
   apt-get install printer-driver-cjet #printer driver for Canon LBP laser printers
   apt-get install printer-driver-escpr #printer driver for Epson Inkjet that use ESC P-R
   apt-get install printer-driver-foo2zjs #printer driver for ZjStream-based printers
   apt-get install printer-driver-gutenprint #printer drivers for CUPS
   apt-get install printer-driver-hpcups #HP Linux Printing and Imaging - CUPS Raster driver (hpcups)
   apt-get install printer-driver-hpijs #HP Linux Printing and Imaging - gs IJS driver (hpijs)
   apt-get install printer-driver-m2300w #printer driver for Minolta magicolor 2300W 2400W color laser printers
   apt-get install printer-driver-min12xxw #printer driver for KonicaMinolta PagePro 1[234]xxW
   apt-get install printer-driver-pnm2ppa #printer driver for HP-GDI printers
   apt-get install printer-driver-postscript-hp #HP Printers PostScript Descriptions
   apt-get install printer-driver-ptouch #printer driver Brother P-touch label printers
   apt-get install printer-driver-pxljr #printer driver for HP Color LaserJet 35xx 36xx
   apt-get install printer-driver-sag-gdi #printer driver for Ricoh Aficio SP 1000s SP 1100s
   apt-get install printer-driver-splix #Driver for Samsung and Xerox SPL2 and SPLc laser printers

   Configure cups to listen on the LAN
   sed -i "s|Listen localhost:631|Listen *:631|" /etc/cups/cupsd.conf

   Allow LAN access to CUPS
   sed -i "s|</Location>|Allow all\n</Location>|g" /etc/cups/cupsd.conf

   Add the server name and browse addess
   replace 192.168.1.255 with your LAN broadcast address
   echo  -e "\nServerName raspberrypi" >> /etc/cups/cupsd.conf
   sed -i -e "s|BrowseAddress|BrowseAddress 192.168.1.255\n#BrowseAddress|" /etc/cups/cupsd.conf

   Restart CUPS
   service cups restart

   Add the pi user to the lpadmin group
   adduser pi lpadmin

   Enable print sharing and remote administration
   cupsctl --share-printers --remote-admin --remote-printers
   sed -i "s|Shared No|Shared Yes|g" /etc/cups/printers.conf
   lpoptions -d PDF -o printer-is-shared=true

   Custom cups-pdf output directory
   PDF storage directory: /storage/pdf
   mkdir -p /storage/pdf
   chown root:lpadmin /storage/pdf
   chmod 777 /storage/pdf

   Append the date to the pdf file name and move to PDF storage directory
   mkdir -p /opt/extremeshok
   cat > /opt/extremeshok/cups-pdf-postprocess <<EOF
   #!/bin/bash
   ## eXtremeSHOK.com
   FILENAME=`basename $1`
   #DIRNAME=`dirname $1`
   DIRNAME="/storage/pdf"
   DATE=`date +"%Y-%m-%d_%H-%M-%S"`
   mv $1 $DIRNAME"/"$DATE"_"$FILENAME
   EOF

   enable cups-pdf post processing
   chmod 777 /opt/extremeshok/cups-pdf-postprocess
   chown root:lpadmin /opt/extremeshok/cups-pdf-postprocess
   sed -i "s|#PostProcessing|PostProcessing /opt/extremeshok/cups-pdf-postprocess|"
   /etc/cups/cups-pdf.conf
   sed -i "s|#PDFVer 1.4|PDFVer 1.5|" /etc/cups/cups-pdf.conf

   enable automatic retrying of failed print jobs
   sed -i -e "s|BrowseAddress|ErrorPolicy retry-job\nJobRetryInterval 30\nBrowseAddress|" /etc/cups/cupsd.conf

   Restart CUPS
   service cups restart

Configure your Printer
   Visit the webinterface: https://192.168.1.111:631/admin/
   admin username: pi
   admin password: raspberry

   Add your printer
   Connect your printer to the usb port of the raspberry pi and power the printer on
   Navigate to Administration -> Find New Printers
   Under Available Printers
   Click Add This Printer
   The Name, Description and Location should be filled in

     Enable: Share This Printer

   Click Continue
   Select your Make and model from the list of specify a PPD file.
   Click Add Printer

   Restart CUPS and avahi
   service cups restart
   service avahi-daemon restart

Using your PDF postscript printer via IPP
   Driver: Microsoft Windows: Manufacturer: “Generic” Printer: “MS Publisher Imagesetter”
   Via IPP
   The preferred way to connect a Windows client to a Linux print server is using IPP
   Use the following as the printers location
     http://192.168.1.111:631/printers/PDF

Using your printer via IPP
   Driver: Windows 10
   Manufacturer: “Generic”
   Printer: “MS Publisher Imagesetter”
   Driver: Windows Vista and 7/8
   Manufacturer: “HP”
   Printer: “HP Color Laserjet 8550 PS” or “HP Color Laserjet 4550 PS”
   Driver: Windows 2000 and XP
   Manufacturer: “HP”
   Printer: “HP Color Laserjet PS”
   Via IPP
   The preferred way to connect a Windows client to a Linux print server is using IPP
   Use the following as the printers location
     http://192.168.1.111:631/printers/printer_name

Optional: Enable Scanning

   Enable scanning support and share a scanner on your network
   Install
   apt-get install -f sane-utils xinetd

   Enable the saned service
   echo -e "\n 192.168.1.0/24" >>  /etc/sane.d/saned.conf
   sed -i "s|RUN=no|RUN=yes|g" /etc/default/saned

   Enable the xinetd sane service
   cat > /etc/xinetd.d/saned <<EOF
   # eXtremeSHOK.com
   service saned
   {
   socket_type = stream
   server = /usr/sbin/saned
   protocol = tcp
   user = saned
   group = scanner
   wait = no
   disable = no
   }
   EOF

   BUG FIX: scanner not working: usbfs: interface 1 claimed by usblp while ‘scanimage’ sets config #1
   echo -e "\nblacklist usblp" >>  /etc/modprobe.d/blacklist.conf

   Reboot
   sync && shutdown -r now

   verify the scanner is supported and listening
   scanimage -L

     device `xerox_mfp:libusb:001:004′ is a Samsung Samsung SCX-4623 Series multi-function peripheral

   cat /etc/services | grep sane

     sane-port 6566/tcp sane saned # SANE network scanner daemon

Optional: phpSANE ( Web-Based Frontend for SANE )

   Note: Simple and low requirements
   Install Requirements
   apt-get install -y libapache2-mod-php5 unzip netpbm gocr imagemagick

   Install phpSANE
   http://sourceforge.net/[33]projects/phpsane/
   mkdir -p /tmp/phpSANE
   cd /tmp/phpSANE
   wget -O phpSANE-0.8.0.zip
   "http://downloads.sourceforge.net/project/phpsane/phpsane/0.8.0/phpSANE-0.8.0.zip?r=http%3A%2F%2Fsour
   ceforge.net%2Fprojects%2Fphpsane%2F&use_mirror=tenet"
   unzip -q phpSANE-0.8.0.zip
   mv /tmp/phpSANE/* /var/www/

   Configure
   sed -i "s|" --jpeg-quality 0"|""|g" /var/www/incl/config.php
   sed -i "s|/opt/bin/gocr|/usr/bin/gocr|g" /var/www/incl/config.php
   sed -i "s|/usr/local/bin/pdfunite|/usr/bin/pdfunite|g" /var/www/incl/config.php
   sed -i "s|Timeout 300|Timeout 900|g" /etc/apache2/apache2.conf
   sed -i "s|max_execution_time = 30|max_execution_time = 900|g" /etc/php5/apache2/php.ini
   sed -i "s|max_input_time = 60|max_input_time = 900|g" /etc/php5/apache2/php.ini

   Set Permissions
   chmod +s /usr/bin/scanimage
   mkdir -p /var/www/tmp && chmod 775 /var/www/tmp
   mkdir -p /var/www/output && chmod 775 /var/www/output
   mkdir -p /var/www/scanners && chmod 775 /var/www/scanners

Optional: PHP-Scanner-Server ( Very advanced Web-Based Frontend for SANE )

   NOTE: will require 1GB+ drive space and a 512MB pi.
   Install Requirements
   apt-get install -y imagemagick sane-utils usbutils libapache2-mod-php5 php5-curl tesseract-ocr tar
   zip php-fpdf libpaper-utils grep sed coreutils

   Add www-data to the lp group
   adduser www-data lp

   Install phpSANE
   https://github.com/GM-Script-Writer-62850/PHP-Scanner-Server
   mkdir -p /tmp/PHP-Scanner-Server
   cd /tmp/PHP-Scanner-Server
   wget -O PHP-Scanner-Server.zip
   "https://github.com/GM-Script-Writer-62850/PHP-Scanner-Server/archive/master.zip"
   unzip -q PHP-Scanner-Server.zip
   mkdir -p /var/www/scanner/
   mv -f /tmp/PHP-Scanner-Server/PHP-Scanner-Server-master/* /var/www/scanner/

   Configure
   sed -i "s|Timeout 300|Timeout 900|g" /etc/apache2/apache2.conf
   sed -i "s|max_execution_time = 30|max_execution_time = 900|g" /etc/php5/apache2/php.ini
   sed -i "s|max_input_time = 60|max_input_time = 900|g" /etc/php5/apache2/php.ini

   Create Directories and Set Permissions
   mkdir -p /var/www/scanner/scans
   chmod 775 /var/www/scanner/scans
   chown www-data /var/www/scanner/scans
   mkdir -p /var/www/scanner/config
   chmod 775 /var/www/scanner/config
   chown www-data /var/www/scanner/config

   Configure
   sed -i "s|Timeout 300|Timeout 900|g" /var/www/scanner/config.ini
   sed -i "s|FreeSpaceWarn   = 2048|FreeSpaceWarn   = 1024|g" /var/www/scanner/config.ini
   sed -i "s|Fortune         = true|Fortune         = false|g" /var/www/scanner/config.ini
   #set rulers to cm instead of inches
   sed -i "s|RulerIncrement  = 25.4|RulerIncrement  = 10|g" /var/www/scanner/config.ini
   sed -i "s|TimeZone        = ''|TimeZone        = 'UTC'|g" /var/www/scanner/config.ini
   sed -i "s|Printer         = 0|Printer         = 1|g" /var/www/scanner/config.ini

   Configure via the web interface
   Visit: http://192.168.1.111/scanner/index.php?page=Config

Using your scanner
   Windows users use TWAIN drivers, which will create a bridge between TWAIN and SANE on the network.
   Download the windows installer : http://sanetwain.ozuzo.net/downloads/setup136.exe
     http://sanetwain.ozuzo.net/#download

   Windows 7 / 8 Support
     Navigate to “C:Program Files (x86)SaneTwain”
     Right click “ScanImage.exe” and select Properties
     Compatibility Tab
     Tick: Run this program in compatibility mode for: Windows XP (Service Pack 3)

   Launch the program “ScanImage”
     Settings -> Connection
     Hostname: 192.168.1.111
     Port: 6566
     Username: PCUSER
     tick: Get list of devices on startup
     Click ok.

Optional: Enable Samba
   We will create a print PDF share and a Scanner share
   Install
   apt-get install -y samba samba-common-bin

   Configure
   cat > /etc/samba/smb.conf <<EOF
   # eXtremeSHOK.com
   ## eXtremeSHOK.com
   [global]
   workgroup = WORKGROUP
   netbios name = RASPBERRYPI
   server string = %h

   wins support = yes

   dns proxy = no
   log file = /var/log/samba/log.%m
   max log size = 1000

   security = share
   share modes = yes

   name resolve order = bcast host lmhost wins

   [pdfs]
   comment = Where PDF's get stored after printing
   path = /storage/pdf
   public = yes
   writable = yes
   browseable = yes
   printable = no
   guest ok = yes
   create mask = 0777
   directory mask = 0777

   [scans]
   comment = Where scans get stored after scanning
   path = /var/www/output
   public = yes
   writable = yes
   browseable = yes
   printable = no
   guest ok = yes
   create mask = 0777
   directory mask = 0777
   EOF

   Restart samba
   service samba restart

Optional: rpisysinfoscript ( Web-Based System Information Frontend)

   Visit the webinterface: http://192.168.1.111/sysinfo.php
   Install Requirements
   apt-get install -y libapache2-mod-php5 lsb-release lsscsi git -y

   Install rpisysinfoscript
   cd /tmp
   wget -O rpisysinfoscript.php
   "https://gist.githubusercontent.com/jvhaarst/4388108/raw/4ae8702effeafb89e583722f5a963ba6c1a4d06a/gis
   tfile1.php"
   mv /tmp/rpisysinfoscript.php /var/www/sysinfo.php

CUPS Command line utilities

   Short Descriptions
     accept
     instructs the printing system to accept print jobs to the specified destinations.
     cancel
     cancels existing print jobs from the print queues.
     cupsaddsmb
     exports printers to the Samba software for use with Windows clients.
     cups-config
     is a Cups program configuration utility.
     cupsctl
     updates or queries the cupsd.conf file for a server.
     cupsd
     is the scheduler for the Common Unix Printing System.
     cupsfilter
     is a front-end to the Cups filter subsystem which allows you to convert a file to a specific
     format.
     cupstestdsc
     tests the conformance of PostScript files.
     cupstestppd
     tests the conformance of PPD files.
     ippfind
     finds internet printing protocol printers.
     ipptool
     sends IPP requests to the specified URI and tests and/or displays the results.
     lp
     submits files for printing or alters a pending job.
     lpadmin
     configures printer and class queues provided by Cups.
     lpc
     provides limited control over printer and class queues provided by Cups.
     lpinfo
     lists the available devices or drivers known to the Cups server.
     lpmove
     moves the specified job to a new destination.
     lpoptions
     displays or sets printer options and defaults.
     lppasswd
     adds, changes or deletes passwords in the Cups digest password file passwd.md5.
     lpq
     shows the current print queue status on the named printer.
     lpr
     submits files for printing.
     lprm
     cancels print jobs that have been queued for printing.
     lpstat
     displays status information about the current classes, jobs, and printers.
     ppdc
     compiles PPDC source files into one or more PPD files.
     ppdhtml
     reads a driver information file and produces a HTML summary page that lists all of the drivers in
     a file and the supported options.
     ppdi
     imports one or more PPD files into a PPD compiler source file.
     ppdmerge
     merges two or more PPD files into a single, multi-language PPD file.
     ppdpo
     extracts UI strings from PPDC source files and updates either a GNU gettext or Mac OS X strings
     format message catalog source file for translation.
     reject
     instructs the printing system to reject print jobs to the specified destinations.
     libcups.so
     contains the Cups API functions.


***     
    1. avilleret
       avilleret says:
       [43]June 12, 2014 at 8:53 am
       Thanks for this tutorial !
       Since the RPi is not so much powerful, it may take a long to process page even more if there are
       pictures or rasterised text.
       One solution for this is using a RAW queue on the CUPS server side and process the file to print
       on the client side.
       I can do that with my Windows client (sic) but not with Ubuntu.
       Do you know how to setup a RAW queue and use the Ubuntu client’s driver to process file then send
       those to RPi for direct printing ?
       best

***
    2. BH
       BH says:
       [48]August 14, 2014 at 1:48 am
       This solved an issue with permissions phpsane had on my system:
       root@raspberry:/var/www# chgrp www-data tmp output/ scanners/

***
    3. Antoine
       [50]Antoine says:
       [51]October 15, 2014 at 10:48 am
       hello , thanks for this tutorial, please let me show you to this great PHP Scanner Server
       : https://github.com/GM-Script-Writer-62850/PHP-Scanner-Server.git It’s a lot more powerful and
       beautiful than PHPSane. Cheers a
       [52]Reply
          + admin
            [53]admin says:
            [54]October 28, 2014 at 2:05 am
            Guide updated with PHP-Scanner-Server , thanks

***
    4. Antoine
       [56]Antoine says:
       [57]October 15, 2014 at 6:45 pm
       FYI, the links in rpisysinfoscript don’t work anymore,
       also there is a strange first line in Enable AirPrint code section.
       🙂
       [58]Reply
          + admin
            [59]admin says:
            [60]October 28, 2014 at 12:58 am
            fixed and updated, thanks

***
    5. Jari
       Jari says:
       [62]November 6, 2014 at 3:28 pm
       Dear admin,
       I’m unable to get the Postprocessing script to work. I have tried other scripts, that simply
       write some text to a file. However, it seems like the script is never actually called. The
       PDF-output files are created in the /var/spool/cups-pdf/ANONYMOUS correctly, but are not
       processed any further.
       Do you have any suggestions?
       Regards,
       Jari

***
    6. Are S
       Are S says:
       [64]June 18, 2015 at 1:12 pm
       Hi Admin
       You had a awesome tutorial for optimizing Raspberry, but I cant seem to find it anymore. It
       worked very well. Is this tutorial somewhere to be found?

       Regards
       Are S
       [65]Reply
          + extremeshok
            [66]extremeshok says:
            [67]June 18, 2015 at 2:32 pm
            I’m busy writing a new one ;-P

***
    7. Erik
       Erik says:
       [69]October 23, 2015 at 3:49 pm
       Great tutorial! For the latest Jessie Apache version, pages are expected in the /var/www/html
       directory. If your setup is followed, they don’t get served and you see only a 404. Applies as
       well to the sysinfo.php.
       Also, using not only useradd www-data lp, but also useradd www-data scanner resolves the
       permission issues.
       PS: Still busy writing the updated Raspberry optimization article? Would love to see it!
       [70]Reply
          + extremeshok
            [71]extremeshok says:
            [72]December 14, 2015 at 9:38 pm
            Yes, looking at writing a deployable script todo it all for you ;-P

***
    8. Phillip
       Phillip says:
       [74]December 24, 2015 at 6:06 am
       Hi,
       Awesome tutorial, but could I query the “Allow LAN access to CUPS” section, the code of sed –i
       “s||Allow alln|g” /etc/cups/cupsd.conf fails for me, it seems that the regex is missing what it’s
       to replace with “Allow alln” ?
       [75]Reply
          + extremeshok
            [76]extremeshok says:
            [77]April 11, 2016 at 3:19 pm
            original sed got mangled, script corrected

***
    9. Bassebus
       Bassebus says:
       [79]January 22, 2016 at 10:10 am
       When printing from iphone/ios, to cups-pdf, documents get’s treated as “ANONYMOUS”. (They are
       stored in the ‘AnonDirName’ directory in the config).
       It seems like the POSTPROCESSING-script doesnt run then?

***
   10. brain_recall
       brain_recall says:
       [81]August 21, 2016 at 7:28 pm
       I have phpSANE working mostly, but I’m running into one issue I can’t seem to resolve.
       I want to change the output directory of phpSANE to store on my NAS drive directly, so I changed
       the output directory in config.php to my auto-mounted network share (mounted in fstab). However,
       the output doesn’t appear in that folder. phpSANE can view files in that folder, and if I copy
       the command and run it from the terminal manually, the output will be written. Just phpSANE can’t
       write to that folder. I’m guessing this is some kind of permission issue; does anyone know what
       the problem could be?

       Otherwise, awesome article!
       [82]Reply
          + extremeshok
            [83]extremeshok says:
            [84]February 6, 2017 at 12:27 am
            try chmod 775 or 777 on the dir.

***
   11. brain_recall
       brain_recall says:
       [86]August 23, 2016 at 2:09 am
       For now I have a workaround using unison. I created a bash script that runs in loop, every 5
       seconds is calls unison between the /var/www/html/output folder and the mounted network share
       directory. I have the script fire up at reboot with cron. The scans get stored to both the SD
       card first, unison then copies it over to the NAS. Eventually I would delete the scan from the
       NAS, which unison would delete from the SD card. It’s a hack that I’m happy to live with.

***
   12. Alex
       Alex says:
       [88]March 18, 2017 at 7:59 am
       Hello. Thank you very much for this guide! I have several problems getting Sane working:
       “scanimage -L” and “cat /etc/services | grep sane” work and return the desired answers.
       But:
       I can’t get acces via SaneTwain or SaneWinDS (Firewall OFF).
       what I wonder is that this folder does not exist: sed -i “s|RUN=no|RUN=yes|g” /etc/default/saned
       I installed PHP-Scanner-Server which is not accessable via browser
       Thank you very much for helping!

***
   13. Big D
       Big D says:
       [90]July 20, 2017 at 2:03 am
       Running sane-find-scanner is bringing up my Scanner, but when I run scanimage -L I am getting the
       following error.
       [bjnp] create_broadcast_socket: bind socket to locak address failed – Cannot assign requested
       address
       Followed the instructions to the T, any idea why I am getting this error?
