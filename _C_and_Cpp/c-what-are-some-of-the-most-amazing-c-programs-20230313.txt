filename: c_what-are-some-of-the-most-amazing-c-programs_20230313.txt
https://programmersworld.quora.com/https-www-quora-com-What-are-some-of-the-most-amazing-C-programs-answer-Navin-Kabra

What are some of the most amazing C programs?
Originally Answered: What is the most amazing C program?

What follows is an actual C program written by Brian Westley aka Merlyn LeRoy. It actually compiles, and if
you run it with a numeric argument, it does a picking the daisy simulation ("x loves me, x loves me not, etc.).

But to really appreciate the program, you need to read the code. Read each block as one letter from Charlie
to Charlotte or vice versa.

Here goes:

char*lie; 
 
	double time, me= !0XFACE, 
 
	not; int rested,   get, out; 
 
	main(ly, die) char ly, **die ;{
 
		signed char lotte, 
 
 
dear; (char)lotte--; 
 
	for(get= !me;; not){ 
 
	1s -  out & out ;lie;{ 
 
	char lotte, my= dear, 
 
	**let= !!me *!not+ ++die; 
 
		(char*)(lie= 
 
 
"The gloves are OFF this time, I detest you, snot\n\0sed GEEK!"); 
 
	do {not= *lie++ & 0xF00L* !me; 
 
	#define love (char*)lie - 
 
	love 1s *!(not= atoi(let 
 
	[get -me? 
 
		(char)lotte- 
 
 
(char)lotte: my- *love - 
 
	'I'  -	*love -  'U' - 
 
	'I'  -	(long)	- 4 - 'U' ])- !! 
 
	(time  =out=  'a'));} while( my - dear 
 
	&& 'I'-1l  -get-  'a'); break;}} 
 
		(char)*lie++; 
 
 
(char)*lie++, (char)*lie++; hell:0, (char)*lie; 
 
	get *out* (short)ly   -0-'R'-  get- 'a'^rested; 
 
	do {auto*eroticism, 
 
	that; puts(*( out 
 
		- 'c' 
 
-('P'-'S') +die+ -2 ));}while(!"you're at it"); 
 
 
for (*((char*)&lotte)^= 
 
	(char)lotte; (love ly) [(char)++lotte+ 
 
	!!0xBABE];){ if ('I' -lie[ 2 +(char)lotte]){ 'I'-1l ***die; } 
 
	else{ if ('I' * get *out* ('I'-1l **die[ 2 ])) *((char*)&lotte) -= 
 
	'4' - ('I'-1l); not; for(get=! 
 
 
get; !out; (char)*lie  &  0xD0- !not) return!! 
 
	(char)lotte;} 
 
 
(char)lotte; 
 
	do{ not* putchar(lie [out 
 
	*!not* !!me +(char)lotte]); 
 
	not; for(;!'a';);}while( 
 
		love (char*)lie);{ 
 
 
register this; switch( (char)lie 
 
	[(char)lotte] -1s *!out) { 
 
	char*les, get= 0xFF, my; case' ': 
 
	*((char*)&lotte) += 15; !not +(char)*lie*'s'; 
 
	this +1s+ not; default: 0xF +(char*)lie;}}} 
 
	get - !out; 
 
	if (not--) 
 
	goto hell; 
 
		exit( (char)lotte);} 

Note: there are four uses of '1s' in the program. '1s' stands for 1 short (just like 1l stands for 1 long).
Depending upon your compiler, you might have to replace the 1s with 1 to get it to compile and run.

This is from the Obfuscated C Code contest. Here are some great judges comments about this program:

	This is a good counter-example to peoples' complaints that C doesn't have an "English-like" syntax.

and:

	My personal favorite lint complaint is "warning: eroticism unused in function main".

	Also obviously, (char)lotte and (char*)lie are incompatible types...



---

