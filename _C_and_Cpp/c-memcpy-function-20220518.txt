filename: c_function_memcpy_20220518.txt
https://www.tutorialspoint.com/c_standard_library/c_function_memcpy.htm

C library function - memcpy()

Description
   The C library function void *memcpy(void *dest, const void *src, size_t n) copies n characters from
   memory area src to memory area dest.

Declaration
   Following is the declaration for memcpy() function.
void *memcpy(void *dest, const void * src, size_t n)

Parameters
	* dest − This is pointer to the destination array where the content is to be copied, type-casted to
	a pointer of type void*.
	* src − This is pointer to the source of data to be copied, type-casted to a pointer of type void*.
	* n − This is the number of bytes to be copied.

Return Value
   This function returns a pointer to destination, which is str1.

Example
   The following example shows the usage of memcpy() function.

#include <stdio.h>
#include <string.h>

int main () {
	const char src[50] = "http://www.tutorialspoint.com";
	char dest[50];
	strcpy(dest, "Heloooo!!");
	printf("Before memcpy dest = %s\n", dest);
	memcpy(dest, src, strlen(src)+1);
	printf("After memcpy dest = %s\n", dest);

	return(0);
}

   Let us compile and run the above program that will produce the following result −
Before memcpy dest = Heloooo!!
After memcpy dest = http://www.tutorialspoint.com



---
https://www.techonthenet.com/c_language/standard_library_functions/string_h/memcpy.php

C Language: memcpy function
(Copy Memory Block)

   In the C Programming Language, the memcpy function copies n characters from the object pointed to by
   s2 into the object pointed to by s1. It returns a pointer to the destination.

   The memcpy function may not work if the objects overlap.

Syntax
   The syntax for the memcpy function in the C Language is:
void *memcpy(void *s1, const void *s2, size_t n);

Parameters or Arguments

   s1
		An array where s2 will be copied to.

   s2
		The string to be copied.

   n
		The number of characters to copy.

Returns
   The memcpy function returns s1.

Required Header
   In the C Language, the required header for the memcpy function is:
#include <string.h>

Applies To
   In the C Language, the memcpy function can be used in the following versions:
	 * ANSI/ISO 9899-1990

memcpy Example

   Let's look at an example to see how you would use the memcpy function in C program:

/* Example using memcpy by TechOnTheNet.com */

#include <stdio.h>
#include <string.h>

int main(int argc, const char * argv[]) {
	/* Create a place to store our result */
	int result;

	/* Create two arrays to hold our data */
	char original[50];
	char newcopy[50];

	/* Copy a string into the original array */
	strcpy(original, "C memcpy at TechOnTheNet.com");

	/* Copy the first 24 characters of the original
	array into the newcopy array */
	result = memcpy(newcopy, original, 24);

	/* Set the character at position 24 to a null (char 0)
	in the newcopy array to ensure the string is terminated
	(This is important since memcpy does not initialize memory
	and printf expects a null at the end of a string) */
	newcopy[24] = '\0';

	/* Display the contents of the new copy */
	printf("%s\n", newcopy);

	return 0;
}

   When compiled and run, this application will output:
C memcpy at TechOnTheNet

Similar Functions
   Other C functions that are similar to the memcpy function:
	* memmove function <string.h>
	* strcpy function <string.h>
	* strncpy function <string.h>


---

