filename: c-program-to-compare-two-strings-without-using-strcmp-function-20250812.txt
https://www.geeksforgeeks.org/c/c-program-to-compare-two-strings-without-using-strcmp-function/

C Program to Compare Two Strings Without Using strcmp()
05 Dec, 2024

   String comparison refers to the process of comparing two strings to check if they are equal or
   determine their lexicographical order. C provides the strcmp() library function to compare two
   strings but in this article, we will learn how to compare two strings without using strcmp()
   function.

   The most straightforward method to compare two strings without using strcmp() function is by using a
   loop to compare the difference between ASCII values of each character in corresponding position.
   Let's take a look at example:

#include <stdio.h>
#include <string.h>

int comp(char *s1, char *s2) {

	// Compare characters one by one
	while (*s1 && !(*s1 - *s2)) {
		s1++;
		s2++;
	}

	// Returning 0 if strings are equal
	// +ve value if s1 is greater than s2
	// -ve value if s1 is smaller than s2
	return *s1 - *s2;
}

int main() {
	char s1[] = "Hello";
	char s2[] = "Hello";

	// Comparing s1 and s2
	if(!comp(s1, s2))
		printf("Identical strings");
	else
		printf("Not Equal");

	return 0;
}

   Output
Identical strings

   Explanation: This method iterates through both strings simultaneously, compares each character and
   returns the difference between the last compared characters. If the last compared character differs,
   it returns non-zero value. If they are same, we reached the null terminator '\0' in both strings, it
   returns 0.

   There is one more method using which we can compare two strings:

Using Relational Operators
   The two strings can also be compared by using relational operators without finding the difference
   between the ASCII values.

   C++
#include <stdio.h>

int comp(char s1[], char s2[]) {
	int i = 0;

	// Compare characters one by one to determine
	// lexicographic order
	while (s1[i] != '\0' && s2[i] != '\0') {
		if (s1[i] != s2[i])
			return (s1[i] > s2[i]) ? 1 : -1;
		i++;
	}

	// If one string ends before the other
	if (s1[i] == '\0' && s2[i] == '\0') {
		return 0; // Strings are equal
	}
	return (s1[i] == '\0') ? -1 : 1;
}

int main() {
	char s1[] = "Hello";
	char s2[] = "Hello";

	// Comparing s1 and s2
	if (comp(s1, s2) == 0)
		printf("Equal");
	else
		printf("Not Equal");

	return 0;
}

   Output
Equal


---

