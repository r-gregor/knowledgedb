http://kizzx2.com/blog/index.php/2009/02/08/cygwinexim-setting-up-a-local-smtp-server-for-testing-email-applications/

cygwin+exim: setting up a local SMTP server for testing email applications
Published on February 8, 2009 in geek stuffs. 6 Comments
Tags: cygwin, exim, smtp, testing email, unit testing.

This is mainly a ref­er­ence for myself in case I forget how to do it 
later, as it took me a good deal of time to figure out. 

Situation I want to unit test appli­ca­tions that send emails. 
Obvi­ously I don’t want to be open­ing a dozen of real email 
accounts just to test this thing out. Nat­u­rally I would want to 
install an SMTP/POP3/IMAP server on Win­dows, and there is one free 
(open source) option that is quite promis­ing – hMailServer. 
How­ever, it still involves 2 (quite major) incon­ve­niences for my 
use case: 

I have to go through the con­fig­u­ra­tion screens to create new 
users. i.e. if I want to send email to alice@localhost I’d have to 
create the user account alice manually I have to use an email client 
(like Out­look Express) to con­nect to the local POP3 server to view 
the emails. This seems redun­dant to me, since the files are already 
stored in my disks, why can’t I just view them? The Solution Then I 
came across exim on cygwin. exim is (as it claims to be) a vast 
improve­ment over the good ol’ send­mail. So I gave it a shot – 
man, that was awe­some! I can now direct my appli­ca­tion to send to 
arbi­trary address like alice@mail.local, foobar@mail.local and I can 
view the results imme­di­ately in a text file, solv­ing the two 
prob­lems men­tioned above. Here’s what I did: 

Install exim using cygwin installer Run exim-config Edit /etc/exim.conf 
Uncom­ment primary_hostname and set it to mail.local Edit the router 
localuser, com­ment out the line check_local_user (If you don’t know 
what that means, just search for the line localuser:) Edit 
%WINDIR%\system32\drivers\etc\hosts, add the line 

1
127.0.0.1    mail.local

Finally, reboot the exim service

And there you go! You can now send mail to *@mail.local. To view the 
mail, go to /var/spool/mail which con­tains all the mail in text files. 
A simple tail -f /var/spool/mail/foobar can mon­i­tor the mail sent to 
foobar@mail.local 

A simple test to make sure everything’s working:

$ exim -bt foobar@mail.local
foobar@mail.local
  router = localuser, transport = local_delivery
# If something is wrong in your config, it would say "Unrouteable address"
 
# Now let's try sending an email
$ exim -v -odf foobar@mail.local
Hello World!
.
LOG: MAIN
  <= Chris@mail.local U=Chris P=local S=296
delivering KEQKED-0002RS-A7
LOG: MAIN
  => foobar <foobar@mail.local> R=localuser T=local_delivery
LOG: MAIN
  Completed
 
# Cool, let's see if it really delivered
$ tail /var/spool/mail/foobar
Received: from Chris by mail.local with local (Exim 4.69)
        (envelope-from <Chris@mail.local>)
        id KEQKED-0002RS-A7
        for foobar@mail.local; Sun, 08 Feb 2009 15:20:39 +0800
Message-Id: <EKEQKED-0002RS-A7@mail.local>
From: Chris <Chris@mail.local>
Date: Sun, 08 Feb 2009 15:20:39 +0800
 
Hello World


6 Responses to “cygwin+exim: setting up a local SMTP server for 
testing email applications” Peter Štibraný July 17, 2009 at 2:45 am 
Nice. You men­tion Eclipse here and there, so I assume you also do 
stuff in Java. Here is one useful library for unit-​testing send­ing 
emails via SMTP: 
http://​code.​google.​com/​p​/​s​u​b​e​t​h​a​s 
​m​t​p​/​w​i​k​i​/​Wiser It acts as SMTP server, and 
let’s you check received mes­sages in Java code. 

kiZZ kiZZ July 17, 2009 at 1:03 pm Interesting. Thanks for the link! 

Mahesh February 17, 2010 at 10:06 pm How do i use exim to send email 
with attachment? 

kiZZ kiZZ February 18, 2010 at 11:04 am @Mahesh: 

I don’t know how you can do it from the com­mand line. You 
prob­a­bly need to use a proper MUA for that, try 

1 mutt (avail­able from Cygwin installer). Or you could achieve the 
same thing with a Perl or Ruby script (more complicated) jb August 30, 
2010 at 8:28 am @Mahesh: 

To send a non-​trivial mail with exim, first format it to a proper 
rfc822/rfc2822/rfc5322 format mail with the attach­ments done 
accord­ing to mime (lots of other tools to do that, take your pick), 
then pass it as input to exim some­thing like this: 

exim -some-options-here-forgot-which < your-message.rfc822 

Exim would do the rest 

Marco April 29, 2011 at 1:15 am Thanks man. 5/5 

-----------------------------------------------------------------------

http://infrablue.tripod.com/cygwin3.html

Useful Configuration of Cygwin, Part 3: Mail

Setting up Exim

Cygwin now comes with the popular Exim mail transport agent. The Exim 
package comes with a very simple setup script which can be run from the 
console: 

  exim-config  

This is enough to set Exim up and install and run the service. It will 
work fine for delivering mail to local users on the system . Iam still 
trying to figure you how to get it to do SMTP authorization with a 
smarthost. Most people will need this since they have an account with an 
ISP whose mail server they authorize with and send outgoing mail 
through. Its a shame that there are no examples nor documentation with 
the Exim Cygwin package on how to do this. 

Setting up Mutt

Mutt is probably the most widely-used console-based e-mail application. 
It is highly configurable and powerful. Here is a skeletal ~/.muttrc 
that you can use to get started (note: this skeletal .muttrc will also 
work fine on Linux systems): 


set folder=/var/spool/mail
set spoolfile=/var/spool/mail/$USER
set record=+sent
set editor="vim -c 'set textwidth=72'"
# Sort mailboxes according to date received in reverse order (newest messages)
# at the top
set sort=reverse-date
set arrow_cursor=no
set move=no
set markers=no
set askbcc=yes
set menu_scroll=yes
set pager_stop
bind pager <up> previous-line
bind pager <down> next-line
set resolve=no
mailboxes ! +mutt-users +exim-users
folder-hook mutt-users 'set sort=threads'
folder-hook mutt-users 'set sort_aux=reverse-date-received'
folder-hook exim-users 'set sort=threads'
folder-hook exim-users 'set sort_aux=reverse-date-received'
alias mutt-users Mutt User List <mutt-users@mutt.org>
lists mutt-users exim-users
color normal default black
color hdrdefault red default
color quoted brightblue default
color signature red default
color indicator white blue
color error brightred default
color status yellow blue
color tree magenta default # the thread tree in the index menu
color tilde magenta default
color message brightcyan default
color markers brightcyan default
color attachment brightmagenta default
color search default green # how to hilite search patterns in the pager
color header brightred default ^(From|Subject):
color body magenta default "(ftp|http)://[^ ]+" # point out URLs
color body magenta default [-a-z_0-9.]+@[-a-z_0-9.]+ # e-mail addresses
color underline brightgreen default


Setting up procmail

Procmail is a powerful tool used to filter incoming e-mail. You set up 
rules in your ~/.procmailrc which filter incoming mail accordingly. Here 
is a basic sample ~/.procmailrc: 

#PATH=$HOME/bin:/usr/bin:/bin:/usr/local/bin:
MAILDIR=$HOME/mail
DEFAULT=$MAILDIR/inbox
LOGFILE=$MAILDIR/procmail.log
LOCKFILE=$HOME/.lockmail
VERBOSE=yes

:0:
* ^(Cc|To).*cygwin*@cygwin.com
cygwin

This simple filter will process incoming mail that is To: or Cc: to the 
cygwin mailing list into the cygwin folder. All other mail will by 
default go to ~/mail/inbox. Note that if you use this setup you will 
want to change the following lines in your ~/.muttrc: 


set folder=/var/spool/mail
set spoolfile=/var/spool/mail/$USER

to this:

set folder=~/mail
set spoolfile=~/mail/inbox


Setting up fetchmail

Fetchmail is used to poll mail servers and retrieve mail. The 
configuration file is ~/.fetchmailrc. Here is a simple example: 

defaults
mda "/usr/bin/procmail -f %F -d %T"
set no bouncemail
poll 'pop.isp.com'
protocol pop3
username 'username@isp.com'
password 'mypass'
is localuser here

Replace 'localuser' with your local user account and the other logon 
credentials accordingly. 

References:
"Mutt on Cygwin"; http://www.geocities.com/win32mutt/cygwin.html
"How to install a SMTP server (called cygwin-exim) on a Windows 2000/XP box"; http://pigtail.net/LRP/cygwin-exim.html
"41.1. Sending mail to a smart host"; http://www.exim.org/exim-html-4.20/doc/html/spec_41.html#IX2284
"3. ROUTING TO REMOTE HOSTS"; http://www.exim.org/exim-html-4.20/doc/html/FAQ_3.html#TOC115
"Mutt on Cygwin, Setup sSMTP"; http://www.geocities.com/win32mutt/cygwin-ssmtp.html

-----------------------------------------------------------------------

http://unix.stackexchange.com/questions/36982/can-i-set-up-system-mail-to-use-an-external-smtp-server

Can I set up system mail to use an external SMTP server?

Is it possible to set up system mail on a linux box to be sent via a 
different smtp server - maybe even with authentication? If so, how do I 
do this? 

If that's unclear, let give an example. If I'm at the command line and 
type: 

cat body.txt | mail -s "just a test" myfriend@hisdomain.com
is it possible to have that be sent via an external SMTP server, like G-mail ?

I'm not looking for "a way to send mail from gmail from the command 
line" but rather an option to configure the entire system to use a 
specific SMTP server, or possibly one account on an SMTP server (maybe 
overriding the from address). 

linux smtp email
shareimprove this question
asked Apr 20 '12 at 21:46

cwd
2,10842156
It's the way most machines used to be set up, in fact. Do you have any 
particular MTA in mind? If not (this includes “what is an MTA?”), 
what distribution are you running? – Gilles Apr 20 '12 at 23:52 I'm on 
Ubuntu 10.04, found this article on setting up ssmtp, seems like it 
might work. can you elaborate more on how most machines are set up? – 
cwd Apr 21 '12 at 0:55 

4 Answers activeoldestvotes
up vote
2
down vote
accepted
I found much simpler the use of sSMTP

In debian systems:

apt-get install ssmtp
Then edit the configuration file in /etc/ssmtp/ssmtp.conf

A sample configuration to use your gmail for sending e-mails:

# root is the person who gets all mail for userids < 1000
root=your@email.com

# Here is the gmail configuration (or change it to your private smtp server)
mailhub=smtp.gmail.com:587
AuthUser=your@gmail.com
AuthPass=yourGmailPass
UseTLS=YES
UseSTARTTLS=YES
shareimprove this answer
answered Apr 22 '12 at 14:27

Vangelis Tasoulas
1456
1	  
as a note to others you may have to install ssmtp and then mailutils. i 
think mailutils sets up the mail command and symlinks to ssmtp so you 
can use the regular mail syntax :) – cwd Aug 23 '12 at 14:24 


up vote
3
down vote
For postfix:

Add the IP for your external mail-relay to /etc/hosts and add an alias mailrelay to it.
Modify the postfix configuration:

relayhost = [mailrelay]
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/smtp_auth
smtp_sasl_security_options = noanonymous
Edit /etc/postfix/smtp_auth

mailrelay login:password
Convert into hash-format

postmap /etc/postfix/smtp_auth

No need to say that only root should be able to read this... chmod u=r,og=-

shareimprove this answer
edited Apr 21 '12 at 23:52

Gilles
138k13157359	
answered Apr 21 '12 at 20:16

Nils
5,699527
@Gilles Thanks for the sasl/auth edit. – Nils Mar 12 at 11:32
up vote
2
down vote
My favorite is the email (github) client. It's really simple, no complex 
configuration needed, no dependencies needed. And you can specify 
smtp-server argument via command line, which means it's more suitable 
for scripting. The only pity is that most linux distributions does not 
contains this tool, so you need to compile it yourself. 


Quotes from email projet on github

Q: What is 'email' ?

A: 'email' is a program I designed that will send email via the command 
line to remote smtp servers or use 'sendmail' internally, and fully 
interact with GNUPG to encrypt and sign your e-mails, so you decide to 
do so... You can get GNUPG at: http://www.gnupg.org 


Thank cygwin for let me known this useful email client.

Compile and install
./configure
make
./install.sh --version 3.1.3 --prefix /usr --mandir /usr/share/man --sysconfdir /etc
Command line options of email
$ email --help
Options information is as follows
email [options] recipient1,recipient2,...

    -h, -help module          Print this message or specify one of the below options
    -V, -verbose              Display mailing progress.
    -f, -from-addr            Senders mail address
    -n, -from-name            Senders name
    -b, -blank-mail           Allows you to send a blank email
    -e, -encrypt              Encrypt the e-mail for first recipient before sending
    -s, -subject subject      Subject of message
    -r, -smtp-server server   Specify a temporary SMTP server for sending
    -p, -smtp-port port       Specify the SMTP port to connect to
    -a, -attach file          Attach file and base64 encode
    -c, -conf-file file       Path to non-default configuration file
    -t, -check-config         Simply parse the email.conf file for errors
    -x, -timeout              Set socket timeout.
        -cc email,email,...   Copy recipients
        -bcc email,email,...  Blind Copy recipients
        -sign                 Sign the email with GPG
        -html                 Send message in HTML format ( Make your own HTML! )
        -tls                  Use TLS/SSL
    -m, -smtp-auth type       Set the SMTP AUTH type (plain or login)
    -u, -smtp-user username   Specify your username for SMTP AUTH
    -i, -smtp-pass password   Specify your password for SMTP AUTH
    -g, -gpg-pass             Specify your password for GPG
    -H, -header string        Add header (can be used multiple times)
        -high-priority        Send the email with high priority
        -no-encoding          Don't use UTF-8 encoding

Sample usage
Simple mail with SMTP server specified
echo "mail body" | email -subject "unix.stackexchange.com Q36982" -from-name LiuYan刘研 -from-addr liuyan@domain.com -smtp-server smtp.domain.com -smtp-port 25 cwd@your-domain.com your-friends@his-domain.com
HTML mail
echo "<h1>header</h1><p>paragraph</p>" | email -html -subject "unix.stackexchange.com Q36982 HTML mail" cwd@your-domain.com
Attachment(s)
echo "see the attachment(s)" | email -subject "This is my email.conf file" -attach /etc/email/email.conf -attach cwd@your-domain.com
shareimprove this answer
answered Aug 21 '12 at 7:35

LiuYan 刘研
563412
Thanks I'll take a look and maybe give it a try – cwd Aug 23 '12 at 14:23
up vote
1
down vote
Set up a local exim SMTP server by following the instructions on this 
page, but choose the "mail sent by smarthost; no local mail" option from 
the first screen of the Exim configuration. This will set up an SMTP 
server on your box that can receive mail from the "mail" or "mailx" 
commands and will forward all messages to the smarthost (a Gmail server 
in your case) for delivery. 

To send outgoing email through a Gmail server you will need to set up 
TLS support for Exim, which is not trivial. This Howto gives some 
explanation and here's a link with further explanation specific to 
Gmail. You should allow yourself several hours to get this working. I 
would suggest starting by sending email from your box to a TLS enabled 
SMTP server to which you have root access so that you can debug your 
Exim TLS configuration from both sides before trying to send though a 
Gmail server. Since the communication is encrypted, you wont be able to 
use tools like tcpdump to analyze the protocol on the line. 

-----------------------------------------------------------------------

