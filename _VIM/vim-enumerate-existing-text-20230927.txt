filename: vim_enumerate-existing-text_20230927.txt
https://stackoverflow.com/questions/32052756/enumerate-existing-text-in-vim-make-numbered-list-out-of-existing-text

Enumerate existing text in Vim (make numbered list out of existing text)

   I have a source document with the following text
Here is a bunch of text
...
Collect underpants
???
Profit!
...
More text

   I would like to visually select the middle three lines and insert numbers in front of them:
Here is a bunch of text
...
1. Collect underpants
2. ???
3. Profit!
...
More text

   All the solutions I found either put the numbers on their own new lines or prepended the
   actual line of the file.

***
   It makes for a good macro.
    1. Add the first number to your line, and put your cursor back at the beginning.
    2. Start a macro with qq (or q<any letter>)
    3. Copy the number with yf<space> (yank find )
    4. Move down a line with j
    5. Paste your yank with P
    6. Move back to the beginning of the line with 0
    7. Increment the number with Ctrl-a
    8. Back to the beginning again with 0 (incrementing positions you at the end of the number)
    9. End the macro by typing q again
   10. Play the macro with @q (or @<the letter you picked>)
   11. Replay the macro as many times as you want with <number>@@ (@@ replays the last macro)
   12. Profit!

***
   To apply enumeration for all lines:
:let i=1 | g/^/s//\=i.'. '/ | let i=i+1

   To enumerate only selected lines:
:let i=1 | '<,'>g/^/s//\=i.'. '/ | let i=i+1

***
   Set non recursive mapping with following command and type ,enum in command mode when cursor is inside
   the lines you are going to enumerate.
    :nn ,enum {j<C-v>}kI0. <Esc>vipg<C-a>

***
   If you have a paragraph (:help paragraph) you can select it (look at :help object-select).
   Suppose each new line in the paragraph needs to be enumerated.
     * { jump to the beginning of current paragraph
     * j skip blank line, move one line down
     * <C-v> emulates Ctrl-v, turns on Visual mode
     * } jump to the end of current paragraph
     * k skip blank line, move one line up

   required region selected, we can make multi row edit:
     * I go into Insert mode and place cursor in the beginning of each line
     * 0. is added in the beginning of each line
     * <Esc> to change mode back to Normal

   You should get list prepended with zeros. If you already have such, you can omit this part.
     * vip select inner paragraph (list prepended with "0. ")
     * g<C-a> does the magic

   I have found it easier to enumerate with zeroes instead of omitting first line of the list to
   enumerate as said in documentation.

   Note: personally I have no mappings. It is easier to remember what g <C-a> does and use it directly.
   Answer above describes usage of pure <C-a> which requires you to manually count whatever, on the
   other hand g <C-a> can increment numbers with given value (aka step) and have it's "internal
   counter".


---

