filename: howto_vim-tmux-powerline-install_01_20161115.txt
https://github.com/tiev/tiev/wiki/Install-Vim---Tmux---Powerline-(Ubuntu-14.04-Trusty)

Install Vim Tmux Powerline (Ubuntu 14.04 Trusty)

   Follow these steps to install vim and tmux, then add powerline plugin to make vim and tmux statusline
   beautiful

Vim
	sudo apt-get install vim

Using [37]gmarik/Vundle.vim

   Follow the installation steps.
   My .vimrc with list of reference plugins is at [*].vimrc

Tmux
	sudo apt-get install tmux

   I use a customized shortcuts of tmux in this configuration file [**].tmux.conf

Powerline - [40]Lokaltog/powerline

Install plugin
Install python-pip and git
	sudo apt-get install python-pip git

* Per user:
	pip install --user git+git://github.com/Lokaltog/powerline

Add ~/.local/bin to $PATH by modifying ~/.profile with favorite editor
	vim ~/.profile

	and add following lines at the end of it:
	if [ -d "$HOME/.local/bin" ]; then
	    PATH="$HOME/.local/bin:$PATH"
	fi

* System wide:
In terminal run:
	su -c 'pip install git+git://github.com/Lokaltog/powerline'

Install fonts for powerline
* Fontconfig (recommended)
+ Per user:
Run the following commands in terminal:
	wget https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf \
	https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
	mkdir -p ~/.fonts/ && mv PowerlineSymbols.otf ~/.fonts/
	fc-cache -vf ~/.fonts
	mkdir -p ~/.config/fontconfig/conf.d/ && mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/

+ System wide:
Run the following commands:
	wget https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf \
	https://github.com/Lokaltog/p	owerline/raw/develop/font/10-powerline-symbols.conf
	sudo mv PowerlineSymbols.otf /usr/share/fonts/
	sudo fc-cache -vf
	sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/

* Patched font:
	Not recommended, so refer to powerline documentation

Config powerline for vim and tmux
First fix the terminal to support 256color. Add this line to end of ~/.bashrc file:
	export TERM="screen-256color"

* Vim statusline:
Add following lines to ~/.vimrc file:
	set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/

	" Always show statusline
	set laststatus=2

	" Use 256 colours (Use this setting only if your terminal supports 256 colours)
	set t_Co=256


* Tmux statusline:
Add following lines to your ~/.tmux.conf file:
	source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf
	set-option -g default-terminal "screen-256color"

Now we has a beautiful statusline for coding enviroment

Uninstall
In case of uninstalling, run following commands in terminal:
* Per user:
	pip uninstall powerline

* System wide:
	su -c 'pip uninstall powerline'


---
[*] .vimrc


"START Vundle session
set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'bling/vim-airline' " status line for vim
Plugin 'edkolev/tmuxline.vim' " tmuxline
Plugin 'skammer/vim-css-color' " preview css color while editing
Plugin 'rking/ag.vim' " search in many files # require the_silver_searcher
Plugin 'docunext/closetag.vim' " Auto close HTML tags
Plugin 'kien/ctrlp.vim' " quick open file
Plugin 'vim-scripts/dbext.vim' " quick run sql script
Plugin 'Raimondi/delimitMate' " auto close brackets, parenthesis,...
Plugin 'nathanaelkane/vim-indent-guides' " show indent lines
Plugin 'mattn/gist-vim' " quick upload code snippet on github
Plugin 'scrooloose/nerdcommenter' " quick comment
Plugin 'scrooloose/nerdtree' " folder tree
Plugin 'aklt/plantuml-syntax' " syntax for plant-uml
Plugin 'vim-scripts/SearchComplete' " tab completion of words inside of a search ('/')
Plugin 'Valloric/YouCompleteMe' " Auto-complete in INSERT mode
"Plugin 'ervandew/supertab' " auto-complete with tab key
Plugin 'scrooloose/syntastic' " check syntax of many file types
Plugin 'godlygeek/tabular' " tab tools
Plugin 'majutsushi/tagbar' " side bar list all tags with hierarchy scope structure
Plugin 'vim-scripts/taglist.vim' " list of tags for quick jump to definitions # require exuberant ctags utility - apt-get install exuberant-ctags
"Plugin 'vim-scripts/vcscommand.vim' " source-control commands
Plugin 'tpope/vim-fugitive' " git wrapper
Plugin 'pangloss/vim-javascript' " better javascript indentation
Plugin 'tpope/vim-rails' " rails syntax
Plugin 'kchmck/vim-coffee-script' " coffee-script syntax and supports
Plugin 'tpope/vim-surround' " quick brackets
Plugin 'bronson/vim-trailing-whitespace' " mark / quick remove trailing spaces
Plugin 'bling/vim-bufferline' " list buffers in command bar
Plugin 'benmills/vimux' " run commands in another tmux pane from vim
Plugin 'mhinz/vim-signify' " show VCS icon in VIM sign column
Plugin 'JarrodCTaylor/vim-shell-executor' " execute buffer in a split pane
Plugin 'tpope/vim-unimpaired' " pairs of mapping
Plugin 'vim-scripts/guicolorscheme.vim'
Plugin 'flazz/vim-colorschemes' " harvesting colorschemes on vim.org
Plugin 'vim-scripts/ShowMarks' " show marks on the sign bar
Plugin 'kylef/apiblueprint.vim' " syntax highlight and lint for API Blueprint (apiary.io)
Plugin 'fatih/vim-go' " Go development
Plugin 'digitaltoad/vim-jade' " Jade template syntax highlighting and indentation
Plugin 'vim-scripts/csv.vim' " Show .csv file in vim
Plugin 'vim-scripts/Vim-R-plugin' " Plugin for R language
Plugin 'jpalardy/vim-slime' " Grab some text and 'send' it to a GNU Screen / tmux / whimrepl session
Plugin 'vim-scripts/vimoutliner-colorscheme-fix' " Fix color for vimoutliner

" All of your Plugins must be added before the following line
call vundle#end()            " required
syntax on
filetype indent on
filetype plugin on
filetype plugin indent on    " required
"END Vundle

colorscheme Monokai
"autocmd BufEnter * colorscheme Monokai
"autocmd BufEnter *.otl colorscheme vo_dark

set number
set relativenumber
set autoindent
set smartindent
set pastetoggle=<F2>
" size of tabstop
set tabstop=2
set softtabstop=0

" size of an indent
set shiftwidth=2

" indent at beginning of a line
set smarttab

" always uses spaces instead of tab characters
set expandtab

" always show at least one line above/below the cursor
set scrolloff=1
" always show at least 5 character before/after the cursor
"set sidescrolloff=5

" Open split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Config database connections for dbext
let g:dbext_default_profile_testing_wfh = 'type=PGSQL:user=postgres:passwd=postgres:host=172.16.9.54:port=6432:dbname=testing_wheaton'
let g:dbext_default_profile_sync_unity = 'type=PGSQL:user=postgres:passwd=postgres:host=172.16.9.54:port=6432:dbname=sync_unity'
let g:dbext_default_profile_holy = 'type=PGSQL:user=postgres:passwd=postgres:host=172.16.9.54:port=6432:dbname=testing_holy_name_20140710'
let g:dbext_default_profile_solvedup = 'type=PGSQL:user=postgres:passwd=postgres:host=172.16.9.90:port=6432:dbname=viettp_solvedup'

"START vim airline
let g:airline_powerline_fonts = 1
let g:airline_theme = 'molokai'

let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#buffer_idx_mode = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#tabline#buffer_min_count = 2

let g:airline#extensions#hunks#enabled = 0

let g:airline#extensions#bufferline#enabled = 0
let g:airline#extensions#bufferline#overwrite_variables = 1
let g:bufferline_echo = 0
let g:bufferline_rotate = 1
let g:bufferline_fname_mod = ':f'
"END vim airline

""START powerline
"set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/

"" Always show statusline
set laststatus=2
set noshowmode

"" Use 256 colors
set t_Co=256
""END powerline

" Let CtrlP to use path mode to vim working directory as highest root
let g:ctrlp_working_path_mode = 'a'

" Configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1
let g:syntastic_enable_signs=1

" Configure ShowMarks highlights
highlight ShowMarksHLl cterm=bold ctermfg=yellow ctermbg=12 gui=bold guifg=blue guibg=lightblue
highlight ShowMarksHLu cterm=bold ctermfg=yellow ctermbg=12 gui=bold guifg=blue guibg=lightblue
highlight ShowMarksHLo cterm=bold ctermfg=green ctermbg=12 gui=bold guifg=blue guibg=lightblue
highlight ShowMarksHLm cterm=bold ctermfg=178 ctermbg=12 gui=bold guifg=blue guibg=lightblue
let g:showmarks_include="abcdefghijklmnopqrstuvwxyz"

map ]l :lnext
map [l :lprev

nmap <leader>tr :NERDTreeToggle<cr>

set rtp+=$GOPATH/src/github.com/golang/lint/misc/vim
au FileType go nmap <leader>r <Plug>(go-run)
autocmd BufWritePost,FileWritePost *.go execute 'Lint' | cwindow

" Configure vim-slime to send text to tmux
let g:slime_target="tmux"

" git commit messages
autocmd Filetype gitcommit setlocal spell textwidth=72


---
[**] .tmux.conf

###########################
#  Configuration
###########################

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# disable mouse
setw -g mode-mouse off

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on
set-window-option -g window-status-activity-attr bold,blink,underscore

# re-number windows when one is closed
set -g renumber-windows on

###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-j

# clear-history Ctrl+L and Ctrl+K to clear whole screen and scroll history
bind -n C-k clear-history

# clear screen when in server-liked terminal
#bind C-k send-keys -R

# window splitting
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# create 25% lower split
unbind t
bind t split-window -p 25

# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# copy top tmux buffer to clipboard
# Dependency: apt-get install xclip
bind y run-shell "tmux show-buffer | DISPLAY=:0 xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

###########################
# Status Bar
###########################

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=orange]#S#[fg=magenta] #I:#P#[default]'

# show hostname, date, time, and battery in right status bar
set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M #[fg=red]#(battery discharging)#[default]#(battery charging)'

#set -g status-right "#(wemux status_users)"

# load tmuxline.vim
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

###########################
# Colors
###########################

# color status bar
set -g status-bg colour235
set -g status-fg white

# dim window
set-window-option -g window-status-attr dim

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green
set-window-option -g window-status-current-attr bright

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# for Powerline
#run-shell "powerline-daemon -q"
#source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# use 256 term for pretty colors
set -g default-terminal "screen-256color"


---

